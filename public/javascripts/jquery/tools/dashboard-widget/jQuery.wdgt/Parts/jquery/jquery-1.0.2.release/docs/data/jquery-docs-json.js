[{"cat":"Core","desc":"Create a new jQuery Object","params":[],"short":"Create a new jQuery Object","examples":[],"constructor":[1],"tests":["ok( Array.prototype.push, \"Array.push()\" );\nok( Function.prototype.apply, \"Function.apply()\" );\nok( document.getElementById, \"getElementById\" );\nok( document.getElementsByTagName, \"getElementsByTagName\" );\nok( RegExp, \"RegExp\" );\nok( jQuery, \"jQuery\" );\nok( $, \"$()\" );"],"private":1,"name":"jQuery"},{"short":"This function accepts a string containing a CSS selector,\nbasic XPath, or raw HTML, which is then used to match a set of elements.","params":[{"type":"String","desc":"An expression to search with, or a string of HTML to create on the fly.","name":"expr"}],"desc":"This function accepts a string containing a CSS selector,\nbasic XPath, or raw HTML, which is then used to match a set of elements.\nThe HTML string is different from the traditional selectors in that\nit creates the DOM elements representing that HTML string, on the fly,\nto be (assumedly) inserted into the document later.\n\nThe core functionality of jQuery centers around this function.\nEverything in jQuery is based upon this, or uses this in some way.\nThe most basic use of this function is to pass in an expression\n(usually consisting of CSS or XPath), which then finds all matching\nelements and remembers them for later use.\n\nBy default, $() looks for DOM elements within the context of the\ncurrent HTML document.","tests":[],"type":"jQuery","name":"$","examples":[{"desc":"This finds all p elements that are children of a div element.","before":"&lt;p&gt;one&lt;/p&gt; &lt;div&gt;&lt;p&gt;two&lt;/p&gt;&lt;/div&gt; &lt;p&gt;three&lt;/p&gt;","code":"$(\"div &gt; p\")","result":"[ &lt;p&gt;two&lt;/p&gt; ]"},{"desc":"Creates a div element (and all of its contents) dynamically, \nand appends it to the element with the ID of body. Internally, an\nelement is created and it's innerHTML property set to the given markup.\nIt is therefore both quite flexible and limited.","code":"$(\"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;\").appendTo(\"#body\")"}],"cat":"Core"},{"short":"This function accepts a string containing a CSS selector, or\nbasic XPath, which is then used to match a set of elements with the\ncontext of the specified DOM element, or document","params":[{"type":"String","desc":"An expression to search with.","name":"expr"},{"type":"Element","desc":"A DOM Element, or Document, representing the base context.","name":"context"}],"desc":"This function accepts a string containing a CSS selector, or\nbasic XPath, which is then used to match a set of elements with the\ncontext of the specified DOM element, or document","tests":[],"type":"jQuery","name":"$","examples":[{"desc":"This finds all div elements within the specified XML document.","code":"$(\"div\", xml.responseXML)"}],"cat":"Core"},{"short":"Wrap jQuery functionality around a specific DOM Element.","params":[{"type":"Element","desc":"A DOM element to be encapsulated by a jQuery object.","name":"elem"}],"desc":"Wrap jQuery functionality around a specific DOM Element.\nThis function also accepts XML Documents and Window objects\nas valid arguments (even though they are not DOM Elements).","tests":[],"type":"jQuery","name":"$","examples":[{"code":"$(document).find(\"div &gt; p\")","result":"[ &lt;p&gt;two&lt;/p&gt; ]","before":"&lt;p&gt;one&lt;/p&gt; &lt;div&gt;&lt;p&gt;two&lt;/p&gt;&lt;/div&gt; &lt;p&gt;three&lt;/p&gt;"},{"desc":"Sets the background color of the page to black.","code":"$(document.body).background( \"black\" );"}],"cat":"Core"},{"short":"Wrap jQuery functionality around a set of DOM Elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of DOM elements to be encapsulated by a jQuery object.","name":"elems"}],"desc":"Wrap jQuery functionality around a set of DOM Elements.","tests":[],"type":"jQuery","name":"$","examples":[{"desc":"Hides all the input elements within a form","code":"$( myForm.elements ).hide()"}],"cat":"Core"},{"short":"A shorthand for $(document).","params":[{"type":"Function","desc":"The function to execute when the DOM is ready.","name":"fn"}],"desc":"A shorthand for $(document).ready(), allowing you to bind a function\nto be executed when the DOM document has finished loading. This function\nbehaves just like $(document).ready(), in that it should be used to wrap\nall of the other $() operations on your page. While this function is,\ntechnically, chainable - there really isn't much use for chaining against it.\nYou can have as many $(document).ready events on your page as you like.","tests":[],"type":"jQuery","name":"$","examples":[{"desc":"Executes the function when the DOM is ready to be used.","code":"$(function(){\n  // Document is ready\n});"}],"cat":"Core"},{"short":"A means of creating a cloned copy of a jQuery object.","params":[{"type":"jQuery","desc":"The jQuery object to be cloned.","name":"obj"}],"desc":"A means of creating a cloned copy of a jQuery object. This function\ncopies the set of matched elements from one jQuery object and creates\nanother, new, jQuery object containing the same elements.","tests":[],"type":"jQuery","name":"$","examples":[{"desc":"Locates all p elements with all div elements, without disrupting the original jQuery object contained in 'div' (as would normally be the case if a simple div.find(\"p\") was done).","code":"var div = $(\"div\");\n$( div ).find(\"p\");"}],"cat":"Core"},{"property":1,"cat":"Core","type":"String","desc":"The current version of jQuery.","params":[],"short":"The current version of jQuery.","examples":[],"tests":[],"private":1,"name":"jquery"},{"property":1,"cat":"Core","type":"Number","desc":"The number of elements currently matched.","params":[],"short":"The number of elements currently matched.","examples":[{"code":"$(\"img\").length;","result":"2","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":["ok( $(\"div\").length == 2, \"Get Number of Elements Found\" );"],"name":"length"},{"short":"The number of elements currently matched.","params":[],"desc":"The number of elements currently matched.","tests":["ok( $(\"div\").size() == 2, \"Get Number of Elements Found\" );"],"type":"Number","name":"size","examples":[{"code":"$(\"img\").size();","result":"2","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"cat":"Core"},{"short":"Access all matched elements.","params":[],"desc":"Access all matched elements. This serves as a backwards-compatible\nway of accessing all matched elements (other than the jQuery object\nitself, which is, in fact, an array of elements).","tests":["isSet( $(\"div\").get(), q(\"main\",\"foo\"), \"Get All Elements\" );"],"type":"Array&lt;Element&gt;","name":"get","examples":[{"code":"$(\"img\").get();","result":"[ &lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt; ]","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"cat":"Core"},{"short":"Access a single matched element.","params":[{"type":"Number","desc":"Access the element in the Nth position.","name":"num"}],"desc":"Access a single matched element. num is used to access the\nNth element matched.","tests":["ok( $(\"div\").get(0) == document.getElementById(\"main\"), \"Get A Single Element\" );"],"type":"Element","name":"get","examples":[{"code":"$(\"img\").get(1);","result":"[ &lt;img src=\"test1.jpg\"/&gt; ]","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"cat":"Core"},{"cat":"Core","type":"jQuery","desc":"Set the jQuery object to an array of elements.","params":[{"type":"Elements","desc":"An array of elements","name":"elems"}],"short":"Set the jQuery object to an array of elements.","examples":[{"code":"$(\"img\").get([ document.body ]);","result":"$(\"img\").get() == [ document.body ]"}],"tests":[],"private":1,"name":"get"},{"short":"Execute a function within the context of every matched element.","params":[{"type":"Function","desc":"A function to execute","name":"fn"}],"desc":"Execute a function within the context of every matched element.\nThis means that every time the passed-in function is executed\n(which is once for every element matched) the 'this' keyword\npoints to the specific element.\n\nAdditionally, the function, when executed, is passed a single\nargument representing the position of the element in the matched\nset.","tests":["var div = $(\"div\");\ndiv.each(function(){this.foo = 'zoo';});\nvar pass = true;\nfor ( var i = 0; i &lt; div.size(); i++ ) {\n  if ( div.get(i).foo != \"zoo\" ) pass = false;\n}\nok( pass, \"Execute a function, Relative\" );"],"type":"jQuery","name":"each","examples":[{"code":"$(\"img\").each(function(){\n  this.src = \"test.jpg\";\n});","result":"&lt;img src=\"test.jpg\"/&gt; &lt;img src=\"test.jpg\"/&gt;","before":"&lt;img/&gt; &lt;img/&gt;"},{"code":"$(\"img\").each(function(i){\n  alert( \"Image #\" + i + \" is \" + this );\n});","result":"&lt;img src=\"test.jpg\"/&gt; &lt;img src=\"test.jpg\"/&gt;","before":"&lt;img/&gt; &lt;img/&gt;"}],"cat":"Core"},{"short":"Searches every matched element for the object and returns\nthe index of the element, if found, starting with zero.","params":[{"type":"Object","desc":"Object to search for","name":"obj"}],"desc":"Searches every matched element for the object and returns\nthe index of the element, if found, starting with zero. \nReturns -1 if the object wasn't found.","tests":["ok( $([window, document]).index(window) == 0, \"Check for index of elements\" );\nok( $([window, document]).index(document) == 1, \"Check for index of elements\" );\nvar inputElements = $('#radio1,#radio2,#check1,#check2');\nok( inputElements.index(document.getElementById('radio1')) == 0, \"Check for index of elements\" );\nok( inputElements.index(document.getElementById('radio2')) == 1, \"Check for index of elements\" );\nok( inputElements.index(document.getElementById('check1')) == 2, \"Check for index of elements\" );\nok( inputElements.index(document.getElementById('check2')) == 3, \"Check for index of elements\" );\nok( inputElements.index(window) == -1, \"Check for not found index\" );\nok( inputElements.index(document) == -1, \"Check for not found index\" );"],"type":"Number","name":"index","examples":[{"code":"$(\"*\").index(document.getElementById('foobar'))","result":"0","before":"&lt;div id=\"foobar\"&gt;&lt;/div&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;"},{"code":"$(\"*\").index(document.getElementById('foo'))","result":"2","before":"&lt;div id=\"foobar\"&gt;&lt;/div&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;"},{"code":"$(\"*\").index(document.getElementById('bar'))","result":"-1","before":"&lt;div id=\"foobar\"&gt;&lt;/div&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;"}],"cat":"Core"},{"short":"Access a property on the first matched element.","params":[{"type":"String","desc":"The name of the property to access.","name":"name"}],"desc":"Access a property on the first matched element.\nThis method makes it easy to retrieve a property value\nfrom the first matched element.","tests":["ok( $('#text1').attr('value') == \"Test\", 'Check for value attribute' );\nok( $('#text1').attr('type') == \"text\", 'Check for type attribute' );\nok( $('#radio1').attr('type') == \"radio\", 'Check for type attribute' );\nok( $('#check1').attr('type') == \"checkbox\", 'Check for type attribute' );\nok( $('#simon1').attr('rel') == \"bookmark\", 'Check for rel attribute' );\nok( $('#google').attr('title') == \"Google!\", 'Check for title attribute' );\nok( $('#mark').attr('hreflang') == \"en\", 'Check for hreflang attribute' );\nok( $('#en').attr('lang') == \"en\", 'Check for lang attribute' );\nok( $('#simon').attr('class') == \"blog link\", 'Check for class attribute' );\nok( $('#name').attr('name') == \"name\", 'Check for name attribute' );\nok( $('#text1').attr('name') == \"action\", 'Check for name attribute' );\nok( $('#form').attr('action').indexOf(\"formaction\") &gt;= 0, 'Check for action attribute' );"],"type":"Object","name":"attr","examples":[{"code":"$(\"img\").attr(\"src\");","result":"test.jpg","before":"&lt;img src=\"test.jpg\"/&gt;"}],"cat":"DOM"},{"short":"Set a hash of key/value object properties to all matched elements.","params":[{"type":"Hash","desc":"A set of key/value pairs to set as object properties.","name":"prop"}],"desc":"Set a hash of key/value object properties to all matched elements.\nThis serves as the best way to set a large number of properties\non all matched elements.","tests":["var pass = true;\n$(\"div\").attr({foo: 'baz', zoo: 'ping'}).each(function(){\n  if ( this.getAttribute('foo') != \"baz\" &amp;&amp; this.getAttribute('zoo') != \"ping\" ) pass = false;\n});\nok( pass, \"Set Multiple Attributes\" );"],"type":"jQuery","name":"attr","examples":[{"code":"$(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });","result":"&lt;img src=\"test.jpg\" alt=\"Test Image\"/&gt;","before":"&lt;img/&gt;"}],"cat":"DOM"},{"short":"Set a single property to a value, on all matched elements.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"Object","desc":"The value to set the property to.","name":"value"}],"desc":"Set a single property to a value, on all matched elements.","tests":["var div = $(\"div\");\ndiv.attr(\"foo\", \"bar\");\nvar pass = true;\nfor ( var i = 0; i &lt; div.size(); i++ ) {\n  if ( div.get(i).getAttribute('foo') != \"bar\" ) pass = false;\n}\nok( pass, \"Set Attribute\" );\n\n$(\"#name\").attr('name', 'something');\nok( $(\"#name\").name() == 'something', 'Set name attribute' );\n$(\"#check2\").attr('checked', true);\nok( document.getElementById('check2').checked == true, 'Set checked attribute' );\n$(\"#check2\").attr('checked', false);\nok( document.getElementById('check2').checked == false, 'Set checked attribute' );"],"type":"jQuery","name":"attr","examples":[{"code":"$(\"img\").attr(\"src\",\"test.jpg\");","result":"&lt;img src=\"test.jpg\"/&gt;","before":"&lt;img/&gt;"}],"cat":"DOM"},{"short":"Access a style property on the first matched element.","params":[{"type":"String","desc":"The name of the property to access.","name":"name"}],"desc":"Access a style property on the first matched element.\nThis method makes it easy to retrieve a style property value\nfrom the first matched element.","tests":["ok( $('#main').css(\"display\") == 'none', 'Check for css property \"display\"');"],"type":"Object","name":"css","examples":[{"desc":"Retrieves the color style of the first paragraph","before":"&lt;p style=\"color:red;\"&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"color\");","result":"red"},{"desc":"Retrieves the font-weight style of the first paragraph.\nNote that for all style properties with a dash (like 'font-weight'), you have to\nwrite it in camelCase. In other words: Every time you have a '-' in a \nproperty, remove it and replace the next character with an uppercase \nrepresentation of itself. Eg. fontWeight, fontSize, fontFamily, borderWidth,\nborderStyle, borderBottomWidth etc.","before":"&lt;p style=\"font-weight: bold;\"&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"fontWeight\");","result":"bold"}],"cat":"CSS"},{"short":"Set a hash of key/value style properties to all matched elements.","params":[{"type":"Hash","desc":"A set of key/value pairs to set as style properties.","name":"prop"}],"desc":"Set a hash of key/value style properties to all matched elements.\nThis serves as the best way to set a large number of style properties\non all matched elements.","tests":["ok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n$('#foo').css({display: 'none'});\nok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n$('#foo').css({display: 'block'});\nok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');"],"type":"jQuery","name":"css","examples":[{"code":"$(\"p\").css({ color: \"red\", background: \"blue\" });","result":"&lt;p style=\"color:red; background:blue;\"&gt;Test Paragraph.&lt;/p&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set a single style property to a value, on all matched elements.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"Object","desc":"The value to set the property to.","name":"value"}],"desc":"Set a single style property to a value, on all matched elements.","tests":["ok( $('#foo').is(':visible'), 'Modifying CSS display: Assert element is visible');\n$('#foo').css('display', 'none');\nok( !$('#foo').is(':visible'), 'Modified CSS display: Assert element is hidden');\n$('#foo').css('display', 'block');\nok( $('#foo').is(':visible'), 'Modified CSS display: Assert element is visible');"],"type":"jQuery","name":"css","examples":[{"desc":"Changes the color of all paragraphs to red","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"color\",\"red\");","result":"&lt;p style=\"color:red;\"&gt;Test Paragraph.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Retrieve the text contents of all matched elements.","params":[],"desc":"Retrieve the text contents of all matched elements. The result is\na string that contains the combined text contents of all matched\nelements. This method works on both HTML and XML documents.","tests":["var expected = \"This link has class=\\\"blog\\\": Simon Willison's Weblog\";\nok( $('#sap').text() == expected, 'Check for merged text of more then one element.' );"],"type":"String","name":"text","examples":[{"code":"$(\"p\").text();","result":"Test Paragraph.","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"cat":"DOM"},{"short":"Wrap all matched elements with a structure of other elements.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and wrapped around the target.","name":"html"}],"desc":"Wrap all matched elements with a structure of other elements.\nThis wrapping process is most useful for injecting additional\nstucture into a document, without ruining the original semantic\nqualities of a document.\n\nThis works by going through the first element\nprovided (which is generated, on the fly, from the provided HTML)\nand finds the deepest ancestor element within its\nstructure - it is that element that will en-wrap everything else.\n\nThis does not work with elements that contain text. Any necessary text\nmust be added after the wrapping is done.","tests":["var defaultText = 'Try them out:'\nvar result = $('#first').wrap('&lt;div class=\"red\"&gt;&lt;span&gt;&lt;/span&gt;&lt;/div&gt;').text();\nok( defaultText == result, 'Check for wrapping of on-the-fly html' );\nok( $('#first').parent().parent().is('.red'), 'Check if wrapper has class \"red\"' );"],"type":"jQuery","name":"wrap","examples":[{"code":"$(\"p\").wrap(\"&lt;div class='wrap'&gt;&lt;/div&gt;\");","result":"&lt;div class='wrap'&gt;&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Wrap all matched elements with a structure of other elements.","params":[{"type":"Element","desc":"A DOM element that will be wrapped.","name":"elem"}],"desc":"Wrap all matched elements with a structure of other elements.\nThis wrapping process is most useful for injecting additional\nstucture into a document, without ruining the original semantic\nqualities of a document.\n\nThis works by going through the first element\nprovided and finding the deepest ancestor element within its\nstructure - it is that element that will en-wrap everything else.\n\nThis does not work with elements that contain text. Any necessary text\nmust be added after the wrapping is done.","tests":["var defaultText = 'Try them out:'\nvar result = $('#first').wrap(document.getElementById('empty')).parent();\nok( result.is('ol'), 'Check for element wrapping' );\nok( result.text() == defaultText, 'Check for element wrapping' );"],"type":"jQuery","name":"wrap","examples":[{"code":"$(\"p\").wrap( document.getElementById('content') );","result":"&lt;div id=\"content\"&gt;&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;div id=\"content\"&gt;&lt;/div&gt;"}],"cat":"DOM/Manipulation"},{"short":"Append any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"desc":"Append any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","tests":["var defaultText = 'Try them out:'\nvar result = $('#first').append('&lt;b&gt;buga&lt;/b&gt;');\nok( result.text() == defaultText + 'buga', 'Check if text appending works' );"],"type":"jQuery","name":"append","examples":[{"code":"$(\"p\").append(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;I would like to say: &lt;b&gt;Hello&lt;/b&gt;&lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Append an element to the inside of all matched elements.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"desc":"Append an element to the inside of all matched elements.\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","tests":["var expected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:\";\n$('#sap').append(document.getElementById('first'));\nok( expected == $('#sap').text(), \"Check for appending of element\" );"],"type":"jQuery","name":"append","examples":[{"code":"$(\"p\").append( $(\"#foo\")[0] );","result":"&lt;p&gt;I would like to say: &lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"}],"cat":"DOM/Manipulation"},{"short":"Append any number of elements to the inside of all matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"desc":"Append any number of elements to the inside of all matched elements.\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","tests":["var expected = \"This link has class=\\\"blog\\\": Simon Willison's WeblogTry them out:Yahoo\";\n$('#sap').append([document.getElementById('first'), document.getElementById('yahoo')]);\nok( expected == $('#sap').text(), \"Check for appending of array of elements\" );"],"type":"jQuery","name":"append","examples":[{"code":"$(\"p\").append( $(\"b\") );","result":"&lt;p&gt;I would like to say: &lt;b&gt;Hello&lt;/b&gt;&lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"cat":"DOM/Manipulation"},{"short":"Prepend any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"desc":"Prepend any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.\nThis operation is the best way to insert dynamically created elements\ninside, at the beginning, of all the matched element.","tests":["var defaultText = 'Try them out:'\nvar result = $('#first').prepend('&lt;b&gt;buga&lt;/b&gt;');\nok( result.text() == 'buga' + defaultText, 'Check if text prepending works' );"],"type":"jQuery","name":"prepend","examples":[{"code":"$(\"p\").prepend(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Prepend an element to the inside of all matched elements.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"desc":"Prepend an element to the inside of all matched elements.\nThis operation is the best way to insert an element inside, at the\nbeginning, of all the matched element.","tests":["var expected = \"Try them out:This link has class=\\\"blog\\\": Simon Willison's Weblog\";\n$('#sap').prepend(document.getElementById('first'));\nok( expected == $('#sap').text(), \"Check for prepending of element\" );"],"type":"jQuery","name":"prepend","examples":[{"code":"$(\"p\").prepend( $(\"#foo\")[0] );","result":"&lt;p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"}],"cat":"DOM/Manipulation"},{"short":"Prepend any number of elements to the inside of all matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"desc":"Prepend any number of elements to the inside of all matched elements.\nThis operation is the best way to insert a set of elements inside, at the\nbeginning, of all the matched element.","tests":["var expected = \"Try them out:YahooThis link has class=\\\"blog\\\": Simon Willison's Weblog\";\n$('#sap').prepend([document.getElementById('first'), document.getElementById('yahoo')]);\nok( expected == $('#sap').text(), \"Check for prepending of array of elements\" );"],"type":"jQuery","name":"prepend","examples":[{"code":"$(\"p\").prepend( $(\"b\") );","result":"&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert any number of dynamically generated elements before each of the\nmatched elements.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"desc":"Insert any number of dynamically generated elements before each of the\nmatched elements.","tests":["var expected = 'This is a normal link: bugaYahoo';\n$('#yahoo').before('&lt;b&gt;buga&lt;/b&gt;');\nok( expected == $('#en').text(), 'Insert String before' );"],"type":"jQuery","name":"before","examples":[{"code":"$(\"p\").before(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert an element before each of the matched elements.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"desc":"Insert an element before each of the matched elements.","tests":["var expected = \"This is a normal link: Try them out:Yahoo\";\n$('#yahoo').before(document.getElementById('first'));\nok( expected == $('#en').text(), \"Insert element before\" );"],"type":"jQuery","name":"before","examples":[{"code":"$(\"p\").before( $(\"#foo\")[0] );","result":"&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert any number of elements before each of the matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"desc":"Insert any number of elements before each of the matched elements.","tests":["var expected = \"This is a normal link: Try them out:diveintomarkYahoo\";\n$('#yahoo').before([document.getElementById('first'), document.getElementById('mark')]);\nok( expected == $('#en').text(), \"Insert array of elements before\" );"],"type":"jQuery","name":"before","examples":[{"code":"$(\"p\").before( $(\"b\") );","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert any number of dynamically generated elements after each of the\nmatched elements.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"desc":"Insert any number of dynamically generated elements after each of the\nmatched elements.","tests":["var expected = 'This is a normal link: Yahoobuga';\n$('#yahoo').after('&lt;b&gt;buga&lt;/b&gt;');\nok( expected == $('#en').text(), 'Insert String after' );"],"type":"jQuery","name":"after","examples":[{"code":"$(\"p\").after(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert an element after each of the matched elements.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"desc":"Insert an element after each of the matched elements.","tests":["var expected = \"This is a normal link: YahooTry them out:\";\n$('#yahoo').after(document.getElementById('first'));\nok( expected == $('#en').text(), \"Insert element after\" );"],"type":"jQuery","name":"after","examples":[{"code":"$(\"p\").after( $(\"#foo\")[0] );","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;","before":"&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert any number of elements after each of the matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"desc":"Insert any number of elements after each of the matched elements.","tests":["var expected = \"This is a normal link: YahooTry them out:diveintomark\";\n$('#yahoo').after([document.getElementById('first'), document.getElementById('mark')]);\nok( expected == $('#en').text(), \"Insert array of elements after\" );"],"type":"jQuery","name":"after","examples":[{"code":"$(\"p\").after( $(\"b\") );","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","before":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"End the most recent 'destructive' operation, reverting the list of matched elements\nback to its previous state.","params":[],"desc":"End the most recent 'destructive' operation, reverting the list of matched elements\nback to its previous state. After an end operation, the list of matched elements will\nrevert to the last state of matched elements.","tests":["ok( 'Yahoo' == $('#yahoo').parent().end().text(), 'Check for end' );"],"type":"jQuery","name":"end","examples":[{"code":"$(\"p\").find(\"span\").end();","result":"$(\"p\").find(\"span\").end() == [ &lt;p&gt;...&lt;/p&gt; ]","before":"&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;, how are you?&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Searches for all elements that match the specified expression.","params":[{"type":"String","desc":"An expression to search with.","name":"expr"}],"desc":"Searches for all elements that match the specified expression.\nThis method is the optimal way of finding additional descendant\nelements with which to process.\n\nAll searching is done using a jQuery expression. The expression can be\nwritten using CSS 1-3 Selector syntax, or basic XPath.","tests":["ok( 'Yahoo' == $('#foo').find('.blogTest').text(), 'Check for find' );"],"type":"jQuery","name":"find","examples":[{"code":"$(\"p\").find(\"span\");","result":"$(\"p\").find(\"span\") == [ &lt;span&gt;Hello&lt;/span&gt; ]","before":"&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;, how are you?&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Create cloned copies of all matched DOM Elements.","params":[],"desc":"Create cloned copies of all matched DOM Elements. This does\nnot create a cloned copy of this particular jQuery object,\ninstead it creates duplicate copies of all DOM Elements.\nThis is useful for moving copies of the elements to another\nlocation in the DOM.","tests":["ok( 'This is a normal link: Yahoo' == $('#en').text(), 'Assert text for #en' );\nvar clone = $('#yahoo').clone();\nok( 'Try them out:Yahoo' == $('#first').append(clone).text(), 'Check for clone' );\nok( 'This is a normal link: Yahoo' == $('#en').text(), 'Reassert text for #en' );"],"type":"jQuery","name":"clone","examples":[{"code":"$(\"b\").clone().prependTo(\"p\");","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;, how are you?&lt;/p&gt;","before":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;, how are you?&lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Removes all elements from the set of matched elements that do not\nmatch the specified expression.","params":[{"type":"String","desc":"An expression to search with.","name":"expr"}],"desc":"Removes all elements from the set of matched elements that do not\nmatch the specified expression. This method is used to narrow down\nthe results of a search.\n\nAll searching is done using a jQuery expression. The expression\ncan be written using CSS 1-3 Selector syntax, or basic XPath.","tests":["isSet( $(\"input\").filter(\":checked\").get(), q(\"radio2\", \"check1\"), \"Filter elements\" );","$(\"input\").filter(\":checked\",function(i){ \n  ok( this == q(\"radio2\", \"check1\")[i], \"Filter elements, context\" );\n});","$(\"#main &gt; p#ap &gt; a\").filter(\"#foobar\",function(){},function(i){\n  ok( this == q(\"google\",\"groups\", \"mark\")[i], \"Filter elements, else context\" );\n});"],"type":"jQuery","name":"filter","examples":[{"code":"$(\"p\").filter(\".selected\")","result":"$(\"p\").filter(\".selected\") == [ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"selected\"&gt;Hello&lt;/p&gt;&lt;p&gt;How are you?&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Removes all elements from the set of matched elements that do not\nmatch at least one of the expressions passed to the function.","params":[{"type":"Array&lt;String&gt;","desc":"A set of expressions to evaluate against","name":"exprs"}],"desc":"Removes all elements from the set of matched elements that do not\nmatch at least one of the expressions passed to the function. This\nmethod is used when you want to filter the set of matched elements\nthrough more than one expression.\n\nElements will be retained in the jQuery object if they match at\nleast one of the expressions passed.","tests":[],"type":"jQuery","name":"filter","examples":[{"code":"$(\"p\").filter([\".selected\", \":first\"])","result":"$(\"p\").filter([\".selected\", \":first\"]) == [ &lt;p&gt;Hello&lt;/p&gt;, &lt;p class=\"selected\"&gt;And Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;p class=\"selected\"&gt;And Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Removes the specified Element from the set of matched elements.","params":[{"type":"Element","desc":"An element to remove from the set","name":"el"}],"desc":"Removes the specified Element from the set of matched elements. This\nmethod is used to remove a single Element from a jQuery object.","tests":[],"type":"jQuery","name":"not","examples":[{"code":"$(\"p\").not( document.getElementById(\"selected\") )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p id=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Removes elements matching the specified expression from the set\nof matched elements.","params":[{"type":"String","desc":"An expression with which to remove matching elements","name":"expr"}],"desc":"Removes elements matching the specified expression from the set\nof matched elements. This method is used to remove one or more\nelements from a jQuery object.","tests":["ok($(\"#main &gt; p#ap &gt; a\").not(\"#google\").length == 2, \".not\")"],"type":"jQuery","name":"not","examples":[{"code":"$(\"p\").not(\"#selected\")","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p id=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Adds the elements matched by the expression to the jQuery object.","params":[{"type":"String","desc":"An expression whose matched elements are added","name":"expr"}],"desc":"Adds the elements matched by the expression to the jQuery object. This\ncan be used to concatenate the result sets of two expressions.","tests":[],"type":"jQuery","name":"add","examples":[{"code":"$(\"p\").add(\"span\")","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Adds each of the Elements in the array to the set of matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of Elements to add","name":"els"}],"desc":"Adds each of the Elements in the array to the set of matched elements.\nThis is used to add a set of Elements to a jQuery object.","tests":[],"type":"jQuery","name":"add","examples":[{"code":"$(\"p\").add([document.getElementById(\"a\"), document.getElementById(\"b\")])","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;, &lt;span id=\"b\"&gt;And Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;&lt;span id=\"b\"&gt;And Again&lt;/span&gt;&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Adds a single Element to the set of matched elements.","params":[{"type":"Element","desc":"An Element to add","name":"el"}],"desc":"Adds a single Element to the set of matched elements. This is used to\nadd a single Element to a jQuery object.","tests":[],"type":"jQuery","name":"add","examples":[{"code":"$(\"p\").add( document.getElementById(\"a\") )","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span id=\"a\"&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Checks the current selection against an expression and returns true,\nif the selection fits the given expression.","params":[{"type":"String","desc":"The expression with which to filter","name":"expr"}],"desc":"Checks the current selection against an expression and returns true,\nif the selection fits the given expression. Does return false, if the\nselection does not fit or the expression is not valid.","tests":["ok( $('#form').is('form'), 'Check for element: A form must be a form' );\nok( !$('#form').is('div'), 'Check for element: A form is not a div' );\nok( $('#mark').is('.blog'), 'Check for class: Expected class \"blog\"' );\nok( !$('#mark').is('.link'), 'Check for class: Did not expect class \"link\"' );\nok( $('#simon').is('.blog.link'), 'Check for multiple classes: Expected classes \"blog\" and \"link\"' );\nok( !$('#simon').is('.blogTest'), 'Check for multiple classes: Expected classes \"blog\" and \"link\", but not \"blogTest\"' );\nok( $('#en').is('[@lang=\"en\"]'), 'Check for attribute: Expected attribute lang to be \"en\"' );\nok( !$('#en').is('[@lang=\"de\"]'), 'Check for attribute: Expected attribute lang to be \"en\", not \"de\"' );\nok( $('#text1').is('[@type=\"text\"]'), 'Check for attribute: Expected attribute type to be \"text\"' );\nok( !$('#text1').is('[@type=\"radio\"]'), 'Check for attribute: Expected attribute type to be \"text\", not \"radio\"' );\nok( $('#text2').is(':disabled'), 'Check for pseudoclass: Expected to be disabled' );\nok( !$('#text1').is(':disabled'), 'Check for pseudoclass: Expected not disabled' );\nok( $('#radio2').is(':checked'), 'Check for pseudoclass: Expected to be checked' );\nok( !$('#radio1').is(':checked'), 'Check for pseudoclass: Expected not checked' );\nok( $('#foo').is('[p]'), 'Check for child: Expected a child \"p\" element' );\nok( !$('#foo').is('[ul]'), 'Check for child: Did not expect \"ul\" element' );\nok( $('#foo').is('[p][a][code]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements' );\nok( !$('#foo').is('[p][a][code][ol]'), 'Check for childs: Expected \"p\", \"a\" and \"code\" child elements, but no \"ol\"' );\nok( !$('#foo').is(0), 'Expected false for an invalid expression - 0' );\nok( !$('#foo').is(null), 'Expected false for an invalid expression - null' );\nok( !$('#foo').is(''), 'Expected false for an invalid expression - \"\"' );\nok( !$('#foo').is(undefined), 'Expected false for an invalid expression - undefined' );"],"type":"Boolean","name":"is","examples":[{"desc":"Returns true, because the parent of the input is a form element","before":"&lt;form&gt;&lt;input type=\"checkbox\" /&gt;&lt;/form&gt;","code":"$(\"input[@type='checkbox']\").parent().is(\"form\")","result":"true"},{"desc":"Returns false, because the parent of the input is a p element","before":"&lt;form&gt;&lt;p&gt;&lt;input type=\"checkbox\" /&gt;&lt;/p&gt;&lt;/form&gt;","code":"$(\"input[@type='checkbox']\").parent().is(\"form\")","result":"false"},{"desc":"An invalid expression always returns false.","before":"&lt;form&gt;&lt;/form&gt;","code":"$(\"form\").is(null)","result":"false"}],"cat":"DOM/Traversing"},{"cat":"Core","type":"jQuery","desc":"","params":[{"type":"Array","desc":"","name":"args"},{"type":"Boolean","desc":"","name":"table"},{"type":"Number","desc":"","name":"int"},{"type":"Function","desc":"The function doing the DOM manipulation.","name":"fn"}],"short":"","examples":[],"tests":[],"private":1,"name":"domManip"},{"cat":"Core","type":"jQuery","desc":"","params":[{"type":"Array","desc":"","name":"a"},{"type":"Array","desc":"","name":"args"}],"short":"","examples":[],"tests":[],"private":1,"name":"pushStack"},{"cat":"Core","type":"Object","desc":"Extends the jQuery object itself. Can be used to add both static\nfunctions and plugin methods.","params":[{"type":"Object","desc":"","name":"obj"}],"short":"Extends the jQuery object itself.","examples":[{"desc":"Adds two plugin methods.","code":"$.fn.extend({\n  check: function() {\n    this.each(function() { this.checked = true; });\n  ),\n  uncheck: function() {\n    this.each(function() { this.checked = false; });\n  }\n});\n$(\"input[@type=checkbox]\").check();\n$(\"input[@type=radio]\").uncheck();"}],"tests":[],"private":1,"name":"extend"},{"short":"Extend one object with another, returning the original,\nmodified, object.","params":[{"type":"Object","desc":"The object to extend","name":"obj"},{"type":"Object","desc":"The object that will be merged into the first.","name":"prop"}],"desc":"Extend one object with another, returning the original,\nmodified, object. This is a great utility for simple inheritance.","tests":["var settings = { xnumber1: 5, xnumber2: 7, xstring1: \"peter\", xstring2: \"pan\" };\nvar options =     { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" };\nvar optionsCopy = { xnumber2: 1, xstring2: \"x\", xxx: \"newstring\" };\nvar merged = { xnumber1: 5, xnumber2: 1, xstring1: \"peter\", xstring2: \"x\", xxx: \"newstring\" };\njQuery.extend(settings, options);\nisSet( settings, merged, \"Check if extended: settings must be extended\" );\nisSet ( options, optionsCopy, \"Check if not modified: options must not be modified\" );"],"type":"Object","name":"$.extend","examples":[{"code":"var settings = { validate: false, limit: 5, name: \"foo\" };\nvar options = { validate: true, name: \"bar\" };\njQuery.extend(settings, options);","result":"settings == { validate: true, limit: 5, name: \"bar\" }"}],"cat":"Javascript"},{"cat":"Core","type":"undefined","desc":"","params":[],"short":"","examples":[],"tests":[],"private":1,"name":"init"},{"short":"A generic iterator function, which can be used to seemlessly\niterate over both objects and arrays.","params":[{"type":"Object","desc":"The object, or array, to iterate over.","name":"obj"},{"type":"Function","desc":"The function that will be executed on every object.","name":"fn"}],"desc":"A generic iterator function, which can be used to seemlessly\niterate over both objects and arrays. This function is not the same\nas $().each() - which is used to iterate, exclusively, over a jQuery\nobject. This function can be used to iterate over anything.","tests":[],"type":"Object","name":"$.each","examples":[{"desc":"This is an example of iterating over the items in an array, accessing both the current item and its index.","code":"$.each( [0,1,2], function(i){\n  alert( \"Item #\" + i + \": \" + this );\n});"},{"desc":"This is an example of iterating over the properties in an Object, accessing both the current item and its key.","code":"$.each( { name: \"John\", lang: \"JS\" }, function(i){\n  alert( \"Name: \" + i + \", Value: \" + this );\n});"}],"cat":"Javascript"},{"cat":"Core","type":"Array&lt;Element&gt;","desc":"","params":[],"short":"","examples":[],"tests":["t( \"Element Selector\", \"div\", [\"main\",\"foo\"] );\nt( \"Element Selector\", \"body\", [\"body\"] );\nt( \"Element Selector\", \"html\", [\"html\"] );\nok( $(\"*\").size() &gt;= 30, \"Element Selector\" );\nt( \"Parent Element\", \"div div\", [\"foo\"] );\n\nt( \"ID Selector\", \"#body\", [\"body\"] );\nt( \"ID Selector w/ Element\", \"body#body\", [\"body\"] );\nt( \"ID Selector w/ Element\", \"ul#first\", [] );\n\nt( \"Class Selector\", \".blog\", [\"mark\",\"simon\"] );\nt( \"Class Selector\", \".blog.link\", [\"simon\"] );\nt( \"Class Selector w/ Element\", \"a.blog\", [\"mark\",\"simon\"] );\nt( \"Parent Class Selector\", \"p .blog\", [\"mark\",\"simon\"] );\n\nt( \"Comma Support\", \"a.blog, div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\nt( \"Comma Support\", \"a.blog , div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\nt( \"Comma Support\", \"a.blog ,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\nt( \"Comma Support\", \"a.blog,div\", [\"mark\",\"simon\",\"main\",\"foo\"] );\n\nt( \"Child\", \"p &gt; a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\nt( \"Child\", \"p&gt; a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\nt( \"Child\", \"p &gt;a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\nt( \"Child\", \"p&gt;a\", [\"simon1\",\"google\",\"groups\",\"mark\",\"yahoo\",\"simon\"] );\nt( \"Child w/ Class\", \"p &gt; a.blog\", [\"mark\",\"simon\"] );\nt( \"All Children\", \"code &gt; *\", [\"anchor1\",\"anchor2\"] );\nt( \"All Grandchildren\", \"p &gt; * &gt; *\", [\"anchor1\",\"anchor2\"] );\nt( \"Adjacent\", \"a + a\", [\"groups\"] );\nt( \"Adjacent\", \"a +a\", [\"groups\"] );\nt( \"Adjacent\", \"a+ a\", [\"groups\"] );\nt( \"Adjacent\", \"a+a\", [\"groups\"] );\nt( \"Adjacent\", \"p + p\", [\"ap\",\"en\",\"sap\"] );\nt( \"Comma, Child, and Adjacent\", \"a + a, code &gt; a\", [\"groups\",\"anchor1\",\"anchor2\"] );\nt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\nt( \"Attribute Exists\", \"a[@title]\", [\"google\"] );\nt( \"Attribute Exists\", \"*[@title]\", [\"google\"] );\nt( \"Attribute Exists\", \"[@title]\", [\"google\"] );\n\nt( \"Non-existing part of attribute [@name*=bla]\", \"[@name*=bla]\", [] ); \nt( \"Non-existing start of attribute [@name^=bla]\", \"[@name^=bla]\", [] ); \nt( \"Non-existing end of attribute [@name$=bla]\", \"[@name$=bla]\", [] ); \n\nt( \"Attribute Equals\", \"a[@rel='bookmark']\", [\"simon1\"] );\nt( \"Attribute Equals\", 'a[@rel=\"bookmark\"]', [\"simon1\"] );\nt( \"Attribute Equals\", \"a[@rel=bookmark]\", [\"simon1\"] );\nt( \"Multiple Attribute Equals\", \"input[@type='hidden'],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\nt( \"Multiple Attribute Equals\", \"input[@type=\\\"hidden\\\"],input[@type='radio']\", [\"hidden1\",\"radio1\",\"radio2\"] );\nt( \"Multiple Attribute Equals\", \"input[@type=hidden],input[@type=radio]\", [\"hidden1\",\"radio1\",\"radio2\"] );\n\nt( \"Attribute Begins With\", \"a[@href ^= 'http://www']\", [\"google\",\"yahoo\"] );\nt( \"Attribute Ends With\", \"a[@href $= 'org/']\", [\"mark\"] );\nt( \"Attribute Contains\", \"a[@href *= 'google']\", [\"google\",\"groups\"] );\nt( \"First Child\", \"p:first-child\", [\"firstp\",\"sndp\"] );\nt( \"Last Child\", \"p:last-child\", [\"sap\"] );\nt( \"Only Child\", \"a:only-child\", [\"simon1\",\"anchor1\",\"yahoo\",\"anchor2\"] );\nt( \"Empty\", \"ul:empty\", [\"firstUL\"] );\nt( \"Enabled UI Element\", \"input:enabled\", [\"text1\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"hidden1\",\"hidden2\",\"name\"] );\nt( \"Disabled UI Element\", \"input:disabled\", [\"text2\"] );\nt( \"Checked UI Element\", \"input:checked\", [\"radio2\",\"check1\"] );\nt( \"Selected Option Element\", \"option:selected\", [\"option1a\",\"option2d\",\"option3b\",\"option3c\"] );\nt( \"Text Contains\", \"a:contains('Google')\", [\"google\",\"groups\"] );\nt( \"Text Contains\", \"a:contains('Google Groups')\", [\"groups\"] );\nt( \"Element Preceded By\", \"p ~ div\", [\"foo\"] );\nt( \"Not\", \"a.blog:not(.link)\", [\"mark\"] );\n\nok( jQuery.find(\"//*\").length &gt;= 30, \"All Elements (//*)\" );\nt( \"All Div Elements\", \"//div\", [\"main\",\"foo\"] );\nt( \"Absolute Path\", \"/html/body\", [\"body\"] );\nt( \"Absolute Path w/ *\", \"/* /body\", [\"body\"] );\nt( \"Long Absolute Path\", \"/html/body/dl/div/div/p\", [\"sndp\",\"en\",\"sap\"] );\nt( \"Absolute and Relative Paths\", \"/html//div\", [\"main\",\"foo\"] );\nt( \"All Children, Explicit\", \"//code/*\", [\"anchor1\",\"anchor2\"] );\nt( \"All Children, Implicit\", \"//code/\", [\"anchor1\",\"anchor2\"] );\nt( \"Attribute Exists\", \"//a[@title]\", [\"google\"] );\nt( \"Attribute Equals\", \"//a[@rel='bookmark']\", [\"simon1\"] );\nt( \"Parent Axis\", \"//p/..\", [\"main\",\"foo\"] );\nt( \"Sibling Axis\", \"//p/../\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\nt( \"Sibling Axis\", \"//p/../*\", [\"firstp\",\"ap\",\"foo\",\"first\",\"firstUL\",\"empty\",\"form\",\"sndp\",\"en\",\"sap\"] );\nt( \"Has Children\", \"//p[a]\", [\"firstp\",\"ap\",\"en\",\"sap\"] );\n\nt( \"nth Element\", \"p:nth(1)\", [\"ap\"] );\nt( \"First Element\", \"p:first\", [\"firstp\"] );\nt( \"Last Element\", \"p:last\", [\"first\"] );\nt( \"Even Elements\", \"p:even\", [\"firstp\",\"sndp\",\"sap\"] );\nt( \"Odd Elements\", \"p:odd\", [\"ap\",\"en\",\"first\"] );\nt( \"Position Equals\", \"p:eq(1)\", [\"ap\"] );\nt( \"Position Greater Than\", \"p:gt(0)\", [\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );\nt( \"Position Less Than\", \"p:lt(3)\", [\"firstp\",\"ap\",\"sndp\"] );\nt( \"Is A Parent\", \"p:parent\", [\"firstp\",\"ap\",\"sndp\",\"en\",\"sap\",\"first\"] );\nt( \"Is Visible\", \"input:visible\", [\"text1\",\"text2\",\"radio1\",\"radio2\",\"check1\",\"check2\",\"name\"] );\nt( \"Is Hidden\", \"input:hidden\", [\"hidden1\",\"hidden2\"] );\n\nt( \"Grouped Form Elements\", \"input[@name='foo[bar]']\", [\"hidden2\"] );\n\nt( \"All Children of ID\", \"#foo/*\", [\"sndp\", \"en\", \"sap\"]  );\nt( \"All Children of ID with no children\", \"#firstUL/*\", []  );\n\nt( \"Form element :input\", \":input\", [\"text1\", \"text2\", \"radio1\", \"radio2\", \"check1\", \"check2\", \"hidden1\", \"hidden2\", \"name\", \"button\", \"area1\", \"select1\", \"select2\", \"select3\"] );\nt( \"Form element :radio\", \":radio\", [\"radio1\", \"radio2\"] );\nt( \"Form element :checkbox\", \":checkbox\", [\"check1\", \"check2\"] );\nt( \"Form element :text\", \":text\", [\"text1\", \"text2\", \"hidden2\", \"name\"] );\nt( \"Form element :radio:checked\", \":radio:checked\", [\"radio2\"] );\nt( \"Form element :checkbox:checked\", \":checkbox:checked\", [\"check1\"] );\nt( \"Form element :checkbox:checked, :radio:checked\", \":checkbox:checked, :radio:checked\", [\"check1\", \"radio2\"] );\n\nt( \":not() Existing attribute\", \"select:not([@multiple])\", [\"select1\", \"select2\"]);\nt( \":not() Equals attribute\", \"select:not([@name=select1])\", [\"select2\", \"select3\"]);\nt( \":not() Equals quoted attribute\", \"select:not([@name='select1'])\", [\"select2\", \"select3\"]);"],"private":1,"name":"$.find"},{"short":"Remove the whitespace from the beginning and end of a string.","params":[{"type":"String","desc":"The string to trim.","name":"str"}],"desc":"Remove the whitespace from the beginning and end of a string.","tests":[],"type":"String","name":"$.trim","examples":[{"code":"$.trim(\"  hello, how are you?  \");","result":"\"hello, how are you?\""}],"cat":"Javascript"},{"cat":"DOM/Traversing","type":"Array&lt;Element&gt;","desc":"All ancestors of a given element.","params":[{"type":"Element","desc":"The element to find the ancestors of.","name":"elem"}],"short":"All ancestors of a given element.","examples":[],"tests":[],"private":1,"name":"$.parents"},{"cat":"DOM/Traversing","type":"Array","desc":"All elements on a specified axis.","params":[{"type":"Element","desc":"The element to find all the siblings of (including itself).","name":"elem"}],"short":"All elements on a specified axis.","examples":[],"tests":[],"private":1,"name":"$.sibling"},{"short":"Merge two arrays together, removing all duplicates.","params":[{"type":"Array","desc":"The first array to merge.","name":"first"},{"type":"Array","desc":"The second array to merge.","name":"second"}],"desc":"Merge two arrays together, removing all duplicates. The final order\nor the new array is: All the results from the first array, followed\nby the unique results from the second array.","tests":[],"type":"Array","name":"$.merge","examples":[{"code":"$.merge( [0,1,2], [2,3,4] )","result":"[0,1,2,3,4]"},{"code":"$.merge( [3,2,1], [4,3,2] )","result":"[3,2,1,4]"}],"cat":"Javascript"},{"short":"Filter items out of an array, by using a filter function.","params":[{"type":"Array","desc":"The Array to find items in.","name":"array"},{"type":"Function","desc":"The function to process each item against.","name":"fn"},{"type":"Boolean","desc":"Invert the selection - select the opposite of the function.","name":"inv"}],"desc":"Filter items out of an array, by using a filter function.\nThe specified function will be passed two arguments: The\ncurrent array item and the index of the item in the array. The\nfunction should return 'true' if you wish to keep the item in\nthe array, false if it should be removed.","tests":[],"type":"Array","name":"$.grep","examples":[{"code":"$.grep( [0,1,2], function(i){\n  return i &gt; 0;\n});","result":"[1, 2]"}],"cat":"Javascript"},{"short":"Translate all items in an array to another array of items.","params":[{"type":"Array","desc":"The Array to translate.","name":"array"},{"type":"Function","desc":"The function to process each item against.","name":"fn"}],"desc":"Translate all items in an array to another array of items. \nThe translation function that is provided to this method is \ncalled for each item in the array and is passed one argument: \nThe item to be translated. The function can then return:\nThe translated value, 'null' (to remove the item), or \nan array of values - which will be flattened into the full array.","tests":[],"type":"Array","name":"$.map","examples":[{"code":"$.map( [0,1,2], function(i){\n  return i + 4;\n});","result":"[4, 5, 6]"},{"code":"$.map( [0,1,2], function(i){\n  return i &gt; 0 ? i + 1 : null;\n});","result":"[2, 3]"},{"code":"$.map( [0,1,2], function(i){\n  return [ i, i + 1 ];\n});","result":"[0, 1, 1, 2, 2, 3]"}],"cat":"Javascript"},{"short":"Contains flags for the useragent, read from navigator.","params":[],"desc":"Contains flags for the useragent, read from navigator.userAgent.\nAvailable flags are: safari, opera, msie, mozilla\nThis property is available before the DOM is ready, therefore you can\nuse it to add ready events only for certain browsers.\n\nSee &lt;a href=\"http://davecardwell.co.uk/geekery/javascript/jquery/jqbrowser/\"&gt;\njQBrowser plugin&lt;/a&gt; for advanced browser detection:","tests":[],"type":"Boolean","name":"$.browser","examples":[{"desc":"returns true if the current useragent is some version of microsoft's internet explorer","code":"$.browser.msie"},{"desc":"Alerts \"this is safari!\" only for safari browsers","code":"if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }"}],"cat":"Javascript"},{"short":"Append all of the matched elements to another, specified, set of elements.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"desc":"Append all of the matched elements to another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).append(B), in that instead of appending B to A, you're appending\nA to B.","tests":[],"type":"jQuery","name":"appendTo","examples":[{"code":"$(\"p\").appendTo(\"#foo\");","result":"&lt;div id=\"foo\"&gt;&lt;p&gt;I would like to say: &lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;&lt;/div&gt;"}],"cat":"DOM/Manipulation"},{"short":"Prepend all of the matched elements to another, specified, set of elements.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"desc":"Prepend all of the matched elements to another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).prepend(B), in that instead of prepending B to A, you're prepending\nA to B.","tests":[],"type":"jQuery","name":"prependTo","examples":[{"code":"$(\"p\").prependTo(\"#foo\");","result":"&lt;div id=\"foo\"&gt;&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/div&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/div&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert all of the matched elements before another, specified, set of elements.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"desc":"Insert all of the matched elements before another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).before(B), in that instead of inserting B before A, you're inserting\nA before B.","tests":[],"type":"jQuery","name":"insertBefore","examples":[{"code":"$(\"p\").insertBefore(\"#foo\");","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;","before":"&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Insert all of the matched elements after another, specified, set of elements.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"desc":"Insert all of the matched elements after another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).after(B), in that instead of inserting B after A, you're inserting\nA after B.","tests":[],"type":"jQuery","name":"insertAfter","examples":[{"code":"$(\"p\").insertAfter(\"#foo\");","result":"&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;"}],"cat":"DOM/Manipulation"},{"short":"Get the current CSS width of the first matched element.","params":[],"desc":"Get the current CSS width of the first matched element.","tests":[],"type":"String","name":"width","examples":[{"code":"$(\"p\").width();","result":"\"300px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS width of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS width of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","tests":[],"type":"jQuery","name":"width","examples":[{"code":"$(\"p\").width(\"20px\");","result":"&lt;p style=\"width:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS height of the first matched element.","params":[],"desc":"Get the current CSS height of the first matched element.","tests":[],"type":"String","name":"height","examples":[{"code":"$(\"p\").height();","result":"\"14px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS height of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS height of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","tests":[],"type":"jQuery","name":"height","examples":[{"code":"$(\"p\").height(\"20px\");","result":"&lt;p style=\"height:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS top of the first matched element.","params":[],"desc":"Get the current CSS top of the first matched element.","tests":[],"type":"String","name":"top","examples":[{"code":"$(\"p\").top();","result":"\"0px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS top of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS top of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","tests":[],"type":"jQuery","name":"top","examples":[{"code":"$(\"p\").top(\"20px\");","result":"&lt;p style=\"top:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS left of the first matched element.","params":[],"desc":"Get the current CSS left of the first matched element.","tests":[],"type":"String","name":"left","examples":[{"code":"$(\"p\").left();","result":"\"0px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS left of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS left of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","tests":[],"type":"jQuery","name":"left","examples":[{"code":"$(\"p\").left(\"20px\");","result":"&lt;p style=\"left:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS position of the first matched element.","params":[],"desc":"Get the current CSS position of the first matched element.","tests":[],"type":"String","name":"position","examples":[{"code":"$(\"p\").position();","result":"\"static\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS position of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS position of every matched element.","tests":[],"type":"jQuery","name":"position","examples":[{"code":"$(\"p\").position(\"relative\");","result":"&lt;p style=\"position:relative;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS float of the first matched element.","params":[],"desc":"Get the current CSS float of the first matched element.","tests":[],"type":"String","name":"float","examples":[{"code":"$(\"p\").float();","result":"\"none\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS float of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS float of every matched element.","tests":[],"type":"jQuery","name":"float","examples":[{"code":"$(\"p\").float(\"left\");","result":"&lt;p style=\"float:left;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS overflow of the first matched element.","params":[],"desc":"Get the current CSS overflow of the first matched element.","tests":[],"type":"String","name":"overflow","examples":[{"code":"$(\"p\").overflow();","result":"\"none\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS overflow of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS overflow of every matched element.","tests":[],"type":"jQuery","name":"overflow","examples":[{"code":"$(\"p\").overflow(\"auto\");","result":"&lt;p style=\"overflow:auto;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS color of the first matched element.","params":[],"desc":"Get the current CSS color of the first matched element.","tests":[],"type":"String","name":"color","examples":[{"code":"$(\"p\").color();","result":"\"black\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS color of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS color of every matched element.","tests":[],"type":"jQuery","name":"color","examples":[{"code":"$(\"p\").color(\"blue\");","result":"&lt;p style=\"color:blue;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Get the current CSS background of the first matched element.","params":[],"desc":"Get the current CSS background of the first matched element.","tests":[],"type":"String","name":"background","examples":[{"code":"$(\"p\").background();","result":"\"blue\"","before":"&lt;p style=\"background:blue;\"&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Set the CSS background of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"desc":"Set the CSS background of every matched element.","tests":[],"type":"jQuery","name":"background","examples":[{"code":"$(\"p\").background(\"blue\");","result":"&lt;p style=\"background:blue;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"cat":"CSS"},{"short":"Reduce the set of matched elements to a single element.","params":[{"type":"Number","desc":"The index of the element that you wish to limit to.","name":"pos"}],"desc":"Reduce the set of matched elements to a single element.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","tests":[],"type":"jQuery","name":"eq","examples":[{"code":"$(\"p\").eq(1)","result":"[ &lt;p&gt;So is this&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"cat":"Core"},{"short":"Reduce the set of matched elements to all elements before a given position.","params":[{"type":"Number","desc":"Reduce the set to all elements below this position.","name":"pos"}],"desc":"Reduce the set of matched elements to all elements before a given position.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","tests":[],"type":"jQuery","name":"lt","examples":[{"code":"$(\"p\").lt(1)","result":"[ &lt;p&gt;This is just a test.&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"cat":"Core"},{"short":"Reduce the set of matched elements to all elements after a given position.","params":[{"type":"Number","desc":"Reduce the set to all elements after this position.","name":"pos"}],"desc":"Reduce the set of matched elements to all elements after a given position.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","tests":[],"type":"jQuery","name":"gt","examples":[{"code":"$(\"p\").gt(0)","result":"[ &lt;p&gt;So is this&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"cat":"Core"},{"short":"Filter the set of elements to those that contain the specified text.","params":[{"type":"String","desc":"The string that will be contained within the text of an element.","name":"str"}],"desc":"Filter the set of elements to those that contain the specified text.","tests":[],"type":"jQuery","name":"contains","examples":[{"code":"$(\"p\").contains(\"test\")","result":"[ &lt;p&gt;This is just a test.&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Get the current value of the first matched element.","params":[],"desc":"Get the current value of the first matched element.","tests":["ok( $(\"#text1\").val() == \"Test\", \"Check for value of input element\" );\nok( !$(\"#text1\").val() == \"\", \"Check for value of input element\" );"],"type":"String","name":"val","examples":[{"code":"$(\"input\").val();","result":"\"some text\"","before":"&lt;input type=\"text\" value=\"some text\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the value of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the value of every matched element.","tests":["document.getElementById('text1').value = \"bla\";\nok( $(\"#text1\").val() == \"bla\", \"Check for modified value of input element\" );\n$(\"#text1\").val('test');\nok ( document.getElementById('text1').value == \"test\", \"Check for modified (via val(String)) value of input element\" );"],"type":"jQuery","name":"val","examples":[{"code":"$(\"input\").value(\"test\");","result":"&lt;input type=\"text\" value=\"test\"/&gt;","before":"&lt;input type=\"text\" value=\"some text\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the html contents of the first matched element.","params":[],"desc":"Get the html contents of the first matched element.","tests":[],"type":"String","name":"html","examples":[{"code":"$(\"div\").html();","result":"&lt;input/&gt;","before":"&lt;div&gt;&lt;input/&gt;&lt;/div&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the html contents of every matched element.","params":[{"type":"String","desc":"Set the html contents to the specified value.","name":"val"}],"desc":"Set the html contents of every matched element.","tests":["var div = $(\"div\");\ndiv.html(\"&lt;b&gt;test&lt;/b&gt;\");\nvar pass = true;\nfor ( var i = 0; i &lt; div.size(); i++ ) {\n  if ( div.get(i).childNodes.length == 0 ) pass = false;\n}\nok( pass, \"Set HTML\" );"],"type":"jQuery","name":"html","examples":[{"code":"$(\"div\").html(\"&lt;b&gt;new stuff&lt;/b&gt;\");","result":"&lt;div&gt;&lt;b&gt;new stuff&lt;/b&gt;&lt;/div&gt;","before":"&lt;div&gt;&lt;input/&gt;&lt;/div&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the current id of the first matched element.","params":[],"desc":"Get the current id of the first matched element.","tests":["ok( $(document.getElementById('main')).id() == \"main\", \"Check for id\" );\nok( $(\"#foo\").id() == \"foo\", \"Check for id\" );\nok( !$(\"head\").id(), \"Check for id\" );"],"type":"String","name":"id","examples":[{"code":"$(\"input\").id();","result":"\"test\"","before":"&lt;input type=\"text\" id=\"test\" value=\"some text\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the id of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the id of every matched element.","tests":[],"type":"jQuery","name":"id","examples":[{"code":"$(\"input\").id(\"newid\");","result":"&lt;input type=\"text\" id=\"newid\" value=\"some text\"/&gt;","before":"&lt;input type=\"text\" id=\"test\" value=\"some text\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the current title of the first matched element.","params":[],"desc":"Get the current title of the first matched element.","tests":["ok( $(document.getElementById('google')).title() == \"Google!\", \"Check for title\" );\nok( !$(\"#yahoo\").title(), \"Check for title\" );"],"type":"String","name":"title","examples":[{"code":"$(\"img\").title();","result":"\"my image\"","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the title of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the title of every matched element.","tests":[],"type":"jQuery","name":"title","examples":[{"code":"$(\"img\").title(\"new title\");","result":"&lt;img src=\"test.jpg\" title=\"new image\"/&gt;","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the current name of the first matched element.","params":[],"desc":"Get the current name of the first matched element.","tests":["ok( $(document.getElementById('text1')).name() == \"action\", \"Check for name\" );\nok( $(\"#hidden1\").name() == \"hidden\", \"Check for name\" );\nok( !$(\"#area1\").name(), \"Check for name\" );"],"type":"String","name":"name","examples":[{"code":"$(\"input\").name();","result":"\"username\"","before":"&lt;input type=\"text\" name=\"username\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the name of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the name of every matched element.","tests":[],"type":"jQuery","name":"name","examples":[{"code":"$(\"input\").name(\"user\");","result":"&lt;input type=\"text\" name=\"user\"/&gt;","before":"&lt;input type=\"text\" name=\"username\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the current href of the first matched element.","params":[],"desc":"Get the current href of the first matched element.","tests":[],"type":"String","name":"href","examples":[{"code":"$(\"a\").href();","result":"\"test.html\"","before":"&lt;a href=\"test.html\"&gt;my link&lt;/a&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the href of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the href of every matched element.","tests":[],"type":"jQuery","name":"href","examples":[{"code":"$(\"a\").href(\"test2.html\");","result":"&lt;a href=\"test2.html\"&gt;my link&lt;/a&gt;","before":"&lt;a href=\"test.html\"&gt;my link&lt;/a&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the current src of the first matched element.","params":[],"desc":"Get the current src of the first matched element.","tests":[],"type":"String","name":"src","examples":[{"code":"$(\"img\").src();","result":"\"test.jpg\"","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the src of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the src of every matched element.","tests":[],"type":"jQuery","name":"src","examples":[{"code":"$(\"img\").src(\"test2.jpg\");","result":"&lt;img src=\"test2.jpg\" title=\"my image\"/&gt;","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"cat":"DOM/Attributes"},{"short":"Get the current rel of the first matched element.","params":[],"desc":"Get the current rel of the first matched element.","tests":[],"type":"String","name":"rel","examples":[{"code":"$(\"a\").rel();","result":"\"nofollow\"","before":"&lt;a href=\"test.html\" rel=\"nofollow\"&gt;my link&lt;/a&gt;"}],"cat":"DOM/Attributes"},{"short":"Set the rel of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"desc":"Set the rel of every matched element.","tests":[],"type":"jQuery","name":"rel","examples":[{"code":"$(\"a\").rel(\"nofollow\");","result":"&lt;a href=\"test.html\" rel=\"nofollow\"&gt;my link&lt;/a&gt;","before":"&lt;a href=\"test.html\"&gt;my link&lt;/a&gt;"}],"cat":"DOM/Attributes"},{"short":"Get a set of elements containing the unique parents of the matched\nset of elements.","params":[],"desc":"Get a set of elements containing the unique parents of the matched\nset of elements.","tests":[],"type":"jQuery","name":"parent","examples":[{"code":"$(\"p\").parent()","result":"[ &lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt; ]","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique parents of the matched\nset of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the parents with","name":"expr"}],"desc":"Get a set of elements containing the unique parents of the matched\nset of elements, and filtered by an expression.","tests":[],"type":"jQuery","name":"parent","examples":[{"code":"$(\"p\").parent(\".selected\")","result":"[ &lt;div class=\"selected\"&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;/div&gt; ]","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;&lt;div class=\"selected\"&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;/div&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","params":[],"desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","tests":[],"type":"jQuery","name":"ancestors","examples":[{"code":"$(\"span\").ancestors()","result":"[ &lt;body&gt;...&lt;/body&gt;, &lt;div&gt;...&lt;/div&gt;, &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the ancestors with","name":"expr"}],"desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","tests":[],"type":"jQuery","name":"ancestors","examples":[{"code":"$(\"span\").ancestors(\"p\")","result":"[ &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","params":[],"desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","tests":[],"type":"jQuery","name":"parents","examples":[{"code":"$(\"span\").ancestors()","result":"[ &lt;body&gt;...&lt;/body&gt;, &lt;div&gt;...&lt;/div&gt;, &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the ancestors with","name":"expr"}],"desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","tests":[],"type":"jQuery","name":"parents","examples":[{"code":"$(\"span\").ancestors(\"p\")","result":"[ &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements.","params":[],"desc":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements.\n\nIt only returns the very next sibling, not all next siblings.","tests":[],"type":"jQuery","name":"next","examples":[{"code":"$(\"p\").next()","result":"[ &lt;p&gt;Hello Again&lt;/p&gt;, &lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the next Elements with","name":"expr"}],"desc":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements, and filtered by an expression.\n\nIt only returns the very next sibling, not all next siblings.","tests":[],"type":"jQuery","name":"next","examples":[{"code":"$(\"p\").next(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements.","params":[],"desc":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements.\n\nIt only returns the immediately previous sibling, not all previous siblings.","tests":[],"type":"jQuery","name":"prev","examples":[{"code":"$(\"p\").prev()","result":"[ &lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the previous Elements with","name":"expr"}],"desc":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements, and filtered by an expression.\n\nIt only returns the immediately previous sibling, not all previous siblings.","tests":[],"type":"jQuery","name":"prev","examples":[{"code":"$(\"p\").previous(\".selected\")","result":"[ &lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt; ]","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements.","params":[],"desc":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements.","tests":["isSet( $(\"#en\").siblings().get(), q(\"sndp\", \"sap\"), \"Check for siblings\" );"],"type":"jQuery","name":"siblings","examples":[{"code":"$(\"div\").siblings()","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;p&gt;And Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the sibling Elements with","name":"expr"}],"desc":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements, and filtered by an expression.","tests":["isSet( $(\"#sndp\").siblings(\"[code]\").get(), q(\"sap\"), \"Check for filtered siblings (has code child element)\" ); \nisSet( $(\"#sndp\").siblings(\"[a]\").get(), q(\"en\", \"sap\"), \"Check for filtered siblings (has anchor child element)\" );"],"type":"jQuery","name":"siblings","examples":[{"code":"$(\"div\").siblings(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements.","params":[],"desc":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements.","tests":["isSet( $(\"#foo\").children().get(), q(\"sndp\", \"en\", \"sap\"), \"Check for children\" );"],"type":"jQuery","name":"children","examples":[{"code":"$(\"div\").children()","result":"[ &lt;span&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"cat":"DOM/Traversing"},{"short":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the child Elements with","name":"expr"}],"desc":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements, and filtered by an expression.","tests":["isSet( $(\"#foo\").children(\"[code]\").get(), q(\"sndp\", \"sap\"), \"Check for filtered children\" );"],"type":"jQuery","name":"children","examples":[{"code":"$(\"div\").children(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;&lt;/div&gt;"}],"cat":"DOM/Traversing"},{"short":"Remove an attribute from each of the matched elements.","params":[{"type":"String","desc":"The name of the attribute to remove.","name":"name"}],"desc":"Remove an attribute from each of the matched elements.","tests":[],"type":"jQuery","name":"removeAttr","examples":[{"code":"$(\"input\").removeAttr(\"disabled\")","result":"&lt;input/&gt;","before":"&lt;input disabled=\"disabled\"/&gt;"}],"cat":"DOM"},{"short":"Displays each of the set of matched elements if they are hidden.","params":[],"desc":"Displays each of the set of matched elements if they are hidden.","tests":["var pass = true, div = $(\"div\");\ndiv.show().each(function(){\n  if ( this.style.display == \"none\" ) pass = false;\n});\nok( pass, \"Show\" );"],"type":"jQuery","name":"show","examples":[{"code":"$(\"p\").show()","result":"[ &lt;p style=\"display: block\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p style=\"display: none\"&gt;Hello&lt;/p&gt;"}],"cat":"Effects"},{"short":"Hides each of the set of matched elements if they are shown.","params":[],"desc":"Hides each of the set of matched elements if they are shown.","tests":[],"type":"jQuery","name":"hide","examples":[{"code":"$(\"p\").hide()","result":"[ &lt;p style=\"display: none\"&gt;Hello&lt;/p&gt; ]\n\nvar pass = true, div = $(\"div\");\ndiv.hide().each(function(){\n  if ( this.style.display != \"none\" ) pass = false;\n});\nok( pass, \"Hide\" );","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Effects"},{"short":"Toggles each of the set of matched elements.","params":[],"desc":"Toggles each of the set of matched elements. If they are shown,\ntoggle makes them hidden. If they are hidden, toggle\nmakes them shown.","tests":[],"type":"jQuery","name":"toggle","examples":[{"code":"$(\"p\").toggle()","result":"[ &lt;p style=\"display: none\"&gt;Hello&lt;/p&gt;, &lt;p style=\"display: block\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p style=\"display: none\"&gt;Hello Again&lt;/p&gt;"}],"cat":"Effects"},{"short":"Adds the specified class to each of the set of matched elements.","params":[{"type":"String","desc":"A CSS class to add to the elements","name":"class"}],"desc":"Adds the specified class to each of the set of matched elements.","tests":["var div = $(\"div\");\ndiv.addClass(\"test\");\nvar pass = true;\nfor ( var i = 0; i &lt; div.size(); i++ ) {\n if ( div.get(i).className.indexOf(\"test\") == -1 ) pass = false;\n}\nok( pass, \"Add Class\" );"],"type":"jQuery","name":"addClass","examples":[{"code":"$(\"p\").addClass(\"selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"DOM"},{"short":"Removes the specified class from the set of matched elements.","params":[{"type":"String","desc":"A CSS class to remove from the elements","name":"class"}],"desc":"Removes the specified class from the set of matched elements.","tests":["var div = $(\"div\").addClass(\"test\");\ndiv.removeClass(\"test\");\nvar pass = true;\nfor ( var i = 0; i &lt; div.size(); i++ ) {\n if ( div.get(i).className.indexOf(\"test\") != -1 ) pass = false;\n}\nok( pass, \"Remove Class\" );\n\nreset();\n\nvar div = $(\"div\").addClass(\"test\").addClass(\"foo\").addClass(\"bar\");\ndiv.removeClass(\"test\").removeClass(\"bar\").removeClass(\"foo\");\nvar pass = true;\nfor ( var i = 0; i &lt; div.size(); i++ ) {\n if ( div.get(i).className.match(/test|bar|foo/) ) pass = false;\n}\nok( pass, \"Remove multiple classes\" );"],"type":"jQuery","name":"removeClass","examples":[{"code":"$(\"p\").removeClass(\"selected\")","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"selected\"&gt;Hello&lt;/p&gt;"}],"cat":"DOM"},{"short":"Adds the specified class if it is present, removes it if it is\nnot present.","params":[{"type":"String","desc":"A CSS class with which to toggle the elements","name":"class"}],"desc":"Adds the specified class if it is present, removes it if it is\nnot present.","tests":[],"type":"jQuery","name":"toggleClass","examples":[{"code":"$(\"p\").toggleClass(\"selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt;, &lt;p&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"cat":"DOM"},{"short":"Removes all matched elements from the DOM.","params":[],"desc":"Removes all matched elements from the DOM. This does NOT remove them from the\njQuery object, allowing you to use the matched elements further.","tests":[],"type":"jQuery","name":"remove","examples":[{"code":"$(\"p\").remove();","result":"how are","before":"&lt;p&gt;Hello&lt;/p&gt; how are &lt;p&gt;you?&lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Removes only elements (out of the list of matched elements) that match\nthe specified jQuery expression.","params":[{"type":"String","desc":"A jQuery expression to filter elements by.","name":"expr"}],"desc":"Removes only elements (out of the list of matched elements) that match\nthe specified jQuery expression. This does NOT remove them from the\njQuery object, allowing you to use the matched elements further.","tests":[],"type":"jQuery","name":"remove","examples":[{"code":"$(\"p\").remove(\".hello\");","result":"how are &lt;p&gt;you?&lt;/p&gt;","before":"&lt;p class=\"hello\"&gt;Hello&lt;/p&gt; how are &lt;p&gt;you?&lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Removes all child nodes from the set of matched elements.","params":[],"desc":"Removes all child nodes from the set of matched elements.","tests":[],"type":"jQuery","name":"empty","examples":[{"code":"$(\"p\").empty()","result":"[ &lt;p&gt;&lt;/p&gt; ]","before":"&lt;p&gt;Hello, &lt;span&gt;Person&lt;/span&gt; &lt;a href=\"#\"&gt;and person&lt;/a&gt;&lt;/p&gt;"}],"cat":"DOM/Manipulation"},{"short":"Binds a handler to a particular event (like click) for each matched element.","params":[{"type":"String","desc":"An event type","name":"type"},{"type":"Function","desc":"A function to bind to the event on each of the set of matched elements","name":"fn"}],"desc":"Binds a handler to a particular event (like click) for each matched element.\nThe event handler is passed an event object that you can use to prevent\ndefault behaviour. To stop both default action and event bubbling, your handler\nhas to return false.","tests":[],"type":"jQuery","name":"bind","examples":[{"code":"$(\"p\").bind( \"click\", function() {\n  alert( $(this).text() );\n} )","result":"alert(\"Hello\")","before":"&lt;p&gt;Hello&lt;/p&gt;"},{"desc":"Cancel a default action and prevent it from bubbling by returning false\nfrom your function.","code":"$(\"form\").bind( \"submit\", function() { return false; } )"},{"desc":"Cancel only the default action by using the preventDefault method.","code":"$(\"form\").bind( \"submit\", function(event) {\n  event.preventDefault();\n} );"},{"desc":"Stop only an event from bubbling by using the stopPropagation method.","code":"$(\"form\").bind( \"submit\", function(event) {\n  event.stopPropagation();\n} )"}],"cat":"Events"},{"short":"The opposite of bind, removes a bound event from each of the matched\nelements.","params":[{"type":"String","desc":"An event type","name":"type"},{"type":"Function","desc":"A function to unbind from the event on each of the set of matched elements","name":"fn"}],"desc":"The opposite of bind, removes a bound event from each of the matched\nelements. You must pass the identical function that was used in the original\nbind method.","tests":[],"type":"jQuery","name":"unbind","examples":[{"code":"$(\"p\").unbind( \"click\", function() { alert(\"Hello\"); } )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events"},{"short":"Removes all bound events of a particular type from each of the matched\nelements.","params":[{"type":"String","desc":"An event type","name":"type"}],"desc":"Removes all bound events of a particular type from each of the matched\nelements.","tests":[],"type":"jQuery","name":"unbind","examples":[{"code":"$(\"p\").unbind( \"click\" )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events"},{"short":"Removes all bound events from each of the matched elements.","params":[],"desc":"Removes all bound events from each of the matched elements.","tests":[],"type":"jQuery","name":"unbind","examples":[{"code":"$(\"p\").unbind()","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events"},{"short":"Trigger a type of event on every matched element.","params":[{"type":"String","desc":"An event type to trigger.","name":"type"}],"desc":"Trigger a type of event on every matched element.","tests":[],"type":"jQuery","name":"trigger","examples":[{"code":"$(\"p\").trigger(\"click\")","result":"alert('hello')","before":"&lt;p click=\"alert('hello')\"&gt;Hello&lt;/p&gt;"}],"cat":"Events"},{"short":"Toggle between two function calls every other click.","params":[{"type":"Function","desc":"The function to execute on every even click.","name":"even"},{"type":"Function","desc":"The function to execute on every odd click.","name":"odd"}],"desc":"Toggle between two function calls every other click.\nWhenever a matched element is clicked, the first specified function \nis fired, when clicked again, the second is fired. All subsequent \nclicks continue to rotate through the two functions.","tests":["var count = 0;\nvar fn1 = function() { count++; }\nvar fn2 = function() { count--; }\nvar link = $('#mark');\nlink.click().toggle(fn1, fn2).click().click().click().click().click();\nok( count == 1, \"Check for toggle(fn, fn)\" );"],"type":"jQuery","name":"toggle","examples":[{"code":"$(\"p\").toggle(function(){\n  $(this).addClass(\"selected\");\n},function(){\n  $(this).removeClass(\"selected\");\n});"}],"cat":"Events"},{"short":"A method for simulating hovering (moving the mouse on, and off,\nan object).","params":[{"type":"Function","desc":"The function to fire whenever the mouse is moved over a matched element.","name":"over"},{"type":"Function","desc":"The function to fire whenever the mouse is moved off of a matched element.","name":"out"}],"desc":"A method for simulating hovering (moving the mouse on, and off,\nan object). This is a custom method which provides an 'in' to a \nfrequent task.\n\nWhenever the mouse cursor is moved over a matched \nelement, the first specified function is fired. Whenever the mouse \nmoves off of the element, the second specified function fires. \nAdditionally, checks are in place to see if the mouse is still within \nthe specified element itself (for example, an image inside of a div), \nand if it is, it will continue to 'hover', and not move out \n(a common error in using a mouseout event handler).","tests":[],"type":"jQuery","name":"hover","examples":[{"code":"$(\"p\").hover(function(){\n  $(this).addClass(\"over\");\n},function(){\n  $(this).addClass(\"out\");\n});"}],"cat":"Events"},{"short":"Bind a function to be executed whenever the DOM is ready to be\ntraversed and manipulated.","params":[{"type":"Function","desc":"The function to be executed when the DOM is ready.","name":"fn"}],"desc":"Bind a function to be executed whenever the DOM is ready to be\ntraversed and manipulated. This is probably the most important \nfunction included in the event module, as it can greatly improve\nthe response times of your web applications.\n\nIn a nutshell, this is a solid replacement for using window.onload, \nand attaching a function to that. By using this method, your bound Function \nwill be called the instant the DOM is ready to be read and manipulated, \nwhich is exactly what 99.99% of all Javascript code needs to run.\n\nPlease ensure you have no code in your &lt;body&gt; onload event handler, \notherwise $(document).ready() may not fire.\n\nYou can have as many $(document).ready events on your page as you like.","tests":[],"type":"jQuery","name":"ready","examples":[{"code":"$(document).ready(function(){ Your code here... });"}],"cat":"Events"},{"short":"Bind a function to the scroll event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the scroll event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the scroll event of each matched element.","tests":[],"type":"jQuery","name":"scroll","examples":[{"code":"$(\"p\").scroll( function() { alert(\"Hello\"); } );","result":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Trigger the scroll event of each matched element.","params":[],"desc":"Trigger the scroll event of each matched element. This causes all of the functions\nthat have been bound to thet scroll event to be executed.","tests":[],"type":"jQuery","name":"scroll","examples":[{"code":"$(\"p\").scroll();","result":"alert('Hello');","before":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the scroll event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the scroll event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the scroll event of each matched element, which will only be executed once.\nUnlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onescroll","examples":[{"code":"$(\"p\").onescroll( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first scroll","before":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes a bound scroll event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the scroll event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound scroll event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unscroll","examples":[{"code":"$(\"p\").unscroll( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onscroll=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes all bound scroll events from each of the matched elements.","params":[],"desc":"Removes all bound scroll events from each of the matched elements.","tests":[],"type":"jQuery","name":"unscroll","examples":[{"code":"$(\"p\").unscroll();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the submit event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the submit event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the submit event of each matched element.","tests":[],"type":"jQuery","name":"submit","examples":[{"code":"$(\"p\").submit( function() { alert(\"Hello\"); } );","result":"&lt;p onsubmit=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Trigger the submit event of each matched element.","params":[],"desc":"Trigger the submit event of each matched element. This causes all of the functions\nthat have been bound to thet submit event to be executed.","tests":[],"type":"jQuery","name":"submit","examples":[{"code":"$(\"p\").submit();","result":"alert('Hello');","before":"&lt;p onsubmit=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Bind a function to the submit event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the submit event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the submit event of each matched element, which will only be executed once.\nUnlike a call to the normal .submit() method, calling .onesubmit() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onesubmit","examples":[{"code":"$(\"p\").onesubmit( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first submit","before":"&lt;p onsubmit=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Removes a bound submit event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the submit event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound submit event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unsubmit","examples":[{"code":"$(\"p\").unsubmit( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onsubmit=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Removes all bound submit events from each of the matched elements.","params":[],"desc":"Removes all bound submit events from each of the matched elements.","tests":[],"type":"jQuery","name":"unsubmit","examples":[{"code":"$(\"p\").unsubmit();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onsubmit=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Bind a function to the focus event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the focus event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the focus event of each matched element.","tests":[],"type":"jQuery","name":"focus","examples":[{"code":"$(\"p\").focus( function() { alert(\"Hello\"); } );","result":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Trigger the focus event of each matched element.","params":[],"desc":"Trigger the focus event of each matched element. This causes all of the functions\nthat have been bound to thet focus event to be executed.","tests":[],"type":"jQuery","name":"focus","examples":[{"code":"$(\"p\").focus();","result":"alert('Hello');","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Bind a function to the focus event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the focus event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the focus event of each matched element, which will only be executed once.\nUnlike a call to the normal .focus() method, calling .onefocus() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onefocus","examples":[{"code":"$(\"p\").onefocus( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first focus","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Removes a bound focus event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the focus event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound focus event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unfocus","examples":[{"code":"$(\"p\").unfocus( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onfocus=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Removes all bound focus events from each of the matched elements.","params":[],"desc":"Removes all bound focus events from each of the matched elements.","tests":[],"type":"jQuery","name":"unfocus","examples":[{"code":"$(\"p\").unfocus();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Bind a function to the keydown event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keydown event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the keydown event of each matched element.","tests":[],"type":"jQuery","name":"keydown","examples":[{"code":"$(\"p\").keydown( function() { alert(\"Hello\"); } );","result":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Trigger the keydown event of each matched element.","params":[],"desc":"Trigger the keydown event of each matched element. This causes all of the functions\nthat have been bound to thet keydown event to be executed.","tests":[],"type":"jQuery","name":"keydown","examples":[{"code":"$(\"p\").keydown();","result":"alert('Hello');","before":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Bind a function to the keydown event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the keydown event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the keydown event of each matched element, which will only be executed once.\nUnlike a call to the normal .keydown() method, calling .onekeydown() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onekeydown","examples":[{"code":"$(\"p\").onekeydown( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first keydown","before":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Removes a bound keydown event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the keydown event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound keydown event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unkeydown","examples":[{"code":"$(\"p\").unkeydown( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeydown=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Removes all bound keydown events from each of the matched elements.","params":[],"desc":"Removes all bound keydown events from each of the matched elements.","tests":[],"type":"jQuery","name":"unkeydown","examples":[{"code":"$(\"p\").unkeydown();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Bind a function to the dblclick event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the dblclick event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the dblclick event of each matched element.","tests":[],"type":"jQuery","name":"dblclick","examples":[{"code":"$(\"p\").dblclick( function() { alert(\"Hello\"); } );","result":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the dblclick event of each matched element.","params":[],"desc":"Trigger the dblclick event of each matched element. This causes all of the functions\nthat have been bound to thet dblclick event to be executed.","tests":[],"type":"jQuery","name":"dblclick","examples":[{"code":"$(\"p\").dblclick();","result":"alert('Hello');","before":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the dblclick event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the dblclick event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the dblclick event of each matched element, which will only be executed once.\nUnlike a call to the normal .dblclick() method, calling .onedblclick() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onedblclick","examples":[{"code":"$(\"p\").onedblclick( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first dblclick","before":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound dblclick event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the dblclick event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound dblclick event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"undblclick","examples":[{"code":"$(\"p\").undblclick( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p ondblclick=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound dblclick events from each of the matched elements.","params":[],"desc":"Removes all bound dblclick events from each of the matched elements.","tests":[],"type":"jQuery","name":"undblclick","examples":[{"code":"$(\"p\").undblclick();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the keypress event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keypress event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the keypress event of each matched element.","tests":[],"type":"jQuery","name":"keypress","examples":[{"code":"$(\"p\").keypress( function() { alert(\"Hello\"); } );","result":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Trigger the keypress event of each matched element.","params":[],"desc":"Trigger the keypress event of each matched element. This causes all of the functions\nthat have been bound to thet keypress event to be executed.","tests":[],"type":"jQuery","name":"keypress","examples":[{"code":"$(\"p\").keypress();","result":"alert('Hello');","before":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Bind a function to the keypress event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the keypress event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the keypress event of each matched element, which will only be executed once.\nUnlike a call to the normal .keypress() method, calling .onekeypress() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onekeypress","examples":[{"code":"$(\"p\").onekeypress( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first keypress","before":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Removes a bound keypress event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the keypress event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound keypress event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unkeypress","examples":[{"code":"$(\"p\").unkeypress( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeypress=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Removes all bound keypress events from each of the matched elements.","params":[],"desc":"Removes all bound keypress events from each of the matched elements.","tests":[],"type":"jQuery","name":"unkeypress","examples":[{"code":"$(\"p\").unkeypress();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Bind a function to the error event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the error event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the error event of each matched element.","tests":[],"type":"jQuery","name":"error","examples":[{"code":"$(\"p\").error( function() { alert(\"Hello\"); } );","result":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Trigger the error event of each matched element.","params":[],"desc":"Trigger the error event of each matched element. This causes all of the functions\nthat have been bound to thet error event to be executed.","tests":[],"type":"jQuery","name":"error","examples":[{"code":"$(\"p\").error();","result":"alert('Hello');","before":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the error event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the error event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the error event of each matched element, which will only be executed once.\nUnlike a call to the normal .error() method, calling .oneerror() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneerror","examples":[{"code":"$(\"p\").oneerror( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first error","before":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes a bound error event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the error event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound error event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unerror","examples":[{"code":"$(\"p\").unerror( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onerror=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes all bound error events from each of the matched elements.","params":[],"desc":"Removes all bound error events from each of the matched elements.","tests":[],"type":"jQuery","name":"unerror","examples":[{"code":"$(\"p\").unerror();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the blur event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the blur event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the blur event of each matched element.","tests":[],"type":"jQuery","name":"blur","examples":[{"code":"$(\"p\").blur( function() { alert(\"Hello\"); } );","result":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Trigger the blur event of each matched element.","params":[],"desc":"Trigger the blur event of each matched element. This causes all of the functions\nthat have been bound to thet blur event to be executed.","tests":[],"type":"jQuery","name":"blur","examples":[{"code":"$(\"p\").blur();","result":"alert('Hello');","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Bind a function to the blur event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the blur event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the blur event of each matched element, which will only be executed once.\nUnlike a call to the normal .blur() method, calling .oneblur() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneblur","examples":[{"code":"$(\"p\").oneblur( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first blur","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Removes a bound blur event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the blur event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound blur event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unblur","examples":[{"code":"$(\"p\").unblur( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onblur=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Removes all bound blur events from each of the matched elements.","params":[],"desc":"Removes all bound blur events from each of the matched elements.","tests":[],"type":"jQuery","name":"unblur","examples":[{"code":"$(\"p\").unblur();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/UI"},{"short":"Bind a function to the load event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the load event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the load event of each matched element.","tests":[],"type":"jQuery","name":"load","examples":[{"code":"$(\"p\").load( function() { alert(\"Hello\"); } );","result":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"cat":"Events/Browser","type":"jQuery","desc":"Trigger the load event of each matched element. This causes all of the functions\nthat have been bound to thet load event to be executed.\n\nMarked as private: Calling load() without arguments throws exception because the ajax load\ndoes not handle it.","params":[],"short":"Trigger the load event of each matched element.","examples":[{"code":"$(\"p\").load();","result":"alert('Hello');","before":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"private":1,"name":"load"},{"short":"Bind a function to the load event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the load event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the load event of each matched element, which will only be executed once.\nUnlike a call to the normal .load() method, calling .oneload() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneload","examples":[{"code":"$(\"p\").oneload( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first load","before":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes a bound load event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the load event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound load event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unload","examples":[{"code":"$(\"p\").unload( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onload=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes all bound load events from each of the matched elements.","params":[],"desc":"Removes all bound load events from each of the matched elements.","tests":[],"type":"jQuery","name":"unload","examples":[{"code":"$(\"p\").unload();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the select event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the select event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the select event of each matched element.","tests":[],"type":"jQuery","name":"select","examples":[{"code":"$(\"p\").select( function() { alert(\"Hello\"); } );","result":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Trigger the select event of each matched element.","params":[],"desc":"Trigger the select event of each matched element. This causes all of the functions\nthat have been bound to thet select event to be executed.","tests":[],"type":"jQuery","name":"select","examples":[{"code":"$(\"p\").select();","result":"alert('Hello');","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Bind a function to the select event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the select event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the select event of each matched element, which will only be executed once.\nUnlike a call to the normal .select() method, calling .oneselect() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneselect","examples":[{"code":"$(\"p\").oneselect( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first select","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Removes a bound select event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the select event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound select event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unselect","examples":[{"code":"$(\"p\").unselect( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onselect=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Removes all bound select events from each of the matched elements.","params":[],"desc":"Removes all bound select events from each of the matched elements.","tests":[],"type":"jQuery","name":"unselect","examples":[{"code":"$(\"p\").unselect();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Bind a function to the mouseup event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mouseup event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mouseup event of each matched element.","tests":[],"type":"jQuery","name":"mouseup","examples":[{"code":"$(\"p\").mouseup( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the mouseup event of each matched element.","params":[],"desc":"Trigger the mouseup event of each matched element. This causes all of the functions\nthat have been bound to thet mouseup event to be executed.","tests":[],"type":"jQuery","name":"mouseup","examples":[{"code":"$(\"p\").mouseup();","result":"alert('Hello');","before":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mouseup event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the mouseup event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mouseup event of each matched element, which will only be executed once.\nUnlike a call to the normal .mouseup() method, calling .onemouseup() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onemouseup","examples":[{"code":"$(\"p\").onemouseup( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mouseup","before":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound mouseup event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the mouseup event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound mouseup event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unmouseup","examples":[{"code":"$(\"p\").unmouseup( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseup=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound mouseup events from each of the matched elements.","params":[],"desc":"Removes all bound mouseup events from each of the matched elements.","tests":[],"type":"jQuery","name":"unmouseup","examples":[{"code":"$(\"p\").unmouseup();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the unload event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the unload event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the unload event of each matched element.","tests":[],"type":"jQuery","name":"unload","examples":[{"code":"$(\"p\").unload( function() { alert(\"Hello\"); } );","result":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Trigger the unload event of each matched element.","params":[],"desc":"Trigger the unload event of each matched element. This causes all of the functions\nthat have been bound to thet unload event to be executed.","tests":[],"type":"jQuery","name":"unload","examples":[{"code":"$(\"p\").unload();","result":"alert('Hello');","before":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the unload event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the unload event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the unload event of each matched element, which will only be executed once.\nUnlike a call to the normal .unload() method, calling .oneunload() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneunload","examples":[{"code":"$(\"p\").oneunload( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first unload","before":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes a bound unload event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the unload event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound unload event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"ununload","examples":[{"code":"$(\"p\").ununload( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onunload=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes all bound unload events from each of the matched elements.","params":[],"desc":"Removes all bound unload events from each of the matched elements.","tests":[],"type":"jQuery","name":"ununload","examples":[{"code":"$(\"p\").ununload();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the change event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the change event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the change event of each matched element.","tests":[],"type":"jQuery","name":"change","examples":[{"code":"$(\"p\").change( function() { alert(\"Hello\"); } );","result":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Trigger the change event of each matched element.","params":[],"desc":"Trigger the change event of each matched element. This causes all of the functions\nthat have been bound to thet change event to be executed.","tests":[],"type":"jQuery","name":"change","examples":[{"code":"$(\"p\").change();","result":"alert('Hello');","before":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Bind a function to the change event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the change event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the change event of each matched element, which will only be executed once.\nUnlike a call to the normal .change() method, calling .onechange() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onechange","examples":[{"code":"$(\"p\").onechange( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first change","before":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Removes a bound change event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the change event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound change event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unchange","examples":[{"code":"$(\"p\").unchange( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onchange=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Removes all bound change events from each of the matched elements.","params":[],"desc":"Removes all bound change events from each of the matched elements.","tests":[],"type":"jQuery","name":"unchange","examples":[{"code":"$(\"p\").unchange();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Form"},{"short":"Bind a function to the mouseout event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mouseout event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mouseout event of each matched element.","tests":[],"type":"jQuery","name":"mouseout","examples":[{"code":"$(\"p\").mouseout( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the mouseout event of each matched element.","params":[],"desc":"Trigger the mouseout event of each matched element. This causes all of the functions\nthat have been bound to thet mouseout event to be executed.","tests":[],"type":"jQuery","name":"mouseout","examples":[{"code":"$(\"p\").mouseout();","result":"alert('Hello');","before":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mouseout event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the mouseout event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mouseout event of each matched element, which will only be executed once.\nUnlike a call to the normal .mouseout() method, calling .onemouseout() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onemouseout","examples":[{"code":"$(\"p\").onemouseout( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mouseout","before":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound mouseout event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the mouseout event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound mouseout event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unmouseout","examples":[{"code":"$(\"p\").unmouseout( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseout=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound mouseout events from each of the matched elements.","params":[],"desc":"Removes all bound mouseout events from each of the matched elements.","tests":[],"type":"jQuery","name":"unmouseout","examples":[{"code":"$(\"p\").unmouseout();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the keyup event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keyup event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the keyup event of each matched element.","tests":[],"type":"jQuery","name":"keyup","examples":[{"code":"$(\"p\").keyup( function() { alert(\"Hello\"); } );","result":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Trigger the keyup event of each matched element.","params":[],"desc":"Trigger the keyup event of each matched element. This causes all of the functions\nthat have been bound to thet keyup event to be executed.","tests":[],"type":"jQuery","name":"keyup","examples":[{"code":"$(\"p\").keyup();","result":"alert('Hello');","before":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Bind a function to the keyup event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the keyup event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the keyup event of each matched element, which will only be executed once.\nUnlike a call to the normal .keyup() method, calling .onekeyup() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onekeyup","examples":[{"code":"$(\"p\").onekeyup( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first keyup","before":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Removes a bound keyup event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the keyup event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound keyup event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unkeyup","examples":[{"code":"$(\"p\").unkeyup( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeyup=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Removes all bound keyup events from each of the matched elements.","params":[],"desc":"Removes all bound keyup events from each of the matched elements.","tests":[],"type":"jQuery","name":"unkeyup","examples":[{"code":"$(\"p\").unkeyup();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Keyboard"},{"short":"Bind a function to the click event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the click event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the click event of each matched element.","tests":[],"type":"jQuery","name":"click","examples":[{"code":"$(\"p\").click( function() { alert(\"Hello\"); } );","result":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the click event of each matched element.","params":[],"desc":"Trigger the click event of each matched element. This causes all of the functions\nthat have been bound to thet click event to be executed.","tests":[],"type":"jQuery","name":"click","examples":[{"code":"$(\"p\").click();","result":"alert('Hello');","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the click event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the click event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the click event of each matched element, which will only be executed once.\nUnlike a call to the normal .click() method, calling .oneclick() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneclick","examples":[{"code":"$(\"p\").oneclick( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first click","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound click event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the click event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound click event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unclick","examples":[{"code":"$(\"p\").unclick( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onclick=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound click events from each of the matched elements.","params":[],"desc":"Removes all bound click events from each of the matched elements.","tests":[],"type":"jQuery","name":"unclick","examples":[{"code":"$(\"p\").unclick();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the resize event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the resize event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the resize event of each matched element.","tests":[],"type":"jQuery","name":"resize","examples":[{"code":"$(\"p\").resize( function() { alert(\"Hello\"); } );","result":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Trigger the resize event of each matched element.","params":[],"desc":"Trigger the resize event of each matched element. This causes all of the functions\nthat have been bound to thet resize event to be executed.","tests":[],"type":"jQuery","name":"resize","examples":[{"code":"$(\"p\").resize();","result":"alert('Hello');","before":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the resize event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the resize event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the resize event of each matched element, which will only be executed once.\nUnlike a call to the normal .resize() method, calling .oneresize() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"oneresize","examples":[{"code":"$(\"p\").oneresize( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first resize","before":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes a bound resize event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the resize event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound resize event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unresize","examples":[{"code":"$(\"p\").unresize( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onresize=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Removes all bound resize events from each of the matched elements.","params":[],"desc":"Removes all bound resize events from each of the matched elements.","tests":[],"type":"jQuery","name":"unresize","examples":[{"code":"$(\"p\").unresize();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Browser"},{"short":"Bind a function to the mousemove event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousemove event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mousemove event of each matched element.","tests":[],"type":"jQuery","name":"mousemove","examples":[{"code":"$(\"p\").mousemove( function() { alert(\"Hello\"); } );","result":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the mousemove event of each matched element.","params":[],"desc":"Trigger the mousemove event of each matched element. This causes all of the functions\nthat have been bound to thet mousemove event to be executed.","tests":[],"type":"jQuery","name":"mousemove","examples":[{"code":"$(\"p\").mousemove();","result":"alert('Hello');","before":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mousemove event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the mousemove event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mousemove event of each matched element, which will only be executed once.\nUnlike a call to the normal .mousemove() method, calling .onemousemove() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onemousemove","examples":[{"code":"$(\"p\").onemousemove( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mousemove","before":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound mousemove event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the mousemove event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound mousemove event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unmousemove","examples":[{"code":"$(\"p\").unmousemove( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousemove=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound mousemove events from each of the matched elements.","params":[],"desc":"Removes all bound mousemove events from each of the matched elements.","tests":[],"type":"jQuery","name":"unmousemove","examples":[{"code":"$(\"p\").unmousemove();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mousedown event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mousedown event of each matched element.","tests":[],"type":"jQuery","name":"mousedown","examples":[{"code":"$(\"p\").mousedown( function() { alert(\"Hello\"); } );","result":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the mousedown event of each matched element.","params":[],"desc":"Trigger the mousedown event of each matched element. This causes all of the functions\nthat have been bound to thet mousedown event to be executed.","tests":[],"type":"jQuery","name":"mousedown","examples":[{"code":"$(\"p\").mousedown();","result":"alert('Hello');","before":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mousedown event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mousedown event of each matched element, which will only be executed once.\nUnlike a call to the normal .mousedown() method, calling .onemousedown() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onemousedown","examples":[{"code":"$(\"p\").onemousedown( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mousedown","before":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound mousedown event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the mousedown event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound mousedown event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unmousedown","examples":[{"code":"$(\"p\").unmousedown( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousedown=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound mousedown events from each of the matched elements.","params":[],"desc":"Removes all bound mousedown events from each of the matched elements.","tests":[],"type":"jQuery","name":"unmousedown","examples":[{"code":"$(\"p\").unmousedown();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mouseover event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mouseover event of each matched element.","tests":[],"type":"jQuery","name":"mouseover","examples":[{"code":"$(\"p\").mouseover( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Trigger the mouseover event of each matched element.","params":[],"desc":"Trigger the mouseover event of each matched element. This causes all of the functions\nthat have been bound to thet mousedown event to be executed.","tests":[],"type":"jQuery","name":"mouseover","examples":[{"code":"$(\"p\").mouseover();","result":"alert('Hello');","before":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Bind a function to the mouseover event of each matched element, which will only be executed once.","params":[{"type":"Function","desc":"A function to bind to the mouseover event on each of the matched elements.","name":"fn"}],"desc":"Bind a function to the mouseover event of each matched element, which will only be executed once.\nUnlike a call to the normal .mouseover() method, calling .onemouseover() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","tests":[],"type":"jQuery","name":"onemouseover","examples":[{"code":"$(\"p\").onemouseover( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mouseover","before":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes a bound mouseover event from each of the matched\nelements.","params":[{"type":"Function","desc":"A function to unbind from the mouseover event on each of the matched elements.","name":"fn"}],"desc":"Removes a bound mouseover event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","tests":[],"type":"jQuery","name":"unmouseover","examples":[{"code":"$(\"p\").unmouseover( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseover=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"Removes all bound mouseover events from each of the matched elements.","params":[],"desc":"Removes all bound mouseover events from each of the matched elements.","tests":[],"type":"jQuery","name":"unmouseover","examples":[{"code":"$(\"p\").unmouseover();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"cat":"Events/Mouse"},{"short":"","params":[],"desc":"","tests":["var count;\n// ignore load\nvar e = (\"blur,focus,resize,scroll,unload,click,dblclick,\" +\n\t\t\"mousedown,mouseup,mousemove,mouseover,mouseout,change,reset,select,\" + \n\t\t\"submit,keydown,keypress,keyup,error\").split(\",\");\nvar handler1 = function(event) {\n\tcount++;\n};\nvar handler2 = function(event) {\n\tcount++;\n};\nfor( var i=0; i &lt; e.length; i++) {\n\tvar event = e[i];\n\tcount = 0;\n\t// bind handler\n\t$(document)[event](handler1);\n\t\t$(document)[event](handler2);\n\t$(document)[\"one\"+event](handler1);\n\t\n\t// call event two times\n\t$(document)[event]();\n\t$(document)[event]();\n\t\n\t// unbind events\n\t$(document)[\"un\"+event](handler1);\n\t// call once more\n\t$(document)[event]();\n\n\t// remove all handlers\n\t\t$(document)[\"un\"+event]();\n\n\t// call once more\n\t$(document)[event]();\n\t\n\t// assert count\n    ok( count == 6, 'Checking event ' + event);\n}"],"name":"eventTesting","private":1,"examples":[],"cat":"Events"},{"short":"Show all matched elements using a graceful animation.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Show all matched elements using a graceful animation.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","tests":[],"type":"jQuery","name":"show","examples":[{"code":"$(\"p\").show(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Show all matched elements using a graceful animation and firing a callback\nfunction after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Show all matched elements using a graceful animation and firing a callback\nfunction after completion.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","tests":[],"type":"jQuery","name":"show","examples":[{"code":"$(\"p\").show(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Hide all matched elements using a graceful animation.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Hide all matched elements using a graceful animation.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","tests":[],"type":"jQuery","name":"hide","examples":[{"code":"$(\"p\").hide(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Hide all matched elements using a graceful animation and firing a callback\nfunction after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Hide all matched elements using a graceful animation and firing a callback\nfunction after completion.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","tests":[],"type":"jQuery","name":"hide","examples":[{"code":"$(\"p\").hide(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Reveal all matched elements by adjusting their height.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Reveal all matched elements by adjusting their height.\nOnly the height is adjusted for this animation, causing all matched\nelements to be revealed in a \"sliding\" manner.","tests":[],"type":"jQuery","name":"slideDown","examples":[{"code":"$(\"p\").slideDown(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Reveal all matched elements by adjusting their height and firing a callback\nfunction after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Reveal all matched elements by adjusting their height and firing a callback\nfunction after completion.\nOnly the height is adjusted for this animation, causing all matched\nelements to be revealed in a \"sliding\" manner.","tests":[],"type":"jQuery","name":"slideDown","examples":[{"code":"$(\"p\").slideDown(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Hide all matched elements by adjusting their height.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Hide all matched elements by adjusting their height.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","tests":[],"type":"jQuery","name":"slideUp","examples":[{"code":"$(\"p\").slideUp(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Hide all matched elements by adjusting their height and firing a callback\nfunction after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Hide all matched elements by adjusting their height and firing a callback\nfunction after completion.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","tests":[],"type":"jQuery","name":"slideUp","examples":[{"code":"$(\"p\").slideUp(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Toggle the visibility of all matched elements by adjusting their height.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Toggle the visibility of all matched elements by adjusting their height.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","tests":[],"type":"jQuery","name":"slideToggle","examples":[{"code":"$(\"p\").slideToggle(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Toggle the visibility of all matched elements by adjusting their height\nand firing a callback function after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Toggle the visibility of all matched elements by adjusting their height\nand firing a callback function after completion.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","tests":[],"type":"jQuery","name":"slideToggle","examples":[{"code":"$(\"p\").slideToggle(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Fade in all matched elements by adjusting their opacity.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Fade in all matched elements by adjusting their opacity.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","tests":[],"type":"jQuery","name":"fadeIn","examples":[{"code":"$(\"p\").fadeIn(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Fade in all matched elements by adjusting their opacity and firing a \ncallback function after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Fade in all matched elements by adjusting their opacity and firing a \ncallback function after completion.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","tests":[],"type":"jQuery","name":"fadeIn","examples":[{"code":"$(\"p\").fadeIn(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Fade out all matched elements by adjusting their opacity.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"desc":"Fade out all matched elements by adjusting their opacity.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","tests":[],"type":"jQuery","name":"fadeOut","examples":[{"code":"$(\"p\").fadeOut(\"slow\");"}],"cat":"Effects/Animations"},{"short":"Fade out all matched elements by adjusting their opacity and firing a \ncallback function after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Fade out all matched elements by adjusting their opacity and firing a \ncallback function after completion.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","tests":[],"type":"jQuery","name":"fadeOut","examples":[{"code":"$(\"p\").fadeOut(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"Fade the opacity of all matched elements to a specified opacity.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Number","desc":"The opacity to fade to (a number from 0 to 1).","name":"opacity"}],"desc":"Fade the opacity of all matched elements to a specified opacity.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","tests":[],"type":"jQuery","name":"fadeTo","examples":[{"code":"$(\"p\").fadeTo(\"slow\", 0.5);"}],"cat":"Effects/Animations"},{"short":"Fade the opacity of all matched elements to a specified opacity and \nfiring a callback function after completion.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Number","desc":"The opacity to fade to (a number from 0 to 1).","name":"opacity"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"Fade the opacity of all matched elements to a specified opacity and \nfiring a callback function after completion.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","tests":[],"type":"jQuery","name":"fadeTo","examples":[{"code":"$(\"p\").fadeTo(\"slow\", 0.5, function(){\n  alert(\"Animation Done.\");\n});"}],"cat":"Effects/Animations"},{"short":"A function for making your own, custom, animations.","params":[{"type":"Hash","desc":"A set of style attributes that you wish to animate, and to what end.","name":"params"},{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"desc":"A function for making your own, custom, animations. The key aspect of\nthis function is the object of style properties that will be animated,\nand to what end. Each key within the object represents a style property\nthat will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\nThe value associated with the key represents to what end the property\nwill be animated. If a number is provided as the value, then the style\nproperty will be transitioned from its current state to that new number.\nOterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\nanimation will be constructed for that property.","tests":[],"type":"jQuery","name":"animate","examples":[{"code":"$(\"p\").animate({\n  height: 'toggle', opacity: 'toggle'\n}, \"slow\");"},{"code":"$(\"p\").animate({\n  left: 50, opacity: 'show'\n}, 500);"}],"cat":"Effects/Animations"},{"short":"Load HTML from a remote file and inject it into the DOM, only if it's\nbeen modified by the server.","params":[{"type":"String","desc":"The URL of the HTML file to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Load HTML from a remote file and inject it into the DOM, only if it's\nbeen modified by the server.","tests":[],"type":"jQuery","name":"loadIfModified","examples":[{"code":"$(\"#feeds\").loadIfModified(\"feeds.html\")","result":"&lt;div id=\"feeds\"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;","before":"&lt;div id=\"feeds\"&gt;&lt;/div&gt;"}],"cat":"AJAX"},{"short":"Load HTML from a remote file and inject it into the DOM.","params":[{"type":"String","desc":"The URL of the HTML file to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Load HTML from a remote file and inject it into the DOM.","tests":["stop();\n$('#first').load(\"data/name.php\", function() {\n\tok( $('#first').text() == 'ERROR', 'Check if content was injected into the DOM' );\n\tstart();\n});","stop(); // check if load can be called with only url\n$('#first').load(\"data/name.php\");\n$.get(\"data/name.php\", function() {\n  ok( $('#first').text() == 'ERROR', 'Check if load works without callback');\n  start();\n});"],"type":"jQuery","name":"load","examples":[{"code":"$(\"#feeds\").load(\"feeds.html\")","result":"&lt;div id=\"feeds\"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;","before":"&lt;div id=\"feeds\"&gt;&lt;/div&gt;"},{"desc":"Same as above, but with an additional parameter\nand a callback that is executed when the data was loaded.","code":"$(\"#feeds\").load(\"feeds.html\",\n  {test: true},\n  function() { alert(\"load is done\"); }\n);"}],"cat":"AJAX"},{"short":"Serializes a set of input elements into a string of data.","params":[],"desc":"Serializes a set of input elements into a string of data.\nThis will serialize all given elements. If you need \nserialization similar to the form submit of a browser,\nyou should use the form plugin. This is also true for\nselects with multiple attribute set, only a single option\nis serialized.","tests":["var data = $(':input').not('button').serialize();\n// ignore button, IE takes text content as value, not relevant for this test\nok( data == 'action=Test&amp;text2=Test&amp;radio1=on&amp;radio2=on&amp;check=on&amp;=on&amp;hidden=&amp;foo[bar]=&amp;name=name&amp;=foobar&amp;select1=&amp;select2=3&amp;select3=1', 'Check form serialization as query string' );"],"type":"String","name":"serialize","examples":[{"after":"name=John&amp;location=Boston","desc":"Serialize a selection of input elements to a string","before":"&lt;input type='text' name='name' value='John'/&gt;\n&lt;input type='text' name='location' value='Boston'/&gt;","code":"$(\"input[@type=text]\").serialize();"}],"cat":"AJAX"},{"short":"Attach a function to be executed whenever an AJAX request begins.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"desc":"Attach a function to be executed whenever an AJAX request begins.","tests":[],"type":"jQuery","name":"ajaxStart","examples":[{"desc":"Show a loading message whenever an AJAX request starts.","code":"$(\"#loading\").ajaxStart(function(){\n  $(this).show();\n});"}],"cat":"AJAX"},{"short":"Attach a function to be executed whenever all AJAX requests have ended.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"desc":"Attach a function to be executed whenever all AJAX requests have ended.","tests":[],"type":"jQuery","name":"ajaxStop","examples":[{"desc":"Hide a loading message after all the AJAX requests have stopped.","code":"$(\"#loading\").ajaxStop(function(){\n  $(this).hide();\n});"}],"cat":"AJAX"},{"short":"Attach a function to be executed whenever an AJAX request completes.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"desc":"Attach a function to be executed whenever an AJAX request completes.","tests":[],"type":"jQuery","name":"ajaxComplete","examples":[{"desc":"Show a message when an AJAX request completes.","code":"$(\"#msg\").ajaxComplete(function(){\n  $(this).append(\"&lt;li&gt;Request Complete.&lt;/li&gt;\");\n});"}],"cat":"AJAX"},{"short":"Attach a function to be executed whenever an AJAX request completes\nsuccessfully.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"desc":"Attach a function to be executed whenever an AJAX request completes\nsuccessfully.","tests":[],"type":"jQuery","name":"ajaxSuccess","examples":[{"desc":"Show a message when an AJAX request completes successfully.","code":"$(\"#msg\").ajaxSuccess(function(){\n  $(this).append(\"&lt;li&gt;Successful Request!&lt;/li&gt;\");\n});"}],"cat":"AJAX"},{"short":"Attach a function to be executed whenever an AJAX request fails.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"desc":"Attach a function to be executed whenever an AJAX request fails.","tests":[],"type":"jQuery","name":"ajaxError","examples":[{"desc":"Show a message when an AJAX request fails.","code":"$(\"#msg\").ajaxError(function(){\n  $(this).append(\"&lt;li&gt;Error requesting page.&lt;/li&gt;\");\n});"}],"cat":"AJAX"},{"params":[],"desc":"","tests":["stop(); var counter = { complete: 0, success: 0, error: 0 };\nvar success = function() { counter.success++ };\nvar error = function() { counter.error++ };\nvar complete = function() { counter.complete++ };\n$('#foo').ajaxStart(complete).ajaxStop(complete).ajaxComplete(complete).ajaxError(error).ajaxSuccess(success);\n// start with successful test\n$.ajax({url: \"data/name.php\", success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check succesful request' );\n  ok( counter.success == 2, 'Check succesful request' );\n  ok( counter.complete == 3, 'Check succesful request' );\n  counter.error = 0; counter.success = 0; counter.complete = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: \"data/name.php?wait=5\", success: success, error: error, complete: function() {\n    ok( counter.error == 2, 'Check failed request' );\n    ok( counter.success == 0, 'Check failed request' );\n    ok( counter.complete == 3, 'Check failed request' );\n    start();\n  }});\n}});","stop(); var counter = { complete: 0, success: 0, error: 0 };\ncounter.error = 0; counter.success = 0; counter.complete = 0;\nvar success = function() { counter.success++ };\nvar error = function() { counter.error++ };\n$.ajaxTimeout(0);\n$.ajax({url: \"data/name.php\", global: false, success: success, error: error, complete: function() {\n  ok( counter.error == 0, 'Check sucesful request without globals' );\n  ok( counter.success == 1, 'Check sucesful request without globals' );\n  ok( counter.complete == 0, 'Check sucesful request without globals' );\n  counter.error = 0; counter.success = 0; counter.complete = 0;\n  $.ajaxTimeout(500);\n  $.ajax({url: \"data/name.php?wait=5\", global: false, success: success, error: error, complete: function() {\n     ok( counter.error == 1, 'Check failed request without globals' );\n     ok( counter.success == 0, 'Check failed request without globals' );\n     ok( counter.complete == 0, 'Check failed request without globals' );\n     start();\n  }});\n}});"],"name":"ajaxHandlersTesting","private":1,"examples":[],"short":""},{"short":"Load a remote page using an HTTP GET request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Load a remote page using an HTTP GET request. All of the arguments to\nthe method (except URL) are optional.","tests":[],"type":"jQuery","name":"$.get","examples":[{"code":"$.get(\"test.cgi\")"},{"code":"$.get(\"test.cgi\", { name: \"John\", time: \"2pm\" } )"},{"code":"$.get(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n})"},{"code":"$.get(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n)"}],"cat":"AJAX"},{"short":"Load a remote page using an HTTP GET request, only if it hasn't\nbeen modified since it was last retrieved.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Load a remote page using an HTTP GET request, only if it hasn't\nbeen modified since it was last retrieved. All of the arguments to\nthe method (except URL) are optional.","tests":["stop();\n$.getIfModified(\"data/name.php\", function(msg) {\n    ok( msg == 'ERROR', 'Check ifModified' );\n    start();\n});"],"type":"jQuery","name":"$.getIfModified","examples":[{"code":"$.getIfModified(\"test.html\")"},{"code":"$.getIfModified(\"test.html\", { name: \"John\", time: \"2pm\" } )"},{"code":"$.getIfModified(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n})"},{"code":"$.getifModified(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n)"}],"cat":"AJAX"},{"short":"Loads, and executes, a remote JavaScript file using an HTTP GET request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Loads, and executes, a remote JavaScript file using an HTTP GET request.\nAll of the arguments to the method (except URL) are optional.","tests":["stop();\n$.getScript(\"data/test.js\", function() {\n\tok( foobar == \"bar\", 'Check if script was evaluated' );\n\tstart();\n});"],"type":"jQuery","name":"$.getScript","examples":[{"code":"$.getScript(\"test.js\")"},{"code":"$.getScript(\"test.js\", function(){\n  alert(\"Script loaded and executed.\");\n})"}],"cat":"AJAX"},{"short":"Load a remote JSON object using an HTTP GET request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Load a remote JSON object using an HTTP GET request.\nAll of the arguments to the method (except URL) are optional.","tests":["stop();\n$.getJSON(\"data/json.php\", {json: \"array\"}, function(json) {\n  ok( json[0].name == 'John', 'Check JSON: first, name' );\n  ok( json[0].age == 21, 'Check JSON: first, age' );\n  ok( json[1].name == 'Peter', 'Check JSON: second, name' );\n  ok( json[1].age == 25, 'Check JSON: second, age' );\n  start();\n});","stop();\n$.getJSON(\"data/json.php\", function(json) {\n  ok( json.data.lang == 'en', 'Check JSON: lang' );\n  ok( json.data.length == 25, 'Check JSON: length' );\n  start();\n});"],"type":"jQuery","name":"$.getJSON","examples":[{"code":"$.getJSON(\"test.js\", function(json){\n  alert(\"JSON Data: \" + json.users[3].name);\n})"},{"code":"$.getJSON(\"test.js\",\n  { name: \"John\", time: \"2pm\" },\n  function(json){\n    alert(\"JSON Data: \" + json.users[3].name);\n  }\n)"}],"cat":"AJAX"},{"short":"Load a remote page using an HTTP POST request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"desc":"Load a remote page using an HTTP POST request. All of the arguments to\nthe method (except URL) are optional.","tests":["stop();\n$.post(\"data/name.php\", {xml: \"5-2\"}, function(xml){\n  $('math', xml).each(function() {\n\t    ok( $('calculation', this).text() == '5-2', 'Check for XML' );\n\t    ok( $('result', this).text() == '3', 'Check for XML' );\n\t });\n  start();\n});"],"type":"jQuery","name":"$.post","examples":[{"code":"$.post(\"test.cgi\")"},{"code":"$.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } )"},{"code":"$.post(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n})"},{"code":"$.post(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n)"}],"cat":"AJAX"},{"short":"Set the timeout of all AJAX requests to a specific amount of time.","params":[{"type":"Number","desc":"How long before an AJAX request times out.","name":"time"}],"desc":"Set the timeout of all AJAX requests to a specific amount of time.\nThis will make all future AJAX requests timeout after a specified amount\nof time (the default is no timeout).","tests":["stop();\nvar passed = 0;\nvar timeout;\n$.ajaxTimeout(1000);\nvar pass = function() {\n\tpassed++;\n\tif(passed == 2) {\n\t\tok( true, 'Check local and global callbacks after timeout' );\n\t\tclearTimeout(timeout);\n     $('#main').unbind(\"ajaxError\");\n\t\tstart();\n\t}\n};\nvar fail = function() {\n\tok( false, 'Check for timeout failed' );\n\tstart();\n};\ntimeout = setTimeout(fail, 1500);\n$('#main').ajaxError(pass);\n$.ajax({\n  type: \"GET\",\n  url: \"data/name.php?wait=5\",\n  error: pass,\n  success: fail\n});","stop(); $.ajaxTimeout(50);\n$.ajax({\n  type: \"GET\",\n  timeout: 5000,\n  url: \"data/name.php?wait=1\",\n  error: function() {\n\t   ok( false, 'Check for local timeout failed' );\n\t   start();\n  },\n  success: function() {\n    ok( true, 'Check for local timeout' );\n    start();\n  }\n});\n// reset timeout\n$.ajaxTimeout(0);"],"type":"jQuery","name":"$.ajaxTimeout","examples":[{"desc":"Make all AJAX requests timeout after 5 seconds.","code":"$.ajaxTimeout( 5000 );"}],"cat":"AJAX"},{"short":"Load a remote page using an HTTP request.","params":[{"type":"Hash","desc":"A set of properties to initialize the request with.","name":"prop"}],"desc":"Load a remote page using an HTTP request. This function is the primary\nmeans of making AJAX requests using jQuery. $.ajax() takes one property,\nan object of key/value pairs, that're are used to initalize the request.\n\nThese are all the key/values that can be passed in to 'prop':\n\n(String) type - The type of request to make (e.g. \"POST\" or \"GET\").\n\n(String) url - The URL of the page to request.\n\n(String) data - A string of data to be sent to the server (POST only).\n\n(String) dataType - The type of data that you're expecting back from\nthe server (e.g. \"xml\", \"html\", \"script\", or \"json\").\n\n(Boolean) ifModified - Allow the request to be successful only if the\nresponse has changed since the last request, default is false, ignoring\nthe Last-Modified header\n\n(Number) timeout - Local timeout to override global timeout, eg. to give a\nsingle request a longer timeout while all others timeout after 1 seconds,\nsee $.ajaxTimeout\n\n(Boolean) global - Wheather to trigger global AJAX event handlers for\nthis request, default is true. Set to true to prevent that global handlers\nlike ajaxStart or ajaxStop are triggered.\n\n(Function) error - A function to be called if the request fails. The\nfunction gets passed two arguments: The XMLHttpRequest object and a\nstring describing the type of error that occurred.\n\n(Function) success - A function to be called if the request succeeds. The\nfunction gets passed one argument: The data returned from the server,\nformatted according to the 'dataType' parameter.\n\n(Function) complete - A function to be called when the request finishes. The\nfunction gets passed two arguments: The XMLHttpRequest object and a\nstring describing the type the success of the request.","tests":["stop();\n$.ajax({\n  type: \"GET\",\n  url: \"data/name.php?name=foo\",\n  success: function(msg){\n    ok( msg == 'bar', 'Check for GET' );\n    start();\n  }\n});","stop();\n$.ajax({\n  type: \"POST\",\n  url: \"data/name.php\",\n  data: \"name=peter\",\n  success: function(msg){\n    ok( msg == 'pan', 'Check for POST' );\n    start();\n  }\n});"],"type":"jQuery","name":"$.ajax","examples":[{"desc":"Load and execute a JavaScript file.","code":"$.ajax({\n  type: \"GET\",\n  url: \"test.js\",\n  dataType: \"script\"\n})"},{"desc":"Save some data to the server and notify the user once its complete.","code":"$.ajax({\n  type: \"POST\",\n  url: \"some.php\",\n  data: \"name=John&amp;location=Boston\",\n  success: function(msg){\n    alert( \"Data Saved: \" + msg );\n  }\n});"}],"cat":"AJAX"}]