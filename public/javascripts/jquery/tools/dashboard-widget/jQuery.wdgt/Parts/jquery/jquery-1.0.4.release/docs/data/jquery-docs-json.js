[{"options":[],"cat":"Core","desc":"Create a new jQuery Object","params":[],"short":"Create a new jQuery Object","examples":[],"constructor":[1],"tests":[],"name":"jQuery","private":1},{"options":[],"cat":"Core","type":"jQuery","desc":"This function accepts a string containing a CSS or\nbasic XPath selector which is then used to match a set of elements.\n\nThe core functionality of jQuery centers around this function.\nEverything in jQuery is based upon this, or uses this in some way.\nThe most basic use of this function is to pass in an expression\n(usually consisting of CSS or XPath), which then finds all matching\nelements.\n\nBy default, $() looks for DOM elements within the context of the\ncurrent HTML document.","see":["$(Element)","$(Element&lt;Array&gt;)"],"params":[{"type":"String","desc":"An expression to search with","name":"expr"},{"type":"Element","desc":"(optional) A DOM Element, or Document, representing the base context.","name":"context"}],"short":"This function accepts a string containing a CSS or\nbasic XPath selector which is then used to match a set of elements.","examples":[{"desc":"This finds all p elements that are children of a div element.","before":"&lt;p&gt;one&lt;/p&gt; &lt;div&gt;&lt;p&gt;two&lt;/p&gt;&lt;/div&gt; &lt;p&gt;three&lt;/p&gt;","code":"$(\"div &gt; p\")","result":"[ &lt;p&gt;two&lt;/p&gt; ]"},{"desc":"Searches for all inputs of type radio within the first form in the document","code":"$(\"input:radio\", document.forms[0])"},{"desc":"This finds all div elements within the specified XML document.","code":"$(\"div\", xml.responseXML)"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"This function accepts a string of raw HTML.\n\nThe HTML string is different from the traditional selectors in that\nit creates the DOM elements representing that HTML string, on the fly,\nto be (assumedly) inserted into the document later.","params":[{"type":"String","desc":"A string of HTML to create on the fly.","name":"html"}],"short":"This function accepts a string of raw HTML.","examples":[{"desc":"Creates a div element (and all of its contents) dynamically, \nand appends it to the element with the ID of body. Internally, an\nelement is created and it's innerHTML property set to the given markup.\nIt is therefore both quite flexible and limited.","code":"$(\"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;\").appendTo(\"#body\")"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"Wrap jQuery functionality around a specific DOM Element.\nThis function also accepts XML Documents and Window objects\nas valid arguments (even though they are not DOM Elements).","params":[{"type":"Element","desc":"A DOM element to be encapsulated by a jQuery object.","name":"elem"}],"short":"Wrap jQuery functionality around a specific DOM Element.","examples":[{"code":"$(document).find(\"div &gt; p\")","result":"[ &lt;p&gt;two&lt;/p&gt; ]","before":"&lt;p&gt;one&lt;/p&gt; &lt;div&gt;&lt;p&gt;two&lt;/p&gt;&lt;/div&gt; &lt;p&gt;three&lt;/p&gt;"},{"desc":"Sets the background color of the page to black.","code":"$(document.body).background( \"black\" );"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"Wrap jQuery functionality around a set of DOM Elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of DOM elements to be encapsulated by a jQuery object.","name":"elems"}],"short":"Wrap jQuery functionality around a set of DOM Elements.","examples":[{"desc":"Hides all the input elements within a form","code":"$( myForm.elements ).hide()"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"A shorthand for $(document).ready(), allowing you to bind a function\nto be executed when the DOM document has finished loading. This function\nbehaves just like $(document).ready(), in that it should be used to wrap\nall of the other $() operations on your page. While this function is,\ntechnically, chainable - there really isn't much use for chaining against it.\nYou can have as many $(document).ready events on your page as you like.","params":[{"type":"Function","desc":"The function to execute when the DOM is ready.","name":"fn"}],"short":"A shorthand for $(document).","examples":[{"desc":"Executes the function when the DOM is ready to be used.","code":"$(function(){\n  // Document is ready\n});"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"A means of creating a cloned copy of a jQuery object. This function\ncopies the set of matched elements from one jQuery object and creates\nanother, new, jQuery object containing the same elements.","params":[{"type":"jQuery","desc":"The jQuery object to be cloned.","name":"obj"}],"short":"A means of creating a cloned copy of a jQuery object.","examples":[{"desc":"Locates all p elements with all div elements, without disrupting the original jQuery object contained in 'div' (as would normally be the case if a simple div.find(\"p\") was done).","code":"var div = $(\"div\");\n$( div ).find(\"p\");"}],"tests":[],"name":"$"},{"options":[],"property":1,"cat":"Core","type":"String","desc":"The current version of jQuery.","params":[],"short":"The current version of jQuery.","examples":[],"tests":[],"name":"jquery","private":1},{"options":[],"property":1,"cat":"Core","type":"Number","desc":"The number of elements currently matched.","params":[],"short":"The number of elements currently matched.","examples":[{"code":"$(\"img\").length;","result":"2","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":[],"name":"length"},{"options":[],"cat":"Core","type":"Number","desc":"The number of elements currently matched.","params":[],"short":"The number of elements currently matched.","examples":[{"code":"$(\"img\").size();","result":"2","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":[],"name":"size"},{"options":[],"cat":"Core","type":"Array&lt;Element&gt;","desc":"Access all matched elements. This serves as a backwards-compatible\nway of accessing all matched elements (other than the jQuery object\nitself, which is, in fact, an array of elements).","params":[],"short":"Access all matched elements.","examples":[{"code":"$(\"img\").get();","result":"[ &lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt; ]","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":[],"name":"get"},{"options":[],"cat":"Core","type":"Element","desc":"Access a single matched element. num is used to access the\nNth element matched.","params":[{"type":"Number","desc":"Access the element in the Nth position.","name":"num"}],"short":"Access a single matched element.","examples":[{"code":"$(\"img\").get(1);","result":"[ &lt;img src=\"test1.jpg\"/&gt; ]","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":[],"name":"get"},{"options":[],"cat":"Core","type":"jQuery","desc":"Set the jQuery object to an array of elements.","params":[{"type":"Elements","desc":"An array of elements","name":"elems"}],"short":"Set the jQuery object to an array of elements.","examples":[{"code":"$(\"img\").set([ document.body ]);","result":"$(\"img\").set() == [ document.body ]"}],"tests":[],"name":"set","private":1},{"options":[],"cat":"Core","type":"jQuery","desc":"Execute a function within the context of every matched element.\nThis means that every time the passed-in function is executed\n(which is once for every element matched) the 'this' keyword\npoints to the specific element.\n\nAdditionally, the function, when executed, is passed a single\nargument representing the position of the element in the matched\nset.","params":[{"type":"Function","desc":"A function to execute","name":"fn"}],"short":"Execute a function within the context of every matched element.","examples":[{"desc":"Iterates over two images and sets their src property","before":"&lt;img/&gt; &lt;img/&gt;","code":"$(\"img\").each(function(i){\n  this.src = \"test\" + i + \".jpg\";\n});","result":"&lt;img src=\"test0.jpg\"/&gt; &lt;img src=\"test1.jpg\"/&gt;"}],"tests":[],"name":"each"},{"options":[],"cat":"Core","type":"Number","desc":"Searches every matched element for the object and returns\nthe index of the element, if found, starting with zero. \nReturns -1 if the object wasn't found.","params":[{"type":"Object","desc":"Object to search for","name":"obj"}],"short":"Searches every matched element for the object and returns\nthe index of the element, if found, starting with zero.","examples":[{"code":"$(\"*\").index(document.getElementById('foobar'))","result":"0","before":"&lt;div id=\"foobar\"&gt;&lt;/div&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;"},{"code":"$(\"*\").index(document.getElementById('foo'))","result":"2","before":"&lt;div id=\"foobar\"&gt;&lt;/div&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;"},{"code":"$(\"*\").index(document.getElementById('bar'))","result":"-1","before":"&lt;div id=\"foobar\"&gt;&lt;/div&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;"}],"tests":[],"name":"index"},{"options":[],"cat":"DOM","type":"Object","desc":"Access a property on the first matched element.\nThis method makes it easy to retrieve a property value\nfrom the first matched element.","params":[{"type":"String","desc":"The name of the property to access.","name":"name"}],"short":"Access a property on the first matched element.","examples":[{"code":"$(\"img\").attr(\"src\");","result":"test.jpg","before":"&lt;img src=\"test.jpg\"/&gt;"}],"tests":[],"name":"attr"},{"options":[],"cat":"DOM","type":"jQuery","desc":"Set a hash of key/value object properties to all matched elements.\nThis serves as the best way to set a large number of properties\non all matched elements.","params":[{"type":"Hash","desc":"A set of key/value pairs to set as object properties.","name":"prop"}],"short":"Set a hash of key/value object properties to all matched elements.","examples":[{"code":"$(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });","result":"&lt;img src=\"test.jpg\" alt=\"Test Image\"/&gt;","before":"&lt;img/&gt;"}],"tests":[],"name":"attr"},{"options":[],"cat":"DOM","type":"jQuery","desc":"Set a single property to a value, on all matched elements.\n\nNote that you can't set the name property of input elements in IE.\nUse $(html) or $().append(html) or $().html(html) to create elements\non the fly including the name property.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"Object","desc":"The value to set the property to.","name":"value"}],"short":"Set a single property to a value, on all matched elements.","examples":[{"code":"$(\"img\").attr(\"src\",\"test.jpg\");","result":"&lt;img src=\"test.jpg\"/&gt;","before":"&lt;img/&gt;"}],"tests":[],"name":"attr"},{"options":[],"cat":"CSS","type":"Object","desc":"Access a style property on the first matched element.\nThis method makes it easy to retrieve a style property value\nfrom the first matched element.","params":[{"type":"String","desc":"The name of the property to access.","name":"name"}],"short":"Access a style property on the first matched element.","examples":[{"desc":"Retrieves the color style of the first paragraph","before":"&lt;p style=\"color:red;\"&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"color\");","result":"red"},{"desc":"Retrieves the font-weight style of the first paragraph.\nNote that for all style properties with a dash (like 'font-weight'), you have to\nwrite it in camelCase. In other words: Every time you have a '-' in a \nproperty, remove it and replace the next character with an uppercase \nrepresentation of itself. Eg. fontWeight, fontSize, fontFamily, borderWidth,\nborderStyle, borderBottomWidth etc.","before":"&lt;p style=\"font-weight: bold;\"&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"fontWeight\");","result":"bold"}],"tests":[],"name":"css"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set a hash of key/value style properties to all matched elements.\nThis serves as the best way to set a large number of style properties\non all matched elements.","params":[{"type":"Hash","desc":"A set of key/value pairs to set as style properties.","name":"prop"}],"short":"Set a hash of key/value style properties to all matched elements.","examples":[{"code":"$(\"p\").css({ color: \"red\", background: \"blue\" });","result":"&lt;p style=\"color:red; background:blue;\"&gt;Test Paragraph.&lt;/p&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"css"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set a single style property to a value, on all matched elements.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"Object","desc":"The value to set the property to.","name":"value"}],"short":"Set a single style property to a value, on all matched elements.","examples":[{"desc":"Changes the color of all paragraphs to red","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"color\",\"red\");","result":"&lt;p style=\"color:red;\"&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"css"},{"options":[],"cat":"DOM","type":"String","desc":"Retrieve the text contents of all matched elements. The result is\na string that contains the combined text contents of all matched\nelements. This method works on both HTML and XML documents.","params":[],"short":"Retrieve the text contents of all matched elements.","examples":[{"code":"$(\"p\").text();","result":"Test Paragraph.","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"text"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Wrap all matched elements with a structure of other elements.\nThis wrapping process is most useful for injecting additional\nstucture into a document, without ruining the original semantic\nqualities of a document.\n\nThis works by going through the first element\nprovided (which is generated, on the fly, from the provided HTML)\nand finds the deepest ancestor element within its\nstructure - it is that element that will en-wrap everything else.\n\nThis does not work with elements that contain text. Any necessary text\nmust be added after the wrapping is done.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and wrapped around the target.","name":"html"}],"short":"Wrap all matched elements with a structure of other elements.","examples":[{"code":"$(\"p\").wrap(\"&lt;div class='wrap'&gt;&lt;/div&gt;\");","result":"&lt;div class='wrap'&gt;&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"wrap"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Wrap all matched elements with a structure of other elements.\nThis wrapping process is most useful for injecting additional\nstucture into a document, without ruining the original semantic\nqualities of a document.\n\nThis works by going through the first element\nprovided and finding the deepest ancestor element within its\nstructure - it is that element that will en-wrap everything else.\n\nThis does not work with elements that contain text. Any necessary text\nmust be added after the wrapping is done.","params":[{"type":"Element","desc":"A DOM element that will be wrapped.","name":"elem"}],"short":"Wrap all matched elements with a structure of other elements.","examples":[{"code":"$(\"p\").wrap( document.getElementById('content') );","result":"&lt;div id=\"content\"&gt;&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;div id=\"content\"&gt;&lt;/div&gt;"}],"tests":[],"name":"wrap"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Append any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"short":"Append any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.","examples":[{"code":"$(\"p\").append(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;I would like to say: &lt;b&gt;Hello&lt;/b&gt;&lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"append"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Append an element to the inside of all matched elements.\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"short":"Append an element to the inside of all matched elements.","examples":[{"code":"$(\"p\").append( $(\"#foo\")[0] );","result":"&lt;p&gt;I would like to say: &lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"append"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Append any number of elements to the inside of all matched elements.\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"short":"Append any number of elements to the inside of all matched elements.","examples":[{"code":"$(\"p\").append( $(\"b\") );","result":"&lt;p&gt;I would like to say: &lt;b&gt;Hello&lt;/b&gt;&lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"append"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Prepend any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.\nThis operation is the best way to insert dynamically created elements\ninside, at the beginning, of all the matched element.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"short":"Prepend any number of elements to the inside of every matched elements,\ngenerated from the provided HTML.","examples":[{"code":"$(\"p\").prepend(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"prepend"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Prepend an element to the inside of all matched elements.\nThis operation is the best way to insert an element inside, at the\nbeginning, of all the matched element.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"short":"Prepend an element to the inside of all matched elements.","examples":[{"code":"$(\"p\").prepend( $(\"#foo\")[0] );","result":"&lt;p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"prepend"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Prepend any number of elements to the inside of all matched elements.\nThis operation is the best way to insert a set of elements inside, at the\nbeginning, of all the matched element.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"short":"Prepend any number of elements to the inside of all matched elements.","examples":[{"code":"$(\"p\").prepend( $(\"b\") );","result":"&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"prepend"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert any number of dynamically generated elements before each of the\nmatched elements.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"short":"Insert any number of dynamically generated elements before each of the\nmatched elements.","examples":[{"code":"$(\"p\").before(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"before"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert an element before each of the matched elements.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"short":"Insert an element before each of the matched elements.","examples":[{"code":"$(\"p\").before( $(\"#foo\")[0] );","result":"&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"before"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert any number of elements before each of the matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"short":"Insert any number of elements before each of the matched elements.","examples":[{"code":"$(\"p\").before( $(\"b\") );","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"before"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert any number of dynamically generated elements after each of the\nmatched elements.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and appended to the target.","name":"html"}],"short":"Insert any number of dynamically generated elements after each of the\nmatched elements.","examples":[{"code":"$(\"p\").after(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"after"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert an element after each of the matched elements.","params":[{"type":"Element","desc":"A DOM element that will be appended.","name":"elem"}],"short":"Insert an element after each of the matched elements.","examples":[{"code":"$(\"p\").after( $(\"#foo\")[0] );","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;","before":"&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"after"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert any number of elements after each of the matched elements.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of elements, all of which will be appended.","name":"elems"}],"short":"Insert any number of elements after each of the matched elements.","examples":[{"code":"$(\"p\").after( $(\"b\") );","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","before":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"after"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"End the most recent 'destructive' operation, reverting the list of matched elements\nback to its previous state. After an end operation, the list of matched elements will\nrevert to the last state of matched elements.","params":[],"short":"End the most recent 'destructive' operation, reverting the list of matched elements\nback to its previous state.","examples":[{"code":"$(\"p\").find(\"span\").end();","result":"$(\"p\").find(\"span\").end() == [ &lt;p&gt;...&lt;/p&gt; ]","before":"&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;, how are you?&lt;/p&gt;"}],"tests":[],"name":"end"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Searches for all elements that match the specified expression.\nThis method is the optimal way of finding additional descendant\nelements with which to process.\n\nAll searching is done using a jQuery expression. The expression can be\nwritten using CSS 1-3 Selector syntax, or basic XPath.","params":[{"type":"String","desc":"An expression to search with.","name":"expr"}],"short":"Searches for all elements that match the specified expression.","examples":[{"code":"$(\"p\").find(\"span\");","result":"$(\"p\").find(\"span\") == [ &lt;span&gt;Hello&lt;/span&gt; ]","before":"&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;, how are you?&lt;/p&gt;"}],"tests":[],"name":"find"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Create cloned copies of all matched DOM Elements. This does\nnot create a cloned copy of this particular jQuery object,\ninstead it creates duplicate copies of all DOM Elements.\nThis is useful for moving copies of the elements to another\nlocation in the DOM.","params":[],"short":"Create cloned copies of all matched DOM Elements.","examples":[{"code":"$(\"b\").clone().prependTo(\"p\");","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;, how are you?&lt;/p&gt;","before":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;, how are you?&lt;/p&gt;"}],"tests":[],"name":"clone"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes all elements from the set of matched elements that do not\nmatch the specified expression. This method is used to narrow down\nthe results of a search.\n\nAll searching is done using a jQuery expression. The expression\ncan be written using CSS 1-3 Selector syntax, or basic XPath.","params":[{"type":"String","desc":"An expression to search with.","name":"expr"}],"short":"Removes all elements from the set of matched elements that do not\nmatch the specified expression.","examples":[{"code":"$(\"p\").filter(\".selected\")","result":"$(\"p\").filter(\".selected\") == [ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"selected\"&gt;Hello&lt;/p&gt;&lt;p&gt;How are you?&lt;/p&gt;"}],"tests":[],"name":"filter"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes all elements from the set of matched elements that do not\nmatch at least one of the expressions passed to the function. This\nmethod is used when you want to filter the set of matched elements\nthrough more than one expression.\n\nElements will be retained in the jQuery object if they match at\nleast one of the expressions passed.","params":[{"type":"Array&lt;String&gt;","desc":"A set of expressions to evaluate against","name":"exprs"}],"short":"Removes all elements from the set of matched elements that do not\nmatch at least one of the expressions passed to the function.","examples":[{"code":"$(\"p\").filter([\".selected\", \":first\"])","result":"$(\"p\").filter([\".selected\", \":first\"]) == [ &lt;p&gt;Hello&lt;/p&gt;, &lt;p class=\"selected\"&gt;And Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;p class=\"selected\"&gt;And Again&lt;/p&gt;"}],"tests":[],"name":"filter"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes the specified Element from the set of matched elements. This\nmethod is used to remove a single Element from a jQuery object.","params":[{"type":"Element","desc":"An element to remove from the set","name":"el"}],"short":"Removes the specified Element from the set of matched elements.","examples":[{"code":"$(\"p\").not( document.getElementById(\"selected\") )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p id=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"tests":[],"name":"not"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes elements matching the specified expression from the set\nof matched elements. This method is used to remove one or more\nelements from a jQuery object.","params":[{"type":"String","desc":"An expression with which to remove matching elements","name":"expr"}],"short":"Removes elements matching the specified expression from the set\nof matched elements.","examples":[{"code":"$(\"p\").not(\"#selected\")","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p id=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"tests":[],"name":"not"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Adds the elements matched by the expression to the jQuery object. This\ncan be used to concatenate the result sets of two expressions.","params":[{"type":"String","desc":"An expression whose matched elements are added","name":"expr"}],"short":"Adds the elements matched by the expression to the jQuery object.","examples":[{"code":"$(\"p\").add(\"span\")","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/p&gt;"}],"tests":[],"name":"add"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Adds each of the Elements in the array to the set of matched elements.\nThis is used to add a set of Elements to a jQuery object.","params":[{"type":"Array&lt;Element&gt;","desc":"An array of Elements to add","name":"els"}],"short":"Adds each of the Elements in the array to the set of matched elements.","examples":[{"code":"$(\"p\").add([document.getElementById(\"a\"), document.getElementById(\"b\")])","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;, &lt;span id=\"b\"&gt;And Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;&lt;span id=\"b\"&gt;And Again&lt;/span&gt;&lt;/p&gt;"}],"tests":[],"name":"add"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Adds a single Element to the set of matched elements. This is used to\nadd a single Element to a jQuery object.","params":[{"type":"Element","desc":"An Element to add","name":"el"}],"short":"Adds a single Element to the set of matched elements.","examples":[{"code":"$(\"p\").add( document.getElementById(\"a\") )","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span id=\"a\"&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;&lt;/p&gt;"}],"tests":[],"name":"add"},{"options":[],"cat":"DOM/Traversing","type":"Boolean","desc":"Checks the current selection against an expression and returns true,\nif at least one element of the selection fits the given expression.\nDoes return false, if no element fits or the expression is not valid.","params":[{"type":"String","desc":"The expression with which to filter","name":"expr"}],"short":"Checks the current selection against an expression and returns true,\nif at least one element of the selection fits the given expression.","examples":[{"desc":"Returns true, because the parent of the input is a form element","before":"&lt;form&gt;&lt;input type=\"checkbox\" /&gt;&lt;/form&gt;","code":"$(\"input[@type='checkbox']\").parent().is(\"form\")","result":"true"},{"desc":"Returns false, because the parent of the input is a p element","before":"&lt;form&gt;&lt;p&gt;&lt;input type=\"checkbox\" /&gt;&lt;/p&gt;&lt;/form&gt;","code":"$(\"input[@type='checkbox']\").parent().is(\"form\")","result":"false"},{"desc":"An invalid expression always returns false.","before":"&lt;form&gt;&lt;/form&gt;","code":"$(\"form\").is(null)","result":"false"}],"tests":[],"name":"is"},{"options":[],"cat":"Core","type":"jQuery","desc":"","params":[{"type":"Array","desc":"","name":"args"},{"type":"Boolean","desc":"","name":"table"},{"type":"Number","desc":"","name":"dir"},{"type":"Function","desc":"The function doing the DOM manipulation.","name":"fn"}],"short":"","examples":[],"tests":[],"name":"domManip","private":1},{"options":[],"cat":"Core","type":"jQuery","desc":"","params":[{"type":"Array","desc":"","name":"a"},{"type":"Array","desc":"","name":"args"}],"short":"","examples":[],"tests":[],"name":"pushStack","private":1},{"options":[],"cat":"Core","type":"Object","desc":"Extends the jQuery object itself. Can be used to add functions into\nthe jQuery namespace and to add plugin methods (plugins).","params":[{"type":"Object","desc":"The object that will be merged into the jQuery object","name":"prop"}],"short":"Extends the jQuery object itself.","examples":[{"desc":"Adds two plugin methods.","code":"jQuery.fn.extend({\n  check: function() {\n    return this.each(function() { this.checked = true; });\n  ),\n  uncheck: function() {\n    return this.each(function() { this.checked = false; });\n  }\n});\n$(\"input[@type=checkbox]\").check();\n$(\"input[@type=radio]\").uncheck();"},{"desc":"Adds two functions into the jQuery namespace","code":"jQuery.extend({\n  min: function(a, b) { return a &lt; b ? a : b; },\n  max: function(a, b) { return a &gt; b ? a : b; }\n});"}],"tests":[],"name":"$.extend"},{"options":[],"cat":"Javascript","type":"Object","desc":"Extend one object with one or more others, returning the original,\nmodified, object. This is a great utility for simple inheritance.","params":[{"type":"Object","desc":"The object to extend","name":"target"},{"type":"Object","desc":"The object that will be merged into the first.","name":"prop1"},{"type":"Object","desc":"(optional) More objects to merge into the first","name":"propN"}],"short":"Extend one object with one or more others, returning the original,\nmodified, object.","examples":[{"desc":"Merge settings and options, modifying settings","code":"var settings = { validate: false, limit: 5, name: \"foo\" };\nvar options = { validate: true, name: \"bar\" };\njQuery.extend(settings, options);","result":"settings == { validate: true, limit: 5, name: \"bar\" }"},{"desc":"Merge defaults and options, without modifying the defaults","code":"var defaults = { validate: false, limit: 5, name: \"foo\" };\nvar options = { validate: true, name: \"bar\" };\nvar settings = jQuery.extend({}, defaults, options);","result":"settings == { validate: true, limit: 5, name: \"bar\" }"}],"tests":[],"name":"$.extend"},{"options":[],"cat":"Core","type":"undefined","desc":"","params":[],"short":"","examples":[],"tests":[],"name":"init","private":1},{"options":[],"cat":"Javascript","type":"Object","desc":"A generic iterator function, which can be used to seemlessly\niterate over both objects and arrays. This function is not the same\nas $().each() - which is used to iterate, exclusively, over a jQuery\nobject. This function can be used to iterate over anything.","params":[{"type":"Object","desc":"The object, or array, to iterate over.","name":"obj"},{"type":"Function","desc":"The function that will be executed on every object.","name":"fn"}],"short":"A generic iterator function, which can be used to seemlessly\niterate over both objects and arrays.","examples":[{"desc":"This is an example of iterating over the items in an array, accessing both the current item and its index.","code":"$.each( [0,1,2], function(i){\n  alert( \"Item #\" + i + \": \" + this );\n});"},{"desc":"This is an example of iterating over the properties in an Object, accessing both the current item and its key.","code":"$.each( { name: \"John\", lang: \"JS\" }, function(i){\n  alert( \"Name: \" + i + \", Value: \" + this );\n});"}],"tests":[],"name":"$.each"},{"options":[],"cat":"Core","type":"Array&lt;Element&gt;","desc":"","params":[],"short":"","examples":[],"tests":[],"private":1,"name":"$.find"},{"options":[],"cat":"Javascript","type":"String","desc":"Remove the whitespace from the beginning and end of a string.","params":[{"type":"String","desc":"The string to trim.","name":"str"}],"short":"Remove the whitespace from the beginning and end of a string.","examples":[{"code":"$.trim(\"  hello, how are you?  \");","result":"\"hello, how are you?\""}],"tests":[],"name":"$.trim"},{"options":[],"cat":"DOM/Traversing","type":"Array&lt;Element&gt;","desc":"All ancestors of a given element.","params":[{"type":"Element","desc":"The element to find the ancestors of.","name":"elem"}],"short":"All ancestors of a given element.","examples":[],"tests":[],"name":"$.parents","private":1},{"options":[],"cat":"DOM/Traversing","type":"Array","desc":"All elements on a specified axis.","params":[{"type":"Element","desc":"The element to find all the siblings of (including itself).","name":"elem"}],"short":"All elements on a specified axis.","examples":[],"tests":[],"name":"$.sibling","private":1},{"options":[],"cat":"Javascript","type":"Array","desc":"Merge two arrays together, removing all duplicates. The final order\nor the new array is: All the results from the first array, followed\nby the unique results from the second array.","params":[{"type":"Array","desc":"The first array to merge.","name":"first"},{"type":"Array","desc":"The second array to merge.","name":"second"}],"short":"Merge two arrays together, removing all duplicates.","examples":[{"code":"$.merge( [0,1,2], [2,3,4] )","result":"[0,1,2,3,4]"},{"code":"$.merge( [3,2,1], [4,3,2] )","result":"[3,2,1,4]"}],"tests":[],"name":"$.merge"},{"options":[],"cat":"Javascript","type":"Array","desc":"Filter items out of an array, by using a filter function.\nThe specified function will be passed two arguments: The\ncurrent array item and the index of the item in the array. The\nfunction should return 'true' if you wish to keep the item in\nthe array, false if it should be removed.","params":[{"type":"Array","desc":"The Array to find items in.","name":"array"},{"type":"Function","desc":"The function to process each item against.","name":"fn"},{"type":"Boolean","desc":"Invert the selection - select the opposite of the function.","name":"inv"}],"short":"Filter items out of an array, by using a filter function.","examples":[{"code":"$.grep( [0,1,2], function(i){\n  return i &gt; 0;\n});","result":"[1, 2]"}],"tests":[],"name":"$.grep"},{"options":[],"cat":"Javascript","type":"Array","desc":"Translate all items in an array to another array of items. \nThe translation function that is provided to this method is \ncalled for each item in the array and is passed one argument: \nThe item to be translated. The function can then return:\nThe translated value, 'null' (to remove the item), or \nan array of values - which will be flattened into the full array.","params":[{"type":"Array","desc":"The Array to translate.","name":"array"},{"type":"Function","desc":"The function to process each item against.","name":"fn"}],"short":"Translate all items in an array to another array of items.","examples":[{"code":"$.map( [0,1,2], function(i){\n  return i + 4;\n});","result":"[4, 5, 6]"},{"code":"$.map( [0,1,2], function(i){\n  return i &gt; 0 ? i + 1 : null;\n});","result":"[2, 3]"},{"code":"$.map( [0,1,2], function(i){\n  return [ i, i + 1 ];\n});","result":"[0, 1, 1, 2, 2, 3]"}],"tests":[],"name":"$.map"},{"options":[],"property":1,"cat":"Javascript","type":"Boolean","desc":"Contains flags for the useragent, read from navigator.userAgent.\nAvailable flags are: safari, opera, msie, mozilla\nThis property is available before the DOM is ready, therefore you can\nuse it to add ready events only for certain browsers.\n\nThere are situations where object detections is not reliable enough, in that\ncases it makes sense to use browser detection. Simply try to avoid both!\n\nA combination of browser and object detection yields quite reliable results.","params":[],"short":"Contains flags for the useragent, read from navigator.","examples":[{"desc":"Returns true if the current useragent is some version of microsoft's internet explorer","code":"$.browser.msie"},{"desc":"Alerts \"this is safari!\" only for safari browsers","code":"if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }"}],"tests":[],"name":"$.browser"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Append all of the matched elements to another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).append(B), in that instead of appending B to A, you're appending\nA to B.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"short":"Append all of the matched elements to another, specified, set of elements.","examples":[{"code":"$(\"p\").appendTo(\"#foo\");","result":"&lt;div id=\"foo\"&gt;&lt;p&gt;I would like to say: &lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;&lt;/div&gt;"}],"tests":[],"name":"appendTo"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Prepend all of the matched elements to another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).prepend(B), in that instead of prepending B to A, you're prepending\nA to B.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"short":"Prepend all of the matched elements to another, specified, set of elements.","examples":[{"code":"$(\"p\").prependTo(\"#foo\");","result":"&lt;div id=\"foo\"&gt;&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/div&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/div&gt;"}],"tests":[],"name":"prependTo"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert all of the matched elements before another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).before(B), in that instead of inserting B before A, you're inserting\nA before B.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"short":"Insert all of the matched elements before another, specified, set of elements.","examples":[{"code":"$(\"p\").insertBefore(\"#foo\");","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;","before":"&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"insertBefore"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert all of the matched elements after another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).after(B), in that instead of inserting B after A, you're inserting\nA after B.","params":[{"type":"String","desc":"A jQuery expression of elements to match.","name":"expr"}],"short":"Insert all of the matched elements after another, specified, set of elements.","examples":[{"code":"$(\"p\").insertAfter(\"#foo\");","result":"&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;"}],"tests":[],"name":"insertAfter"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS width of the first matched element.","params":[],"short":"Get the current CSS width of the first matched element.","examples":[{"code":"$(\"p\").width();","result":"\"300px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"width"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS width of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS width of every matched element.","examples":[{"code":"$(\"p\").width(\"20px\");","result":"&lt;p style=\"width:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"width"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS height of the first matched element.","params":[],"short":"Get the current CSS height of the first matched element.","examples":[{"code":"$(\"p\").height();","result":"\"14px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"height"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS height of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS height of every matched element.","examples":[{"code":"$(\"p\").height(\"20px\");","result":"&lt;p style=\"height:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"height"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS top of the first matched element.","params":[],"short":"Get the current CSS top of the first matched element.","examples":[{"code":"$(\"p\").top();","result":"\"0px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"top"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS top of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS top of every matched element.","examples":[{"code":"$(\"p\").top(\"20px\");","result":"&lt;p style=\"top:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"top"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS left of the first matched element.","params":[],"short":"Get the current CSS left of the first matched element.","examples":[{"code":"$(\"p\").left();","result":"\"0px\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"left"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS left of every matched element. Be sure to include\nthe \"px\" (or other unit of measurement) after the number that you\nspecify, otherwise you might get strange results.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS left of every matched element.","examples":[{"code":"$(\"p\").left(\"20px\");","result":"&lt;p style=\"left:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"left"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS position of the first matched element.","params":[],"short":"Get the current CSS position of the first matched element.","examples":[{"code":"$(\"p\").position();","result":"\"static\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"position"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS position of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS position of every matched element.","examples":[{"code":"$(\"p\").position(\"relative\");","result":"&lt;p style=\"position:relative;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"position"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS float of the first matched element.","params":[],"short":"Get the current CSS float of the first matched element.","examples":[{"code":"$(\"p\").float();","result":"\"none\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"float"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS float of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS float of every matched element.","examples":[{"code":"$(\"p\").float(\"left\");","result":"&lt;p style=\"float:left;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"float"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS overflow of the first matched element.","params":[],"short":"Get the current CSS overflow of the first matched element.","examples":[{"code":"$(\"p\").overflow();","result":"\"none\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"overflow"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS overflow of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS overflow of every matched element.","examples":[{"code":"$(\"p\").overflow(\"auto\");","result":"&lt;p style=\"overflow:auto;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"overflow"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS color of the first matched element.","params":[],"short":"Get the current CSS color of the first matched element.","examples":[{"code":"$(\"p\").color();","result":"\"black\"","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"color"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS color of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS color of every matched element.","examples":[{"code":"$(\"p\").color(\"blue\");","result":"&lt;p style=\"color:blue;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"color"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current CSS background of the first matched element.","params":[],"short":"Get the current CSS background of the first matched element.","examples":[{"code":"$(\"p\").background();","result":"\"blue\"","before":"&lt;p style=\"background:blue;\"&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"background"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS background of every matched element.","params":[{"type":"String","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS background of every matched element.","examples":[{"code":"$(\"p\").background(\"blue\");","result":"&lt;p style=\"background:blue;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"background"},{"options":[],"cat":"Core","type":"jQuery","desc":"Reduce the set of matched elements to a single element.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","params":[{"type":"Number","desc":"The index of the element that you wish to limit to.","name":"pos"}],"short":"Reduce the set of matched elements to a single element.","examples":[{"code":"$(\"p\").eq(1)","result":"[ &lt;p&gt;So is this&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"eq"},{"options":[],"cat":"Core","type":"jQuery","desc":"Reduce the set of matched elements to all elements before a given position.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","params":[{"type":"Number","desc":"Reduce the set to all elements below this position.","name":"pos"}],"short":"Reduce the set of matched elements to all elements before a given position.","examples":[{"code":"$(\"p\").lt(1)","result":"[ &lt;p&gt;This is just a test.&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"lt"},{"options":[],"cat":"Core","type":"jQuery","desc":"Reduce the set of matched elements to all elements after a given position.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","params":[{"type":"Number","desc":"Reduce the set to all elements after this position.","name":"pos"}],"short":"Reduce the set of matched elements to all elements after a given position.","examples":[{"code":"$(\"p\").gt(0)","result":"[ &lt;p&gt;So is this&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"gt"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Filter the set of elements to those that contain the specified text.","params":[{"type":"String","desc":"The string that will be contained within the text of an element.","name":"str"}],"short":"Filter the set of elements to those that contain the specified text.","examples":[{"code":"$(\"p\").contains(\"test\")","result":"[ &lt;p&gt;This is just a test.&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"contains"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current value of the first matched element.","params":[],"short":"Get the current value of the first matched element.","examples":[{"code":"$(\"input\").val();","result":"\"some text\"","before":"&lt;input type=\"text\" value=\"some text\"/&gt;"}],"tests":[],"name":"val"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the value of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the value of every matched element.","examples":[{"code":"$(\"input\").val(\"test\");","result":"&lt;input type=\"text\" value=\"test\"/&gt;","before":"&lt;input type=\"text\" value=\"some text\"/&gt;"}],"tests":[],"name":"val"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the html contents of the first matched element.","params":[],"short":"Get the html contents of the first matched element.","examples":[{"code":"$(\"div\").html();","result":"&lt;input/&gt;","before":"&lt;div&gt;&lt;input/&gt;&lt;/div&gt;"}],"tests":[],"name":"html"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the html contents of every matched element.","params":[{"type":"String","desc":"Set the html contents to the specified value.","name":"val"}],"short":"Set the html contents of every matched element.","examples":[{"code":"$(\"div\").html(\"&lt;b&gt;new stuff&lt;/b&gt;\");","result":"&lt;div&gt;&lt;b&gt;new stuff&lt;/b&gt;&lt;/div&gt;","before":"&lt;div&gt;&lt;input/&gt;&lt;/div&gt;"}],"tests":[],"name":"html"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current id of the first matched element.","params":[],"short":"Get the current id of the first matched element.","examples":[{"code":"$(\"input\").id();","result":"\"test\"","before":"&lt;input type=\"text\" id=\"test\" value=\"some text\"/&gt;"}],"tests":[],"name":"id"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the id of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the id of every matched element.","examples":[{"code":"$(\"input\").id(\"newid\");","result":"&lt;input type=\"text\" id=\"newid\" value=\"some text\"/&gt;","before":"&lt;input type=\"text\" id=\"test\" value=\"some text\"/&gt;"}],"tests":[],"name":"id"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current title of the first matched element.","params":[],"short":"Get the current title of the first matched element.","examples":[{"code":"$(\"img\").title();","result":"\"my image\"","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"tests":[],"name":"title"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the title of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the title of every matched element.","examples":[{"code":"$(\"img\").title(\"new title\");","result":"&lt;img src=\"test.jpg\" title=\"new image\"/&gt;","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"tests":[],"name":"title"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current name of the first matched element.","params":[],"short":"Get the current name of the first matched element.","examples":[{"code":"$(\"input\").name();","result":"\"username\"","before":"&lt;input type=\"text\" name=\"username\"/&gt;"}],"tests":[],"name":"name"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the name of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the name of every matched element.","examples":[{"code":"$(\"input\").name(\"user\");","result":"&lt;input type=\"text\" name=\"user\"/&gt;","before":"&lt;input type=\"text\" name=\"username\"/&gt;"}],"tests":[],"name":"name"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current href of the first matched element.","params":[],"short":"Get the current href of the first matched element.","examples":[{"code":"$(\"a\").href();","result":"\"test.html\"","before":"&lt;a href=\"test.html\"&gt;my link&lt;/a&gt;"}],"tests":[],"name":"href"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the href of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the href of every matched element.","examples":[{"code":"$(\"a\").href(\"test2.html\");","result":"&lt;a href=\"test2.html\"&gt;my link&lt;/a&gt;","before":"&lt;a href=\"test.html\"&gt;my link&lt;/a&gt;"}],"tests":[],"name":"href"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current src of the first matched element.","params":[],"short":"Get the current src of the first matched element.","examples":[{"code":"$(\"img\").src();","result":"\"test.jpg\"","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"tests":[],"name":"src"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the src of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the src of every matched element.","examples":[{"code":"$(\"img\").src(\"test2.jpg\");","result":"&lt;img src=\"test2.jpg\" title=\"my image\"/&gt;","before":"&lt;img src=\"test.jpg\" title=\"my image\"/&gt;"}],"tests":[],"name":"src"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current rel of the first matched element.","params":[],"short":"Get the current rel of the first matched element.","examples":[{"code":"$(\"a\").rel();","result":"\"nofollow\"","before":"&lt;a href=\"test.html\" rel=\"nofollow\"&gt;my link&lt;/a&gt;"}],"tests":[],"name":"rel"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the rel of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the rel of every matched element.","examples":[{"code":"$(\"a\").rel(\"nofollow\");","result":"&lt;a href=\"test.html\" rel=\"nofollow\"&gt;my link&lt;/a&gt;","before":"&lt;a href=\"test.html\"&gt;my link&lt;/a&gt;"}],"tests":[],"name":"rel"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique parents of the matched\nset of elements.","params":[],"short":"Get a set of elements containing the unique parents of the matched\nset of elements.","examples":[{"code":"$(\"p\").parent()","result":"[ &lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt; ]","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;"}],"tests":[],"name":"parent"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique parents of the matched\nset of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the parents with","name":"expr"}],"short":"Get a set of elements containing the unique parents of the matched\nset of elements, and filtered by an expression.","examples":[{"code":"$(\"p\").parent(\".selected\")","result":"[ &lt;div class=\"selected\"&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;/div&gt; ]","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;&lt;div class=\"selected\"&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;/div&gt;"}],"tests":[],"name":"parent"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","params":[],"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","examples":[{"code":"$(\"span\").ancestors()","result":"[ &lt;body&gt;...&lt;/body&gt;, &lt;div&gt;...&lt;/div&gt;, &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"tests":[],"name":"ancestors"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the ancestors with","name":"expr"}],"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","examples":[{"code":"$(\"span\").ancestors(\"p\")","result":"[ &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"tests":[],"name":"ancestors"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","params":[],"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","examples":[{"code":"$(\"span\").ancestors()","result":"[ &lt;body&gt;...&lt;/body&gt;, &lt;div&gt;...&lt;/div&gt;, &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"tests":[],"name":"parents"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the ancestors with","name":"expr"}],"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements, and filtered by an expression.","examples":[{"code":"$(\"span\").ancestors(\"p\")","result":"[ &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;"}],"tests":[],"name":"parents"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements.\n\nIt only returns the very next sibling, not all next siblings.","params":[],"short":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements.","examples":[{"code":"$(\"p\").next()","result":"[ &lt;p&gt;Hello Again&lt;/p&gt;, &lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;"}],"tests":[],"name":"next"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements, and filtered by an expression.\n\nIt only returns the very next sibling, not all next siblings.","params":[{"type":"String","desc":"An expression to filter the next Elements with","name":"expr"}],"short":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements, and filtered by an expression.","examples":[{"code":"$(\"p\").next(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;"}],"tests":[],"name":"next"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements.\n\nIt only returns the immediately previous sibling, not all previous siblings.","params":[],"short":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements.","examples":[{"code":"$(\"p\").prev()","result":"[ &lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"tests":[],"name":"prev"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements, and filtered by an expression.\n\nIt only returns the immediately previous sibling, not all previous siblings.","params":[{"type":"String","desc":"An expression to filter the previous Elements with","name":"expr"}],"short":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements, and filtered by an expression.","examples":[{"code":"$(\"p\").prev(\".selected\")","result":"[ &lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt; ]","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"tests":[],"name":"prev"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements.","params":[],"short":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements.","examples":[{"code":"$(\"div\").siblings()","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;p&gt;And Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"tests":[],"name":"siblings"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the sibling Elements with","name":"expr"}],"short":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements, and filtered by an expression.","examples":[{"code":"$(\"div\").siblings(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"tests":[],"name":"siblings"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements.","params":[],"short":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements.","examples":[{"code":"$(\"div\").children()","result":"[ &lt;span&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;"}],"tests":[],"name":"children"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements, and filtered by an expression.","params":[{"type":"String","desc":"An expression to filter the child Elements with","name":"expr"}],"short":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements, and filtered by an expression.","examples":[{"code":"$(\"div\").children(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;&lt;/div&gt;"}],"tests":[],"name":"children"},{"options":[],"cat":"DOM","type":"jQuery","desc":"Remove an attribute from each of the matched elements.","params":[{"type":"String","desc":"The name of the attribute to remove.","name":"name"}],"short":"Remove an attribute from each of the matched elements.","examples":[{"code":"$(\"input\").removeAttr(\"disabled\")","result":"&lt;input/&gt;","before":"&lt;input disabled=\"disabled\"/&gt;"}],"tests":[],"name":"removeAttr"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Displays each of the set of matched elements if they are hidden.","params":[],"short":"Displays each of the set of matched elements if they are hidden.","examples":[{"code":"$(\"p\").show()","result":"[ &lt;p style=\"display: block\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p style=\"display: none\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"show"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Hides each of the set of matched elements if they are shown.","params":[],"short":"Hides each of the set of matched elements if they are shown.","examples":[{"code":"$(\"p\").hide()","result":"[ &lt;p style=\"display: none\"&gt;Hello&lt;/p&gt; ]\n\nvar pass = true, div = $(\"div\");\ndiv.hide().each(function(){\n  if ( this.style.display != \"none\" ) pass = false;\n});\nok( pass, \"Hide\" );","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"hide"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Toggles each of the set of matched elements. If they are shown,\ntoggle makes them hidden. If they are hidden, toggle\nmakes them shown.","params":[],"short":"Toggles each of the set of matched elements.","examples":[{"code":"$(\"p\").toggle()","result":"[ &lt;p style=\"display: none\"&gt;Hello&lt;/p&gt;, &lt;p style=\"display: block\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p style=\"display: none\"&gt;Hello Again&lt;/p&gt;"}],"tests":[],"name":"toggle"},{"options":[],"cat":"DOM","type":"jQuery","desc":"Adds the specified class to each of the set of matched elements.","params":[{"type":"String","desc":"A CSS class to add to the elements","name":"class"}],"short":"Adds the specified class to each of the set of matched elements.","examples":[{"code":"$(\"p\").addClass(\"selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"addClass"},{"options":[],"cat":"DOM","type":"jQuery","desc":"Removes the specified class from the set of matched elements.","params":[{"type":"String","desc":"A CSS class to remove from the elements","name":"class"}],"short":"Removes the specified class from the set of matched elements.","examples":[{"code":"$(\"p\").removeClass(\"selected\")","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"selected\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"removeClass"},{"options":[],"cat":"DOM","type":"jQuery","desc":"Adds the specified class if it is not present, removes it if it is\npresent.","params":[{"type":"String","desc":"A CSS class with which to toggle the elements","name":"class"}],"short":"Adds the specified class if it is not present, removes it if it is\npresent.","examples":[{"code":"$(\"p\").toggleClass(\"selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt;, &lt;p&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"tests":[],"name":"toggleClass"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Removes all matched elements from the DOM. This does NOT remove them from the\njQuery object, allowing you to use the matched elements further.","params":[],"short":"Removes all matched elements from the DOM.","examples":[{"code":"$(\"p\").remove();","result":"how are","before":"&lt;p&gt;Hello&lt;/p&gt; how are &lt;p&gt;you?&lt;/p&gt;"}],"tests":[],"name":"remove"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Removes only elements (out of the list of matched elements) that match\nthe specified jQuery expression. This does NOT remove them from the\njQuery object, allowing you to use the matched elements further.","params":[{"type":"String","desc":"A jQuery expression to filter elements by.","name":"expr"}],"short":"Removes only elements (out of the list of matched elements) that match\nthe specified jQuery expression.","examples":[{"code":"$(\"p\").remove(\".hello\");","result":"how are &lt;p&gt;you?&lt;/p&gt;","before":"&lt;p class=\"hello\"&gt;Hello&lt;/p&gt; how are &lt;p&gt;you?&lt;/p&gt;"}],"tests":[],"name":"remove"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Removes all child nodes from the set of matched elements.","params":[],"short":"Removes all child nodes from the set of matched elements.","examples":[{"code":"$(\"p\").empty()","result":"[ &lt;p&gt;&lt;/p&gt; ]","before":"&lt;p&gt;Hello, &lt;span&gt;Person&lt;/span&gt; &lt;a href=\"#\"&gt;and person&lt;/a&gt;&lt;/p&gt;"}],"tests":[],"name":"empty"},{"options":[],"cat":"Events","type":"jQuery","desc":"Binds a handler to a particular event (like click) for each matched element.\nThe event handler is passed an event object that you can use to prevent\ndefault behaviour. To stop both default action and event bubbling, your handler\nhas to return false.","params":[{"type":"String","desc":"An event type","name":"type"},{"type":"Function","desc":"A function to bind to the event on each of the set of matched elements","name":"fn"}],"short":"Binds a handler to a particular event (like click) for each matched element.","examples":[{"code":"$(\"p\").bind( \"click\", function() {\n  alert( $(this).text() );\n} )","result":"alert(\"Hello\")","before":"&lt;p&gt;Hello&lt;/p&gt;"},{"desc":"Cancel a default action and prevent it from bubbling by returning false\nfrom your function.","code":"$(\"form\").bind( \"submit\", function() { return false; } )"},{"desc":"Cancel only the default action by using the preventDefault method.","code":"$(\"form\").bind( \"submit\", function(event) {\n  event.preventDefault();\n} );"},{"desc":"Stop only an event from bubbling by using the stopPropagation method.","code":"$(\"form\").bind( \"submit\", function(event) {\n  event.stopPropagation();\n} )"}],"tests":[],"name":"bind"},{"options":[],"cat":"Events","type":"jQuery","desc":"The opposite of bind, removes a bound event from each of the matched\nelements. You must pass the identical function that was used in the original\nbind method.","params":[{"type":"String","desc":"An event type","name":"type"},{"type":"Function","desc":"A function to unbind from the event on each of the set of matched elements","name":"fn"}],"short":"The opposite of bind, removes a bound event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unbind( \"click\", function() { alert(\"Hello\"); } )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unbind"},{"options":[],"cat":"Events","type":"jQuery","desc":"Removes all bound events of a particular type from each of the matched\nelements.","params":[{"type":"String","desc":"An event type","name":"type"}],"short":"Removes all bound events of a particular type from each of the matched\nelements.","examples":[{"code":"$(\"p\").unbind( \"click\" )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unbind"},{"options":[],"cat":"Events","type":"jQuery","desc":"Removes all bound events from each of the matched elements.","params":[],"short":"Removes all bound events from each of the matched elements.","examples":[{"code":"$(\"p\").unbind()","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unbind"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger a type of event on every matched element.","params":[{"type":"String","desc":"An event type to trigger.","name":"type"}],"short":"Trigger a type of event on every matched element.","examples":[{"code":"$(\"p\").trigger(\"click\")","result":"alert('hello')","before":"&lt;p click=\"alert('hello')\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"trigger"},{"options":[],"cat":"Events","type":"jQuery","desc":"Toggle between two function calls every other click.\nWhenever a matched element is clicked, the first specified function \nis fired, when clicked again, the second is fired. All subsequent \nclicks continue to rotate through the two functions.","params":[{"type":"Function","desc":"The function to execute on every even click.","name":"even"},{"type":"Function","desc":"The function to execute on every odd click.","name":"odd"}],"short":"Toggle between two function calls every other click.","examples":[{"code":"$(\"p\").toggle(function(){\n  $(this).addClass(\"selected\");\n},function(){\n  $(this).removeClass(\"selected\");\n});"}],"tests":[],"name":"toggle"},{"options":[],"cat":"Events","type":"jQuery","desc":"A method for simulating hovering (moving the mouse on, and off,\nan object). This is a custom method which provides an 'in' to a \nfrequent task.\n\nWhenever the mouse cursor is moved over a matched \nelement, the first specified function is fired. Whenever the mouse \nmoves off of the element, the second specified function fires. \nAdditionally, checks are in place to see if the mouse is still within \nthe specified element itself (for example, an image inside of a div), \nand if it is, it will continue to 'hover', and not move out \n(a common error in using a mouseout event handler).","params":[{"type":"Function","desc":"The function to fire whenever the mouse is moved over a matched element.","name":"over"},{"type":"Function","desc":"The function to fire whenever the mouse is moved off of a matched element.","name":"out"}],"short":"A method for simulating hovering (moving the mouse on, and off,\nan object).","examples":[{"code":"$(\"p\").hover(function(){\n  $(this).addClass(\"over\");\n},function(){\n  $(this).addClass(\"out\");\n});"}],"tests":[],"name":"hover"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to be executed whenever the DOM is ready to be\ntraversed and manipulated. This is probably the most important \nfunction included in the event module, as it can greatly improve\nthe response times of your web applications.\n\nIn a nutshell, this is a solid replacement for using window.onload, \nand attaching a function to that. By using this method, your bound Function \nwill be called the instant the DOM is ready to be read and manipulated, \nwhich is exactly what 99.99% of all Javascript code needs to run.\n\nPlease ensure you have no code in your &lt;body&gt; onload event handler, \notherwise $(document).ready() may not fire.\n\nYou can have as many $(document).ready events on your page as you like.","params":[{"type":"Function","desc":"The function to be executed when the DOM is ready.","name":"fn"}],"short":"Bind a function to be executed whenever the DOM is ready to be\ntraversed and manipulated.","examples":[{"code":"$(document).ready(function(){ Your code here... });"}],"tests":[],"name":"ready"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the scroll event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the scroll event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the scroll event of each matched element.","examples":[{"code":"$(\"p\").scroll( function() { alert(\"Hello\"); } );","result":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"scroll"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Trigger the scroll event of each matched element. This causes all of the functions\nthat have been bound to thet scroll event to be executed.","params":[],"short":"Trigger the scroll event of each matched element.","examples":[{"code":"$(\"p\").scroll();","result":"alert('Hello');","before":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"scroll"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the scroll event of each matched element, which will only be executed once.\nUnlike a call to the normal .scroll() method, calling .onescroll() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the scroll event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the scroll event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onescroll( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first scroll","before":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onescroll"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes a bound scroll event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the scroll event on each of the matched elements.","name":"fn"}],"short":"Removes a bound scroll event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unscroll( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onscroll=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unscroll"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes all bound scroll events from each of the matched elements.","params":[],"short":"Removes all bound scroll events from each of the matched elements.","examples":[{"code":"$(\"p\").unscroll();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unscroll"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Bind a function to the submit event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the submit event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the submit event of each matched element.","examples":[{"desc":"Prevents the form submission when the input has no value entered.","code":"$(\"#myform\").submit( function() {\n  return $(\"input\", this).val().length &gt; 0;\n} );","before":"&lt;form id=\"myform\"&gt;&lt;input /&gt;&lt;/form&gt;"}],"tests":[],"name":"submit"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Trigger the submit event of each matched element. This causes all of the functions\nthat have been bound to thet submit event to be executed.\n\nNote: This does not execute the submit method of the form element! If you need to\nsubmit the form via code, you have to use the DOM method, eg. $(\"form\")[0].submit();","params":[],"short":"Trigger the submit event of each matched element.","examples":[{"desc":"Triggers all submit events registered for forms, but does not submit the form","code":"$(\"form\").submit();"}],"tests":[],"name":"submit"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Bind a function to the submit event of each matched element, which will only be executed once.\nUnlike a call to the normal .submit() method, calling .onesubmit() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the submit event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the submit event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onesubmit( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first submit","before":"&lt;p onsubmit=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onesubmit"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Removes a bound submit event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the submit event on each of the matched elements.","name":"fn"}],"short":"Removes a bound submit event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unsubmit( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onsubmit=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unsubmit"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Removes all bound submit events from each of the matched elements.","params":[],"short":"Removes all bound submit events from each of the matched elements.","examples":[{"code":"$(\"p\").unsubmit();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onsubmit=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unsubmit"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Bind a function to the focus event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the focus event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the focus event of each matched element.","examples":[{"code":"$(\"p\").focus( function() { alert(\"Hello\"); } );","result":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"focus"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Trigger the focus event of each matched element. This causes all of the functions\nthat have been bound to thet focus event to be executed.","params":[],"short":"Trigger the focus event of each matched element.","examples":[{"code":"$(\"p\").focus();","result":"alert('Hello');","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"focus"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Bind a function to the focus event of each matched element, which will only be executed once.\nUnlike a call to the normal .focus() method, calling .onefocus() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the focus event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the focus event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onefocus( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first focus","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onefocus"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Removes a bound focus event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the focus event on each of the matched elements.","name":"fn"}],"short":"Removes a bound focus event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unfocus( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onfocus=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unfocus"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Removes all bound focus events from each of the matched elements.","params":[],"short":"Removes all bound focus events from each of the matched elements.","examples":[{"code":"$(\"p\").unfocus();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unfocus"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Bind a function to the keydown event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keydown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keydown event of each matched element.","examples":[{"code":"$(\"p\").keydown( function() { alert(\"Hello\"); } );","result":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keydown"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Trigger the keydown event of each matched element. This causes all of the functions\nthat have been bound to thet keydown event to be executed.","params":[],"short":"Trigger the keydown event of each matched element.","examples":[{"code":"$(\"p\").keydown();","result":"alert('Hello');","before":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keydown"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Bind a function to the keydown event of each matched element, which will only be executed once.\nUnlike a call to the normal .keydown() method, calling .onekeydown() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the keydown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keydown event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onekeydown( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first keydown","before":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onekeydown"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Removes a bound keydown event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the keydown event on each of the matched elements.","name":"fn"}],"short":"Removes a bound keydown event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unkeydown( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeydown=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unkeydown"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Removes all bound keydown events from each of the matched elements.","params":[],"short":"Removes all bound keydown events from each of the matched elements.","examples":[{"code":"$(\"p\").unkeydown();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unkeydown"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the dblclick event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the dblclick event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the dblclick event of each matched element.","examples":[{"code":"$(\"p\").dblclick( function() { alert(\"Hello\"); } );","result":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"dblclick"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the dblclick event of each matched element. This causes all of the functions\nthat have been bound to thet dblclick event to be executed.","params":[],"short":"Trigger the dblclick event of each matched element.","examples":[{"code":"$(\"p\").dblclick();","result":"alert('Hello');","before":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"dblclick"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the dblclick event of each matched element, which will only be executed once.\nUnlike a call to the normal .dblclick() method, calling .onedblclick() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the dblclick event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the dblclick event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onedblclick( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first dblclick","before":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onedblclick"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound dblclick event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the dblclick event on each of the matched elements.","name":"fn"}],"short":"Removes a bound dblclick event from each of the matched\nelements.","examples":[{"code":"$(\"p\").undblclick( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p ondblclick=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"undblclick"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound dblclick events from each of the matched elements.","params":[],"short":"Removes all bound dblclick events from each of the matched elements.","examples":[{"code":"$(\"p\").undblclick();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"undblclick"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Bind a function to the keypress event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keypress event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keypress event of each matched element.","examples":[{"code":"$(\"p\").keypress( function() { alert(\"Hello\"); } );","result":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keypress"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Trigger the keypress event of each matched element. This causes all of the functions\nthat have been bound to thet keypress event to be executed.","params":[],"short":"Trigger the keypress event of each matched element.","examples":[{"code":"$(\"p\").keypress();","result":"alert('Hello');","before":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keypress"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Bind a function to the keypress event of each matched element, which will only be executed once.\nUnlike a call to the normal .keypress() method, calling .onekeypress() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the keypress event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keypress event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onekeypress( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first keypress","before":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onekeypress"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Removes a bound keypress event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the keypress event on each of the matched elements.","name":"fn"}],"short":"Removes a bound keypress event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unkeypress( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeypress=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unkeypress"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Removes all bound keypress events from each of the matched elements.","params":[],"short":"Removes all bound keypress events from each of the matched elements.","examples":[{"code":"$(\"p\").unkeypress();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unkeypress"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the error event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the error event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the error event of each matched element.","examples":[{"code":"$(\"p\").error( function() { alert(\"Hello\"); } );","result":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"error"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Trigger the error event of each matched element. This causes all of the functions\nthat have been bound to thet error event to be executed.","params":[],"short":"Trigger the error event of each matched element.","examples":[{"code":"$(\"p\").error();","result":"alert('Hello');","before":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"error"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the error event of each matched element, which will only be executed once.\nUnlike a call to the normal .error() method, calling .oneerror() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the error event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the error event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneerror( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first error","before":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneerror"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes a bound error event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the error event on each of the matched elements.","name":"fn"}],"short":"Removes a bound error event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unerror( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onerror=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unerror"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes all bound error events from each of the matched elements.","params":[],"short":"Removes all bound error events from each of the matched elements.","examples":[{"code":"$(\"p\").unerror();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unerror"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Bind a function to the blur event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the blur event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the blur event of each matched element.","examples":[{"code":"$(\"p\").blur( function() { alert(\"Hello\"); } );","result":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"blur"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Trigger the blur event of each matched element. This causes all of the functions\nthat have been bound to thet blur event to be executed.","params":[],"short":"Trigger the blur event of each matched element.","examples":[{"code":"$(\"p\").blur();","result":"alert('Hello');","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"blur"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Bind a function to the blur event of each matched element, which will only be executed once.\nUnlike a call to the normal .blur() method, calling .oneblur() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the blur event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the blur event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneblur( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first blur","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneblur"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Removes a bound blur event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the blur event on each of the matched elements.","name":"fn"}],"short":"Removes a bound blur event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unblur( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onblur=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unblur"},{"options":[],"cat":"Events/UI","type":"jQuery","desc":"Removes all bound blur events from each of the matched elements.","params":[],"short":"Removes all bound blur events from each of the matched elements.","examples":[{"code":"$(\"p\").unblur();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unblur"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the load event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the load event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the load event of each matched element.","examples":[{"code":"$(\"p\").load( function() { alert(\"Hello\"); } );","result":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"load"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Trigger the load event of each matched element. This causes all of the functions\nthat have been bound to thet load event to be executed.\n\nMarked as private: Calling load() without arguments throws exception because the ajax load\ndoes not handle it.","params":[],"short":"Trigger the load event of each matched element.","examples":[{"code":"$(\"p\").load();","result":"alert('Hello');","before":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"private":1,"name":"load"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the load event of each matched element, which will only be executed once.\nUnlike a call to the normal .load() method, calling .oneload() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the load event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the load event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneload( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first load","before":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneload"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes a bound load event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the load event on each of the matched elements.","name":"fn"}],"short":"Removes a bound load event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unload( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onload=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unload"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes all bound load events from each of the matched elements.","params":[],"short":"Removes all bound load events from each of the matched elements.","examples":[{"code":"$(\"p\").unload();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unload"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Bind a function to the select event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the select event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the select event of each matched element.","examples":[{"code":"$(\"p\").select( function() { alert(\"Hello\"); } );","result":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"select"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Trigger the select event of each matched element. This causes all of the functions\nthat have been bound to thet select event to be executed.","params":[],"short":"Trigger the select event of each matched element.","examples":[{"code":"$(\"p\").select();","result":"alert('Hello');","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"select"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Bind a function to the select event of each matched element, which will only be executed once.\nUnlike a call to the normal .select() method, calling .oneselect() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the select event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the select event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneselect( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first select","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneselect"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Removes a bound select event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the select event on each of the matched elements.","name":"fn"}],"short":"Removes a bound select event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unselect( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onselect=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unselect"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Removes all bound select events from each of the matched elements.","params":[],"short":"Removes all bound select events from each of the matched elements.","examples":[{"code":"$(\"p\").unselect();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unselect"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mouseup event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mouseup event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseup event of each matched element.","examples":[{"code":"$(\"p\").mouseup( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseup"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the mouseup event of each matched element. This causes all of the functions\nthat have been bound to thet mouseup event to be executed.","params":[],"short":"Trigger the mouseup event of each matched element.","examples":[{"code":"$(\"p\").mouseup();","result":"alert('Hello');","before":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseup"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mouseup event of each matched element, which will only be executed once.\nUnlike a call to the normal .mouseup() method, calling .onemouseup() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the mouseup event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseup event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onemouseup( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mouseup","before":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onemouseup"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound mouseup event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the mouseup event on each of the matched elements.","name":"fn"}],"short":"Removes a bound mouseup event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unmouseup( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseup=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmouseup"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound mouseup events from each of the matched elements.","params":[],"short":"Removes all bound mouseup events from each of the matched elements.","examples":[{"code":"$(\"p\").unmouseup();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmouseup"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the unload event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the unload event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the unload event of each matched element.","examples":[{"code":"$(\"p\").unload( function() { alert(\"Hello\"); } );","result":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unload"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Trigger the unload event of each matched element. This causes all of the functions\nthat have been bound to thet unload event to be executed.","params":[],"short":"Trigger the unload event of each matched element.","examples":[{"code":"$(\"p\").unload();","result":"alert('Hello');","before":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unload"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the unload event of each matched element, which will only be executed once.\nUnlike a call to the normal .unload() method, calling .oneunload() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the unload event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the unload event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneunload( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first unload","before":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneunload"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes a bound unload event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the unload event on each of the matched elements.","name":"fn"}],"short":"Removes a bound unload event from each of the matched\nelements.","examples":[{"code":"$(\"p\").ununload( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onunload=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"ununload"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes all bound unload events from each of the matched elements.","params":[],"short":"Removes all bound unload events from each of the matched elements.","examples":[{"code":"$(\"p\").ununload();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"ununload"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Bind a function to the change event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the change event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the change event of each matched element.","examples":[{"code":"$(\"p\").change( function() { alert(\"Hello\"); } );","result":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"change"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Trigger the change event of each matched element. This causes all of the functions\nthat have been bound to thet change event to be executed.","params":[],"short":"Trigger the change event of each matched element.","examples":[{"code":"$(\"p\").change();","result":"alert('Hello');","before":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"change"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Bind a function to the change event of each matched element, which will only be executed once.\nUnlike a call to the normal .change() method, calling .onechange() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the change event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the change event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onechange( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first change","before":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onechange"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Removes a bound change event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the change event on each of the matched elements.","name":"fn"}],"short":"Removes a bound change event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unchange( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onchange=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unchange"},{"options":[],"cat":"Events/Form","type":"jQuery","desc":"Removes all bound change events from each of the matched elements.","params":[],"short":"Removes all bound change events from each of the matched elements.","examples":[{"code":"$(\"p\").unchange();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unchange"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mouseout event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mouseout event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseout event of each matched element.","examples":[{"code":"$(\"p\").mouseout( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseout"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the mouseout event of each matched element. This causes all of the functions\nthat have been bound to thet mouseout event to be executed.","params":[],"short":"Trigger the mouseout event of each matched element.","examples":[{"code":"$(\"p\").mouseout();","result":"alert('Hello');","before":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseout"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mouseout event of each matched element, which will only be executed once.\nUnlike a call to the normal .mouseout() method, calling .onemouseout() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the mouseout event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseout event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onemouseout( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mouseout","before":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onemouseout"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound mouseout event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the mouseout event on each of the matched elements.","name":"fn"}],"short":"Removes a bound mouseout event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unmouseout( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseout=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmouseout"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound mouseout events from each of the matched elements.","params":[],"short":"Removes all bound mouseout events from each of the matched elements.","examples":[{"code":"$(\"p\").unmouseout();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmouseout"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Bind a function to the keyup event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keyup event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keyup event of each matched element.","examples":[{"code":"$(\"p\").keyup( function() { alert(\"Hello\"); } );","result":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keyup"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Trigger the keyup event of each matched element. This causes all of the functions\nthat have been bound to thet keyup event to be executed.","params":[],"short":"Trigger the keyup event of each matched element.","examples":[{"code":"$(\"p\").keyup();","result":"alert('Hello');","before":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keyup"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Bind a function to the keyup event of each matched element, which will only be executed once.\nUnlike a call to the normal .keyup() method, calling .onekeyup() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the keyup event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keyup event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onekeyup( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first keyup","before":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onekeyup"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Removes a bound keyup event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the keyup event on each of the matched elements.","name":"fn"}],"short":"Removes a bound keyup event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unkeyup( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeyup=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unkeyup"},{"options":[],"cat":"Events/Keyboard","type":"jQuery","desc":"Removes all bound keyup events from each of the matched elements.","params":[],"short":"Removes all bound keyup events from each of the matched elements.","examples":[{"code":"$(\"p\").unkeyup();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unkeyup"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the click event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the click event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the click event of each matched element.","examples":[{"code":"$(\"p\").click( function() { alert(\"Hello\"); } );","result":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"click"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the click event of each matched element. This causes all of the functions\nthat have been bound to thet click event to be executed.","params":[],"short":"Trigger the click event of each matched element.","examples":[{"code":"$(\"p\").click();","result":"alert('Hello');","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"click"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the click event of each matched element, which will only be executed once.\nUnlike a call to the normal .click() method, calling .oneclick() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the click event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the click event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneclick( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first click","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneclick"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound click event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the click event on each of the matched elements.","name":"fn"}],"short":"Removes a bound click event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unclick( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onclick=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unclick"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound click events from each of the matched elements.","params":[],"short":"Removes all bound click events from each of the matched elements.","examples":[{"code":"$(\"p\").unclick();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unclick"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the resize event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the resize event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the resize event of each matched element.","examples":[{"code":"$(\"p\").resize( function() { alert(\"Hello\"); } );","result":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"resize"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Trigger the resize event of each matched element. This causes all of the functions\nthat have been bound to thet resize event to be executed.","params":[],"short":"Trigger the resize event of each matched element.","examples":[{"code":"$(\"p\").resize();","result":"alert('Hello');","before":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"resize"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Bind a function to the resize event of each matched element, which will only be executed once.\nUnlike a call to the normal .resize() method, calling .oneresize() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the resize event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the resize event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").oneresize( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first resize","before":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"oneresize"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes a bound resize event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the resize event on each of the matched elements.","name":"fn"}],"short":"Removes a bound resize event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unresize( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onresize=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unresize"},{"options":[],"cat":"Events/Browser","type":"jQuery","desc":"Removes all bound resize events from each of the matched elements.","params":[],"short":"Removes all bound resize events from each of the matched elements.","examples":[{"code":"$(\"p\").unresize();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unresize"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mousemove event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousemove event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mousemove event of each matched element.","examples":[{"code":"$(\"p\").mousemove( function() { alert(\"Hello\"); } );","result":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mousemove"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the mousemove event of each matched element. This causes all of the functions\nthat have been bound to thet mousemove event to be executed.","params":[],"short":"Trigger the mousemove event of each matched element.","examples":[{"code":"$(\"p\").mousemove();","result":"alert('Hello');","before":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mousemove"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mousemove event of each matched element, which will only be executed once.\nUnlike a call to the normal .mousemove() method, calling .onemousemove() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the mousemove event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mousemove event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onemousemove( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mousemove","before":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onemousemove"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound mousemove event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the mousemove event on each of the matched elements.","name":"fn"}],"short":"Removes a bound mousemove event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unmousemove( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousemove=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmousemove"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound mousemove events from each of the matched elements.","params":[],"short":"Removes all bound mousemove events from each of the matched elements.","examples":[{"code":"$(\"p\").unmousemove();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmousemove"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mousedown event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mousedown event of each matched element.","examples":[{"code":"$(\"p\").mousedown( function() { alert(\"Hello\"); } );","result":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mousedown"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the mousedown event of each matched element. This causes all of the functions\nthat have been bound to thet mousedown event to be executed.","params":[],"short":"Trigger the mousedown event of each matched element.","examples":[{"code":"$(\"p\").mousedown();","result":"alert('Hello');","before":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mousedown"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mousedown event of each matched element, which will only be executed once.\nUnlike a call to the normal .mousedown() method, calling .onemousedown() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mousedown event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onemousedown( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mousedown","before":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onemousedown"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound mousedown event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the mousedown event on each of the matched elements.","name":"fn"}],"short":"Removes a bound mousedown event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unmousedown( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousedown=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmousedown"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound mousedown events from each of the matched elements.","params":[],"short":"Removes all bound mousedown events from each of the matched elements.","examples":[{"code":"$(\"p\").unmousedown();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmousedown"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mouseover event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseover event of each matched element.","examples":[{"code":"$(\"p\").mouseover( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseover"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Trigger the mouseover event of each matched element. This causes all of the functions\nthat have been bound to thet mousedown event to be executed.","params":[],"short":"Trigger the mouseover event of each matched element.","examples":[{"code":"$(\"p\").mouseover();","result":"alert('Hello');","before":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseover"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Bind a function to the mouseover event of each matched element, which will only be executed once.\nUnlike a call to the normal .mouseover() method, calling .onemouseover() causes the bound function to be\nonly executed the first time it is triggered, and never again (unless it is re-bound).","params":[{"type":"Function","desc":"A function to bind to the mouseover event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseover event of each matched element, which will only be executed once.","examples":[{"code":"$(\"p\").onemouseover( function() { alert(\"Hello\"); } );","result":"alert('Hello'); // Only executed for the first mouseover","before":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"onemouseover"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes a bound mouseover event from each of the matched\nelements. You must pass the identical function that was used in the original \nbind method.","params":[{"type":"Function","desc":"A function to unbind from the mouseover event on each of the matched elements.","name":"fn"}],"short":"Removes a bound mouseover event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unmouseover( myFunction );","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseover=\"myFunction\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmouseover"},{"options":[],"cat":"Events/Mouse","type":"jQuery","desc":"Removes all bound mouseover events from each of the matched elements.","params":[],"short":"Removes all bound mouseover events from each of the matched elements.","examples":[{"code":"$(\"p\").unmouseover();","result":"&lt;p&gt;Hello&lt;/p&gt;","before":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unmouseover"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Show all matched elements using a graceful animation.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Show all matched elements using a graceful animation.","examples":[{"code":"$(\"p\").show(\"slow\");"}],"tests":[],"name":"show"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Show all matched elements using a graceful animation and firing a callback\nfunction after completion.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Show all matched elements using a graceful animation and firing a callback\nfunction after completion.","examples":[{"code":"$(\"p\").show(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"show"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Hide all matched elements using a graceful animation.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Hide all matched elements using a graceful animation.","examples":[{"code":"$(\"p\").hide(\"slow\");"}],"tests":[],"name":"hide"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Hide all matched elements using a graceful animation and firing a callback\nfunction after completion.\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Hide all matched elements using a graceful animation and firing a callback\nfunction after completion.","examples":[{"code":"$(\"p\").hide(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"hide"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Reveal all matched elements by adjusting their height.\nOnly the height is adjusted for this animation, causing all matched\nelements to be revealed in a \"sliding\" manner.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Reveal all matched elements by adjusting their height.","examples":[{"code":"$(\"p\").slideDown(\"slow\");"}],"tests":[],"name":"slideDown"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Reveal all matched elements by adjusting their height and firing a callback\nfunction after completion.\nOnly the height is adjusted for this animation, causing all matched\nelements to be revealed in a \"sliding\" manner.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Reveal all matched elements by adjusting their height and firing a callback\nfunction after completion.","examples":[{"code":"$(\"p\").slideDown(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"slideDown"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Hide all matched elements by adjusting their height.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Hide all matched elements by adjusting their height.","examples":[{"code":"$(\"p\").slideUp(\"slow\");"}],"tests":[],"name":"slideUp"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Hide all matched elements by adjusting their height and firing a callback\nfunction after completion.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Hide all matched elements by adjusting their height and firing a callback\nfunction after completion.","examples":[{"code":"$(\"p\").slideUp(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"slideUp"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Toggle the visibility of all matched elements by adjusting their height.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Toggle the visibility of all matched elements by adjusting their height.","examples":[{"code":"$(\"p\").slideToggle(\"slow\");"}],"tests":[],"name":"slideToggle"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Toggle the visibility of all matched elements by adjusting their height\nand firing a callback function after completion.\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Toggle the visibility of all matched elements by adjusting their height\nand firing a callback function after completion.","examples":[{"code":"$(\"p\").slideToggle(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"slideToggle"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Fade in all matched elements by adjusting their opacity.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Fade in all matched elements by adjusting their opacity.","examples":[{"code":"$(\"p\").fadeIn(\"slow\");"}],"tests":[],"name":"fadeIn"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Fade in all matched elements by adjusting their opacity and firing a \ncallback function after completion.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Fade in all matched elements by adjusting their opacity and firing a \ncallback function after completion.","examples":[{"code":"$(\"p\").fadeIn(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"fadeIn"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Fade out all matched elements by adjusting their opacity.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"}],"short":"Fade out all matched elements by adjusting their opacity.","examples":[{"code":"$(\"p\").fadeOut(\"slow\");"}],"tests":[],"name":"fadeOut"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Fade out all matched elements by adjusting their opacity and firing a \ncallback function after completion.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Fade out all matched elements by adjusting their opacity and firing a \ncallback function after completion.","examples":[{"code":"$(\"p\").fadeOut(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"fadeOut"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Fade the opacity of all matched elements to a specified opacity.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Number","desc":"The opacity to fade to (a number from 0 to 1).","name":"opacity"}],"short":"Fade the opacity of all matched elements to a specified opacity.","examples":[{"code":"$(\"p\").fadeTo(\"slow\", 0.5);"}],"tests":[],"name":"fadeTo"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"Fade the opacity of all matched elements to a specified opacity and \nfiring a callback function after completion.\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","params":[{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Number","desc":"The opacity to fade to (a number from 0 to 1).","name":"opacity"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"Fade the opacity of all matched elements to a specified opacity and \nfiring a callback function after completion.","examples":[{"code":"$(\"p\").fadeTo(\"slow\", 0.5, function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"fadeTo"},{"options":[],"cat":"Effects/Animations","type":"jQuery","desc":"A function for making your own, custom, animations. The key aspect of\nthis function is the object of style properties that will be animated,\nand to what end. Each key within the object represents a style property\nthat will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\nThe value associated with the key represents to what end the property\nwill be animated. If a number is provided as the value, then the style\nproperty will be transitioned from its current state to that new number.\nOterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\nanimation will be constructed for that property.","params":[{"type":"Hash","desc":"A set of style attributes that you wish to animate, and to what end.","name":"params"},{"type":"Object","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"A function to be executed whenever the animation completes.","name":"callback"}],"short":"A function for making your own, custom, animations.","examples":[{"code":"$(\"p\").animate({\n  height: 'toggle', opacity: 'toggle'\n}, \"slow\");"},{"code":"$(\"p\").animate({\n  left: 50, opacity: 'show'\n}, 500);"}],"tests":[],"name":"animate"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Load HTML from a remote file and inject it into the DOM, only if it's\nbeen modified by the server.","params":[{"type":"String","desc":"The URL of the HTML file to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load HTML from a remote file and inject it into the DOM, only if it's\nbeen modified by the server.","examples":[{"code":"$(\"#feeds\").loadIfModified(\"feeds.html\")","result":"&lt;div id=\"feeds\"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;","before":"&lt;div id=\"feeds\"&gt;&lt;/div&gt;"}],"tests":[],"name":"loadIfModified"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Load HTML from a remote file and inject it into the DOM.","params":[{"type":"String","desc":"The URL of the HTML file to load.","name":"url"},{"type":"Object","desc":"A set of key/value pairs that will be sent as data to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded (parameters: responseText, status and reponse itself).","name":"callback"}],"short":"Load HTML from a remote file and inject it into the DOM.","examples":[{"code":"$(\"#feeds\").load(\"feeds.html\")","result":"&lt;div id=\"feeds\"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;","before":"&lt;div id=\"feeds\"&gt;&lt;/div&gt;"},{"desc":"Same as above, but with an additional parameter\nand a callback that is executed when the data was loaded.","code":"$(\"#feeds\").load(\"feeds.html\",\n  {test: true},\n  function() { alert(\"load is done\"); }\n);"}],"tests":[],"name":"load"},{"options":[],"cat":"AJAX","type":"String","desc":"Serializes a set of input elements into a string of data.\nThis will serialize all given elements. If you need\nserialization similar to the form submit of a browser,\nyou should use the form plugin. This is also true for\nselects with multiple attribute set, only a single option\nis serialized.","params":[],"short":"Serializes a set of input elements into a string of data.","examples":[{"after":"name=John&amp;location=Boston","desc":"Serialize a selection of input elements to a string","before":"&lt;input type='text' name='name' value='John'/&gt;\n&lt;input type='text' name='location' value='Boston'/&gt;","code":"$(\"input[@type=text]\").serialize();"}],"tests":[],"name":"serialize"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Evaluate all script tags inside this jQuery. If they have a src attribute,\nthe script is loaded, otherwise it's content is evaluated.","params":[],"short":"Evaluate all script tags inside this jQuery.","examples":[],"tests":[],"private":1,"name":"evalScripts"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request begins.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request begins.","examples":[{"desc":"Show a loading message whenever an AJAX request starts.","code":"$(\"#loading\").ajaxStart(function(){\n  $(this).show();\n});"}],"tests":[],"name":"ajaxStart"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Attach a function to be executed whenever all AJAX requests have ended.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever all AJAX requests have ended.","examples":[{"desc":"Hide a loading message after all the AJAX requests have stopped.","code":"$(\"#loading\").ajaxStop(function(){\n  $(this).hide();\n});"}],"tests":[],"name":"ajaxStop"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request completes.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request completes.","examples":[{"desc":"Show a message when an AJAX request completes.","code":"$(\"#msg\").ajaxComplete(function(request, settings){\n  $(this).append(\"&lt;li&gt;Request Complete.&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxComplete"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request completes\nsuccessfully.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request completes\nsuccessfully.","examples":[{"desc":"Show a message when an AJAX request completes successfully.","code":"$(\"#msg\").ajaxSuccess(function(request, settings){\n  $(this).append(\"&lt;li&gt;Successful Request!&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxSuccess"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request fails.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request fails.","examples":[{"desc":"Show a message when an AJAX request fails.","code":"$(\"#msg\").ajaxError(function(request, settings){\n  $(this).append(\"&lt;li&gt;Error requesting page \" + settings.url + \"&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxError"},{"options":[],"cat":"AJAX","type":"jQuery","desc":"Attach a function to be executed before an AJAX request is send.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed before an AJAX request is send.","examples":[{"desc":"Show a message before an AJAX request is send.","code":"$(\"#msg\").ajaxSend(function(request, settings){\n  $(this).append(\"&lt;li&gt;Starting request at \" + settings.url + \"&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxSend"},{"options":[],"cat":"AJAX","type":"undefined","desc":"Load a remote page using an HTTP GET request. All of the arguments to\nthe method (except URL) are optional.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote page using an HTTP GET request.","examples":[{"code":"$.get(\"test.cgi\")"},{"code":"$.get(\"test.cgi\", { name: \"John\", time: \"2pm\" } )"},{"code":"$.get(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n})"},{"code":"$.get(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n)"}],"tests":[],"name":"$.get"},{"options":[],"cat":"AJAX","type":"undefined","desc":"Load a remote page using an HTTP GET request, only if it hasn't\nbeen modified since it was last retrieved. All of the arguments to\nthe method (except URL) are optional.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote page using an HTTP GET request, only if it hasn't\nbeen modified since it was last retrieved.","examples":[{"code":"$.getIfModified(\"test.html\")"},{"code":"$.getIfModified(\"test.html\", { name: \"John\", time: \"2pm\" } )"},{"code":"$.getIfModified(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n})"},{"code":"$.getifModified(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n)"}],"tests":[],"name":"$.getIfModified"},{"options":[],"cat":"AJAX","type":"undefined","desc":"Loads, and executes, a remote JavaScript file using an HTTP GET request.\nAll of the arguments to the method (except URL) are optional.\n\nWarning: Safari &lt;= 2.0.x is unable to evalulate scripts in a global\ncontext sychronously. If you load functions via getScript, make sure\nto call them after a delay.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Loads, and executes, a remote JavaScript file using an HTTP GET request.","examples":[{"code":"$.getScript(\"test.js\")"},{"code":"$.getScript(\"test.js\", function(){\n  alert(\"Script loaded and executed.\");\n})"}],"tests":[],"name":"$.getScript"},{"options":[],"cat":"AJAX","type":"undefined","desc":"Load a remote JSON object using an HTTP GET request.\nAll of the arguments to the method (except URL) are optional.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote JSON object using an HTTP GET request.","examples":[{"code":"$.getJSON(\"test.js\", function(json){\n  alert(\"JSON Data: \" + json.users[3].name);\n})"},{"code":"$.getJSON(\"test.js\",\n  { name: \"John\", time: \"2pm\" },\n  function(json){\n    alert(\"JSON Data: \" + json.users[3].name);\n  }\n)"}],"tests":[],"name":"$.getJSON"},{"options":[],"cat":"AJAX","type":"undefined","desc":"Load a remote page using an HTTP POST request. All of the arguments to\nthe method (except URL) are optional.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Hash","desc":"A set of key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote page using an HTTP POST request.","examples":[{"code":"$.post(\"test.cgi\")"},{"code":"$.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } )"},{"code":"$.post(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n})"},{"code":"$.post(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n)"}],"tests":[],"name":"$.post"},{"options":[],"cat":"AJAX","type":"undefined","desc":"Set the timeout of all AJAX requests to a specific amount of time.\nThis will make all future AJAX requests timeout after a specified amount\nof time (the default is no timeout).","params":[{"type":"Number","desc":"How long before an AJAX request times out.","name":"time"}],"short":"Set the timeout of all AJAX requests to a specific amount of time.","examples":[{"desc":"Make all AJAX requests timeout after 5 seconds.","code":"$.ajaxTimeout( 5000 );"}],"tests":[],"name":"$.ajaxTimeout"},{"options":[],"cat":"AJAX","type":"XMLHttpRequest","desc":"Load a remote page using an HTTP request. This function is the primary\nmeans of making AJAX requests using jQuery. \n\n$.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\nneed that object to manipulate directly, but it is available if you need to\nabort the request manually.\n\nPlease note: Make sure the server sends the right mimetype (eg. xml as\n\"text/xml\"). Sending the wrong mimetype will get you into serious\ntrouble that jQuery can't solve.\n\nSupported datatypes (see dataType option) are:\n\n\"xml\": Returns a XML document that can be processed via jQuery.\n\n\"html\": Returns HTML as plain text, included script tags are evaluated.\n\n\"script\": Evaluates the response as Javascript and returns it as plain text.\n\n\"json\": Evaluates the response as JSON and returns a Javascript Object\n\n$.ajax() takes one property, an object of key/value pairs, that are\nused to initalize the request. These are all the key/values that can\nbe passed in to 'prop':\n\n(String) url - The URL of the page to request.\n\n(String) type - The type of request to make (e.g. \"POST\" or \"GET\"), default is \"GET\".\n\n(String) dataType - The type of data that you're expecting back from\nthe server. No default: If the server sends xml, the responseXML, otherwise\nthe responseText is is passed to the success callback.\n\n(Boolean) ifModified - Allow the request to be successful only if the\nresponse has changed since the last request, default is false, ignoring\nthe Last-Modified header\n\n(Number) timeout - Local timeout to override global timeout, eg. to give a\nsingle request a longer timeout while all others timeout after 1 seconds,\nsee $.ajaxTimeout()\n\n(Boolean) global - Wheather to trigger global AJAX event handlers for\nthis request, default is true. Set to false to prevent that global handlers\nlike ajaxStart or ajaxStop are triggered.\n\n(Function) error - A function to be called if the request fails. The\nfunction gets passed two arguments: The XMLHttpRequest object and a\nstring describing the type of error that occurred.\n\n(Function) success - A function to be called if the request succeeds. The\nfunction gets passed one argument: The data returned from the server,\nformatted according to the 'dataType' parameter.\n\n(Function) complete - A function to be called when the request finishes. The\nfunction gets passed two arguments: The XMLHttpRequest object and a\nstring describing the type the success of the request.\n\n(Object|String) data - Data to be sent to the server. Converted to a query\nstring, if not already a string. Is appended to the url for GET-requests.\nOverride processData option to prevent processing.\n\n(String) contentType - When sending data to the server, use this content-type,\ndefault is \"application/x-www-form-urlencoded\", which is fine for most cases.\n\n(Boolean) processData - By default, data passed in as an object other as string\nwill be processed and transformed into a query string, fitting to the default\ncontent-type \"application/x-www-form-urlencoded\". If you want to send DOMDocuments,\nset this option to false.\n\n(Boolean) async - By default, all requests are send asynchronous (set to true).\nIf you need synchronous requests, set this option to false.\n\n(Function) beforeSend - A pre-callback to set custom headers etc., the\nXMLHttpRequest is passed as the only argument.","params":[{"type":"Hash","desc":"A set of properties to initialize the request with.","name":"prop"}],"short":"Load a remote page using an HTTP request.","examples":[{"desc":"Load and execute a JavaScript file.","code":"$.ajax({\n  type: \"GET\",\n  url: \"test.js\",\n  dataType: \"script\"\n})"},{"desc":"Save some data to the server and notify the user once its complete.","code":"$.ajax({\n  type: \"POST\",\n  url: \"some.php\",\n  data: \"name=John&amp;location=Boston\",\n  success: function(msg){\n    alert( \"Data Saved: \" + msg );\n  }\n});"}],"tests":[],"name":"$.ajax"}]