[{"options":[],"cat":"Core","desc":"Create a new jQuery Object","params":[{"type":"String|Function|Element|Array&lt;Element&gt;|jQuery","desc":"selector","name":"a"},{"type":"jQuery|Element|Array&lt;Element&gt;","desc":"context","name":"c"}],"short":"Create a new jQuery Object","examples":[],"constructor":[1],"tests":[],"name":"jQuery","private":1},{"options":[],"cat":"Core","type":"jQuery","desc":"This function accepts a string containing a CSS or\nbasic XPath selector which is then used to match a set of elements.\n\nThe core functionality of jQuery centers around this function.\nEverything in jQuery is based upon this, or uses this in some way.\nThe most basic use of this function is to pass in an expression\n(usually consisting of CSS or XPath), which then finds all matching\nelements.\n\nBy default, $() looks for DOM elements within the context of the\ncurrent HTML document.","see":["$(Element)","$(Element&lt;Array&gt;)"],"params":[{"type":"String","desc":"An expression to search with","name":"expr"},{"type":"Element|jQuery","desc":"(optional) A DOM Element, Document or jQuery to use as context","name":"context"}],"short":"This function accepts a string containing a CSS or\nbasic XPath selector which is then used to match a set of elements.","examples":[{"desc":"Finds all p elements that are children of a div element.","before":"&lt;p&gt;one&lt;/p&gt; &lt;div&gt;&lt;p&gt;two&lt;/p&gt;&lt;/div&gt; &lt;p&gt;three&lt;/p&gt;","code":"$(\"div &gt; p\")","result":"[ &lt;p&gt;two&lt;/p&gt; ]"},{"desc":"Searches for all inputs of type radio within the first form in the document","code":"$(\"input:radio\", document.forms[0])"},{"desc":"This finds all div elements within the specified XML document.","code":"$(\"div\", xml.responseXML)"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"Create DOM elements on-the-fly from the provided String of raw HTML.","see":"appendTo(String)","params":[{"type":"String","desc":"A string of HTML to create on the fly.","name":"html"}],"short":"Create DOM elements on-the-fly from the provided String of raw HTML.","examples":[{"desc":"Creates a div element (and all of its contents) dynamically, \nand appends it to the element with the ID of body. Internally, an\nelement is created and it's innerHTML property set to the given markup.\nIt is therefore both quite flexible and limited.","code":"$(\"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;\").appendTo(\"#body\")"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"Wrap jQuery functionality around a single or multiple DOM Element(s).\n\nThis function also accepts XML Documents and Window objects\nas valid arguments (even though they are not DOM Elements).","params":[{"type":"Element|Array&lt;Element&gt;","desc":"DOM element(s) to be encapsulated by a jQuery object.","name":"elems"}],"short":"Wrap jQuery functionality around a single or multiple DOM Element(s).","examples":[{"desc":"Sets the background color of the page to black.","code":"$(document.body).background( \"black\" );"},{"desc":"Hides all the input elements within a form","code":"$( myForm.elements ).hide()"}],"tests":[],"name":"$"},{"options":[],"cat":"Core","type":"jQuery","desc":"A shorthand for $(document).ready(), allowing you to bind a function\nto be executed when the DOM document has finished loading. This function\nbehaves just like $(document).ready(), in that it should be used to wrap\nall of the other $() operations on your page. While this function is,\ntechnically, chainable - there really isn't much use for chaining against it.\nYou can have as many $(document).ready events on your page as you like.\n\nSee ready(Function) for details about the ready event.","see":"ready(Function)","params":[{"type":"Function","desc":"The function to execute when the DOM is ready.","name":"fn"}],"short":"A shorthand for $(document).","examples":[{"desc":"Executes the function when the DOM is ready to be used.","code":"$(function(){\n  // Document is ready\n});"},{"desc":"Uses both the shortcut for $(document).ready() and the argument\nto write failsafe jQuery code using the $ alias, without relying on the\nglobal alias.","code":"jQuery(function($) {\n  // Your code using failsafe $ alias here...\n});"}],"tests":[],"name":"$"},{"options":[],"property":1,"cat":"Core","type":"String","desc":"The current version of jQuery.","params":[],"short":"The current version of jQuery.","examples":[],"tests":[],"name":"jquery","private":1},{"options":[],"property":1,"cat":"Core","type":"Number","desc":"The number of elements currently matched.","params":[],"short":"The number of elements currently matched.","examples":[{"code":"$(\"img\").length;","result":"2","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":[],"name":"length"},{"options":[],"cat":"Core","type":"Number","desc":"The number of elements currently matched.","params":[],"short":"The number of elements currently matched.","examples":[{"code":"$(\"img\").size();","result":"2","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;"}],"tests":[],"name":"size"},{"options":[],"cat":"Core","type":"Array&lt;Element&gt;","desc":"Access all matched elements. This serves as a backwards-compatible\nway of accessing all matched elements (other than the jQuery object\nitself, which is, in fact, an array of elements).","params":[],"short":"Access all matched elements.","examples":[{"desc":"Selects all images in the document and returns the DOM Elements as an Array","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;","code":"$(\"img\").get();","result":"[ &lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt; ]"}],"tests":[],"name":"get"},{"options":[],"cat":"Core","type":"Element","desc":"Access a single matched element. num is used to access the\nNth element matched.","params":[{"type":"Number","desc":"Access the element in the Nth position.","name":"num"}],"short":"Access a single matched element.","examples":[{"desc":"Selects all images in the document and returns the first one","before":"&lt;img src=\"test1.jpg\"/&gt; &lt;img src=\"test2.jpg\"/&gt;","code":"$(\"img\").get(0);","result":"[ &lt;img src=\"test1.jpg\"/&gt; ]"}],"tests":[],"name":"get"},{"options":[],"cat":"Core","type":"jQuery","desc":"Set the jQuery object to an array of elements, while maintaining\nthe stack.","params":[{"type":"Elements","desc":"An array of elements","name":"elems"}],"short":"Set the jQuery object to an array of elements, while maintaining\nthe stack.","examples":[{"code":"$(\"img\").pushStack([ document.body ]);","result":"$(\"img\").pushStack() == [ document.body ]"}],"tests":[],"name":"pushStack","private":1},{"options":[],"cat":"Core","type":"jQuery","desc":"Set the jQuery object to an array of elements. This operation is\ncompletely destructive - be sure to use .pushStack() if you wish to maintain\nthe jQuery stack.","params":[{"type":"Elements","desc":"An array of elements","name":"elems"}],"short":"Set the jQuery object to an array of elements.","examples":[{"code":"$(\"img\").setArray([ document.body ]);","result":"$(\"img\").setArray() == [ document.body ]"}],"tests":[],"name":"setArray","private":1},{"options":[],"cat":"Core","type":"jQuery","desc":"Execute a function within the context of every matched element.\nThis means that every time the passed-in function is executed\n(which is once for every element matched) the 'this' keyword\npoints to the specific element.\n\nAdditionally, the function, when executed, is passed a single\nargument representing the position of the element in the matched\nset.","params":[{"type":"Function","desc":"A function to execute","name":"fn"}],"short":"Execute a function within the context of every matched element.","examples":[{"desc":"Iterates over two images and sets their src property","before":"&lt;img/&gt;&lt;img/&gt;","code":"$(\"img\").each(function(i){\n  this.src = \"test\" + i + \".jpg\";\n});","result":"&lt;img src=\"test0.jpg\"/&gt;&lt;img src=\"test1.jpg\"/&gt;"}],"tests":[],"name":"each"},{"options":[],"cat":"Core","type":"Number","desc":"Searches every matched element for the object and returns\nthe index of the element, if found, starting with zero. \nReturns -1 if the object wasn't found.","params":[{"type":"Element","desc":"Object to search for","name":"subject"}],"short":"Searches every matched element for the object and returns\nthe index of the element, if found, starting with zero.","examples":[{"desc":"Returns the index for the element with ID foobar","before":"&lt;div id=\"foobar\"&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;&lt;/div&gt;","code":"$(\"*\").index( $('#foobar')[0] )","result":"0"},{"desc":"Returns the index for the element with ID foo within another element","before":"&lt;div id=\"foobar\"&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;&lt;/div&gt;","code":"$(\"*\").index( $('#foo')[0] )","result":"2"},{"desc":"Returns -1, as there is no element with ID bar","before":"&lt;div id=\"foobar\"&gt;&lt;b&gt;&lt;/b&gt;&lt;span id=\"foo\"&gt;&lt;/span&gt;&lt;/div&gt;","code":"$(\"*\").index( $('#bar')[0] )","result":"-1"}],"tests":[],"name":"index"},{"options":[],"cat":"DOM/Attributes","type":"Object","desc":"Access a property on the first matched element.\nThis method makes it easy to retrieve a property value\nfrom the first matched element.","params":[{"type":"String","desc":"The name of the property to access.","name":"name"}],"short":"Access a property on the first matched element.","examples":[{"desc":"Returns the src attribute from the first image in the document.","before":"&lt;img src=\"test.jpg\"/&gt;","code":"$(\"img\").attr(\"src\");","result":"test.jpg"}],"tests":[],"name":"attr"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set a key/value object as properties to all matched elements.\n\nThis serves as the best way to set a large number of properties\non all matched elements.","params":[{"type":"Map","desc":"Key/value pairs to set as object properties.","name":"properties"}],"short":"Set a key/value object as properties to all matched elements.","examples":[{"desc":"Sets src and alt attributes to all images.","before":"&lt;img/&gt;","code":"$(\"img\").attr({ src: \"test.jpg\", alt: \"Test Image\" });","result":"&lt;img src=\"test.jpg\" alt=\"Test Image\"/&gt;"}],"tests":[],"name":"attr"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set a single property to a value, on all matched elements.\n\nCan compute values provided as ${formula}, see second example.\n\nNote that you can't set the name property of input elements in IE.\nUse $(html) or .append(html) or .html(html) to create elements\non the fly including the name property.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"Object","desc":"The value to set the property to.","name":"value"}],"short":"Set a single property to a value, on all matched elements.","examples":[{"desc":"Sets src attribute to all images.","before":"&lt;img/&gt;","code":"$(\"img\").attr(\"src\",\"test.jpg\");","result":"&lt;img src=\"test.jpg\"/&gt;"},{"desc":"Sets title attribute from src attribute, a shortcut for attr(String,Function)","before":"&lt;img src=\"test.jpg\" /&gt;","code":"$(\"img\").attr(\"title\", \"${this.src}\");","result":"&lt;img src=\"test.jpg\" title=\"test.jpg\" /&gt;"}],"tests":[],"name":"attr"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set a single property to a computed value, on all matched elements.\n\nInstead of a value, a function is provided, that computes the value.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"Function","desc":"A function returning the value to set.","name":"value"}],"short":"Set a single property to a computed value, on all matched elements.","examples":[{"desc":"Sets title attribute from src attribute.","before":"&lt;img src=\"test.jpg\" /&gt;","code":"$(\"img\").attr(\"title\", function() { return this.src });","result":"&lt;img src=\"test.jpg\" title=\"test.jpg\" /&gt;"}],"tests":[],"name":"attr"},{"options":[],"cat":"CSS","type":"String","desc":"Access a style property on the first matched element.\nThis method makes it easy to retrieve a style property value\nfrom the first matched element.","params":[{"type":"String","desc":"The name of the property to access.","name":"name"}],"short":"Access a style property on the first matched element.","examples":[{"desc":"Retrieves the color style of the first paragraph","before":"&lt;p style=\"color:red;\"&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"color\");","result":"\"red\""},{"desc":"Retrieves the font-weight style of the first paragraph.","before":"&lt;p style=\"font-weight: bold;\"&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"font-weight\");","result":"\"bold\""}],"tests":[],"name":"css"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set a key/value object as style properties to all matched elements.\n\nThis serves as the best way to set a large number of style properties\non all matched elements.","params":[{"type":"Map","desc":"Key/value pairs to set as style properties.","name":"properties"}],"short":"Set a key/value object as style properties to all matched elements.","examples":[{"desc":"Sets color and background styles to all p elements.","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css({ color: \"red\", background: \"blue\" });","result":"&lt;p style=\"color:red; background:blue;\"&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"css"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set a single style property to a value, on all matched elements.\nIf a number is provided, it is automatically converted into a pixel value.","params":[{"type":"String","desc":"The name of the property to set.","name":"key"},{"type":"String|Number","desc":"The value to set the property to.","name":"value"}],"short":"Set a single style property to a value, on all matched elements.","examples":[{"desc":"Changes the color of all paragraphs to red","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"color\",\"red\");","result":"&lt;p style=\"color:red;\"&gt;Test Paragraph.&lt;/p&gt;"},{"desc":"Changes the left of all paragraphs to \"30px\"","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").css(\"left\",30);","result":"&lt;p style=\"left:30px;\"&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"css"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the text contents of all matched elements. The result is\na string that contains the combined text contents of all matched\nelements. This method works on both HTML and XML documents.","params":[],"short":"Get the text contents of all matched elements.","examples":[{"desc":"Gets the concatenated text of all paragraphs","before":"&lt;p&gt;&lt;b&gt;Test&lt;/b&gt; Paragraph.&lt;/p&gt;&lt;p&gt;Paraparagraph&lt;/p&gt;","code":"$(\"p\").text();","result":"Test Paragraph.Paraparagraph"}],"tests":[],"name":"text"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Set the text contents of all matched elements.\n\nSimilar to html(), but escapes HTML (replace \"&lt;\" and \"&gt;\" with their\nHTML entities).","params":[{"type":"String","desc":"The text value to set the contents of the element to.","name":"val"}],"short":"Set the text contents of all matched elements.","examples":[{"desc":"Sets the text of all paragraphs.","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").text(\"&lt;b&gt;Some&lt;/b&gt; new text.\");","result":"&lt;p&gt;&amp;lt;b&amp;gt;Some&amp;lt;/b&amp;gt; new text.&lt;/p&gt;"},{"desc":"Sets the text of all paragraphs.","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;","code":"$(\"p\").text(\"&lt;b&gt;Some&lt;/b&gt; new text.\", true);","result":"&lt;p&gt;Some new text.&lt;/p&gt;"}],"tests":[],"name":"text"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Wrap all matched elements with a structure of other elements.\nThis wrapping process is most useful for injecting additional\nstucture into a document, without ruining the original semantic\nqualities of a document.\n\nThis works by going through the first element\nprovided (which is generated, on the fly, from the provided HTML)\nand finds the deepest ancestor element within its\nstructure - it is that element that will en-wrap everything else.\n\nThis does not work with elements that contain text. Any necessary text\nmust be added after the wrapping is done.","params":[{"type":"String","desc":"A string of HTML, that will be created on the fly and wrapped around the target.","name":"html"}],"short":"Wrap all matched elements with a structure of other elements.","examples":[{"code":"$(\"p\").wrap(\"&lt;div class='wrap'&gt;&lt;/div&gt;\");","result":"&lt;div class='wrap'&gt;&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;"}],"tests":[],"name":"wrap"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Wrap all matched elements with a structure of other elements.\nThis wrapping process is most useful for injecting additional\nstucture into a document, without ruining the original semantic\nqualities of a document.\n\nThis works by going through the first element\nprovided and finding the deepest ancestor element within its\nstructure - it is that element that will en-wrap everything else.\n\nThis does not work with elements that contain text. Any necessary text\nmust be added after the wrapping is done.","params":[{"type":"Element","desc":"A DOM element that will be wrapped around the target.","name":"elem"}],"short":"Wrap all matched elements with a structure of other elements.","examples":[{"code":"$(\"p\").wrap( document.getElementById('content') );","result":"&lt;div id=\"content\"&gt;&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;/div&gt;","before":"&lt;p&gt;Test Paragraph.&lt;/p&gt;&lt;div id=\"content\"&gt;&lt;/div&gt;"}],"tests":[],"name":"wrap"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Append content to the inside of every matched element.\n\nThis operation is similar to doing an appendChild to all the\nspecified elements, adding them into the document.","see":["prepend(&lt;Content&gt;)","before(&lt;Content&gt;)","after(&lt;Content&gt;)"],"params":[{"type":"&lt;Content&gt;","desc":"Content to append to the target","name":"content"}],"short":"Append content to the inside of every matched element.","examples":[{"desc":"Appends some HTML to all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").append(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;I would like to say: &lt;b&gt;Hello&lt;/b&gt;&lt;/p&gt;"},{"desc":"Appends an Element to all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;","code":"$(\"p\").append( $(\"#foo\")[0] );","result":"&lt;p&gt;I would like to say: &lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;/p&gt;"},{"desc":"Appends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","code":"$(\"p\").append( $(\"b\") );","result":"&lt;p&gt;I would like to say: &lt;b&gt;Hello&lt;/b&gt;&lt;/p&gt;"}],"tests":[],"name":"append"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Prepend content to the inside of every matched element.\n\nThis operation is the best way to insert elements\ninside, at the beginning, of all matched elements.","see":["append(&lt;Content&gt;)","before(&lt;Content&gt;)","after(&lt;Content&gt;)"],"params":[{"type":"&lt;Content&gt;","desc":"Content to prepend to the target.","name":"content"}],"short":"Prepend content to the inside of every matched element.","examples":[{"desc":"Prepends some HTML to all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").prepend(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;"},{"desc":"Prepends an Element to all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;","code":"$(\"p\").prepend( $(\"#foo\")[0] );","result":"&lt;p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;"},{"desc":"Prepends a jQuery object (similar to an Array of DOM Elements) to all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","code":"$(\"p\").prepend( $(\"b\") );","result":"&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"prepend"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert content before each of the matched elements.","see":["append(&lt;Content&gt;)","prepend(&lt;Content&gt;)","after(&lt;Content&gt;)"],"params":[{"type":"&lt;Content&gt;","desc":"Content to insert before each target.","name":"content"}],"short":"Insert content before each of the matched elements.","examples":[{"desc":"Inserts some HTML before all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").before(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"},{"desc":"Inserts an Element before all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;","code":"$(\"p\").before( $(\"#foo\")[0] );","result":"&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"},{"desc":"Inserts a jQuery object (similar to an Array of DOM Elements) before all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;","code":"$(\"p\").before( $(\"b\") );","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"before"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert content after each of the matched elements.","see":["append(&lt;Content&gt;)","prepend(&lt;Content&gt;)","before(&lt;Content&gt;)"],"params":[{"type":"&lt;Content&gt;","desc":"Content to insert after each target.","name":"content"}],"short":"Insert content after each of the matched elements.","examples":[{"desc":"Inserts some HTML after all paragraphs.","before":"&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").after(\"&lt;b&gt;Hello&lt;/b&gt;\");","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"},{"desc":"Inserts an Element after all paragraphs.","before":"&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").after( $(\"#foo\")[0] );","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b id=\"foo\"&gt;Hello&lt;/b&gt;"},{"desc":"Inserts a jQuery object (similar to an Array of DOM Elements) after all paragraphs.","before":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").after( $(\"b\") );","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;"}],"tests":[],"name":"after"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"End the most recent 'destructive' operation, reverting the list of matched elements\nback to its previous state. After an end operation, the list of matched elements will\nrevert to the last state of matched elements.\n\nIf there was no destructive operation before, an empty set is returned.","params":[],"short":"End the most recent 'destructive' operation, reverting the list of matched elements\nback to its previous state.","examples":[{"desc":"Selects all paragraphs, finds span elements inside these, and reverts the\nselection back to the paragraphs.","before":"&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;, how are you?&lt;/p&gt;","code":"$(\"p\").find(\"span\").end();","result":"[ &lt;p&gt;...&lt;/p&gt; ]"}],"tests":[],"name":"end"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Searches for all elements that match the specified expression.\nThis method is a good way to find additional descendant\nelements with which to process.\n\nAll searching is done using a jQuery expression. The expression can be\nwritten using CSS 1-3 Selector syntax, or basic XPath.","params":[{"type":"String","desc":"An expression to search with.","name":"expr"}],"short":"Searches for all elements that match the specified expression.","examples":[{"desc":"Starts with all paragraphs and searches for descendant span\nelements, same as $(\"p span\")","before":"&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;, how are you?&lt;/p&gt;","code":"$(\"p\").find(\"span\");","result":"[ &lt;span&gt;Hello&lt;/span&gt; ]"}],"tests":[],"name":"find"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Clone matched DOM Elements and select the clones. \n\nThis is useful for moving copies of the elements to another\nlocation in the DOM.","params":[{"type":"Boolean","desc":"(Optional) Set to false if you don't want to clone all descendant nodes, in addition to the element itself.","name":"deep"}],"short":"Clone matched DOM Elements and select the clones.","examples":[{"desc":"Clones all b elements (and selects the clones) and prepends them to all paragraphs.","before":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;, how are you?&lt;/p&gt;","code":"$(\"b\").clone().prependTo(\"p\");","result":"&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;, how are you?&lt;/p&gt;"}],"tests":[],"name":"clone"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes all elements from the set of matched elements that do not\nmatch the specified expression(s). This method is used to narrow down\nthe results of a search.\n\nProvide a comma-separated list of expressions to apply multiple filters at once.","params":[{"type":"String","desc":"Expression(s) to search with.","name":"expression"}],"short":"Removes all elements from the set of matched elements that do not\nmatch the specified expression(s).","examples":[{"desc":"Selects all paragraphs and removes those without a class \"selected\".","before":"&lt;p class=\"selected\"&gt;Hello&lt;/p&gt;&lt;p&gt;How are you?&lt;/p&gt;","code":"$(\"p\").filter(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt; ]"},{"desc":"Selects all paragraphs and removes those without class \"selected\" and being the first one.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;p class=\"selected\"&gt;And Again&lt;/p&gt;","code":"$(\"p\").filter(\".selected, :first\")","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;p class=\"selected\"&gt;And Again&lt;/p&gt; ]"}],"tests":[],"name":"filter"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes all elements from the set of matched elements that do not\npass the specified filter. This method is used to narrow down\nthe results of a search.","params":[{"type":"Function","desc":"A function to use for filtering","name":"filter"}],"short":"Removes all elements from the set of matched elements that do not\npass the specified filter.","examples":[{"desc":"Remove all elements that have a child ol element","before":"&lt;p&gt;&lt;ol&gt;&lt;li&gt;Hello&lt;/li&gt;&lt;/ol&gt;&lt;/p&gt;&lt;p&gt;How are you?&lt;/p&gt;","code":"$(\"p\").filter(function(index) {\n  return $(\"ol\", this).length == 0;\n})","result":"[ &lt;p&gt;How are you?&lt;/p&gt; ]"}],"tests":[],"name":"filter"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes the specified Element from the set of matched elements. This\nmethod is used to remove a single Element from a jQuery object.","params":[{"type":"Element","desc":"An element to remove from the set","name":"el"}],"short":"Removes the specified Element from the set of matched elements.","examples":[{"desc":"Removes the element with the ID \"selected\" from the set of all paragraphs.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p id=\"selected\"&gt;Hello Again&lt;/p&gt;","code":"$(\"p\").not( $(\"#selected\")[0] )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]"}],"tests":[],"name":"not"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes elements matching the specified expression from the set\nof matched elements. This method is used to remove one or more\nelements from a jQuery object.","params":[{"type":"String","desc":"An expression with which to remove matching elements","name":"expr"}],"short":"Removes elements matching the specified expression from the set\nof matched elements.","examples":[{"desc":"Removes the element with the ID \"selected\" from the set of all paragraphs.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p id=\"selected\"&gt;Hello Again&lt;/p&gt;","code":"$(\"p\").not(\"#selected\")","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]"}],"tests":[],"name":"not"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Removes any elements inside the array of elements from the set\nof matched elements. This method is used to remove one or more\nelements from a jQuery object.","params":[{"type":"jQuery","desc":"A set of elements to remove from the jQuery set of matched elements.","name":"elems"}],"short":"Removes any elements inside the array of elements from the set\nof matched elements.","examples":[{"desc":"Removes all elements that match \"div p.selected\" from the total set of all paragraphs.","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;/div&gt;","code":"$(\"p\").not( $(\"div p.selected\") )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]"}],"tests":[],"name":"not"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Adds more elements, matched by the given expression,\nto the set of matched elements.","params":[{"type":"String","desc":"An expression whose matched elements are added","name":"expr"}],"short":"Adds more elements, matched by the given expression,\nto the set of matched elements.","examples":[{"code":"$(\"p\").add(\"span\")","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;"}],"tests":[],"name":"add"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Adds more elements, created on the fly, to the set of\nmatched elements.","params":[{"type":"String","desc":"A string of HTML to create on the fly.","name":"html"}],"short":"Adds more elements, created on the fly, to the set of\nmatched elements.","examples":[{"code":"$(\"p\").add(\"&lt;span&gt;Again&lt;/span&gt;\")","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span&gt;Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"add"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Adds one or more Elements to the set of matched elements.","params":[{"type":"Element|Array&lt;Element&gt;","desc":"One or more Elements to add","name":"elements"}],"short":"Adds one or more Elements to the set of matched elements.","examples":[{"code":"$(\"p\").add( document.getElementById(\"a\") )","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;span id=\"a\"&gt;Hello Again&lt;/span&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;span id=\"a\"&gt;Hello Again&lt;/span&gt;&lt;/p&gt;"},{"code":"$(\"p\").add( document.forms[0].elements )","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;input/&gt;, &lt;button/&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;&lt;form&gt;&lt;input/&gt;&lt;button/&gt;&lt;/form&gt;"}],"tests":[],"name":"add"},{"options":[],"cat":"DOM/Traversing","type":"Boolean","desc":"Checks the current selection against an expression and returns true,\nif at least one element of the selection fits the given expression.\n\nDoes return false, if no element fits or the expression is not valid.\n\nfilter(String) is used internally, therefore all rules that apply there\napply here, too.","params":[{"type":"String","desc":"The expression with which to filter","name":"expr"}],"short":"Checks the current selection against an expression and returns true,\nif at least one element of the selection fits the given expression.","examples":[{"desc":"Returns true, because the parent of the input is a form element","before":"&lt;form&gt;&lt;input type=\"checkbox\" /&gt;&lt;/form&gt;","code":"$(\"input[@type='checkbox']\").parent().is(\"form\")","result":"true"},{"desc":"Returns false, because the parent of the input is a p element","before":"&lt;form&gt;&lt;p&gt;&lt;input type=\"checkbox\" /&gt;&lt;/p&gt;&lt;/form&gt;","code":"$(\"input[@type='checkbox']\").parent().is(\"form\")","result":"false"}],"tests":[],"name":"is"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the current value of the first matched element.","params":[],"short":"Get the current value of the first matched element.","examples":[{"code":"$(\"input\").val();","result":"\"some text\"","before":"&lt;input type=\"text\" value=\"some text\"/&gt;"}],"tests":[],"name":"val"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the value of every matched element.","params":[{"type":"String","desc":"Set the property to the specified value.","name":"val"}],"short":"Set the value of every matched element.","examples":[{"code":"$(\"input\").val(\"test\");","result":"&lt;input type=\"text\" value=\"test\"/&gt;","before":"&lt;input type=\"text\" value=\"some text\"/&gt;"}],"tests":[],"name":"val"},{"options":[],"cat":"DOM/Attributes","type":"String","desc":"Get the html contents of the first matched element.\nThis property is not available on XML documents.","params":[],"short":"Get the html contents of the first matched element.","examples":[{"code":"$(\"div\").html();","result":"&lt;input/&gt;","before":"&lt;div&gt;&lt;input/&gt;&lt;/div&gt;"}],"tests":[],"name":"html"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Set the html contents of every matched element.\nThis property is not available on XML documents.","params":[{"type":"String","desc":"Set the html contents to the specified value.","name":"val"}],"short":"Set the html contents of every matched element.","examples":[{"code":"$(\"div\").html(\"&lt;b&gt;new stuff&lt;/b&gt;\");","result":"&lt;div&gt;&lt;b&gt;new stuff&lt;/b&gt;&lt;/div&gt;","before":"&lt;div&gt;&lt;input/&gt;&lt;/div&gt;"}],"tests":[],"name":"html"},{"options":[],"cat":"Core","type":"jQuery","desc":"","params":[{"type":"Array","desc":"","name":"args"},{"type":"Boolean","desc":"Insert TBODY in TABLEs if one is not found.","name":"table"},{"type":"Number","desc":"If dir&lt;0, process args in reverse order.","name":"dir"},{"type":"Function","desc":"The function doing the DOM manipulation.","name":"fn"}],"short":"","examples":[],"tests":[],"name":"domManip","private":1},{"options":[],"cat":"Core","type":"Object","desc":"Extends the jQuery object itself. Can be used to add functions into\nthe jQuery namespace and to add plugin methods (plugins).","params":[{"type":"Object","desc":"The object that will be merged into the jQuery object","name":"prop"}],"short":"Extends the jQuery object itself.","examples":[{"desc":"Adds two plugin methods.","code":"jQuery.fn.extend({\n  check: function() {\n    return this.each(function() { this.checked = true; });\n  },\n  uncheck: function() {\n    return this.each(function() { this.checked = false; });\n  }\n});\n$(\"input[@type=checkbox]\").check();\n$(\"input[@type=radio]\").uncheck();"},{"desc":"Adds two functions into the jQuery namespace","code":"jQuery.extend({\n  min: function(a, b) { return a &lt; b ? a : b; },\n  max: function(a, b) { return a &gt; b ? a : b; }\n});"}],"tests":[],"name":"$.extend"},{"options":[],"cat":"JavaScript","type":"Object","desc":"Extend one object with one or more others, returning the original,\nmodified, object. This is a great utility for simple inheritance.","params":[{"type":"Object","desc":"The object to extend","name":"target"},{"type":"Object","desc":"The object that will be merged into the first.","name":"prop1"},{"type":"Object","desc":"(optional) More objects to merge into the first","name":"propN"}],"short":"Extend one object with one or more others, returning the original,\nmodified, object.","examples":[{"desc":"Merge settings and options, modifying settings","code":"var settings = { validate: false, limit: 5, name: \"foo\" };\nvar options = { validate: true, name: \"bar\" };\njQuery.extend(settings, options);","result":"settings == { validate: true, limit: 5, name: \"bar\" }"},{"desc":"Merge defaults and options, without modifying the defaults","code":"var defaults = { validate: false, limit: 5, name: \"foo\" };\nvar options = { validate: true, name: \"bar\" };\nvar settings = jQuery.extend({}, defaults, options);","result":"settings == { validate: true, limit: 5, name: \"bar\" }"}],"tests":[],"name":"$.extend"},{"options":[],"cat":"Core","type":"undefined","desc":"Run this function to give control of the $ variable back\nto whichever library first implemented it. This helps to make \nsure that jQuery doesn't conflict with the $ object\nof other libraries.\n\nBy using this function, you will only be able to access jQuery\nusing the 'jQuery' variable. For example, where you used to do\n$(\"div p\"), you now must do jQuery(\"div p\").","params":[],"short":"Run this function to give control of the $ variable back\nto whichever library first implemented it.","examples":[{"desc":"Maps the original object that was referenced by $ back to $","code":"jQuery.noConflict();\n// Do something with jQuery\njQuery(\"div p\").hide();\n// Do something with another library's $()\n$(\"content\").style.display = 'none';"},{"desc":"Reverts the $ alias and then creates and executes a\nfunction to provide the $ as a jQuery alias inside the functions\nscope. Inside the function the original $ object is not available.\nThis works well for most plugins that don't rely on any other library.","code":"jQuery.noConflict();\n(function($) { \n  $(function() {\n    // more code using $ as alias to jQuery\n  });\n})(jQuery);\n// other code using $ as an alias to the other library"}],"tests":[],"name":"$.noConflict"},{"options":[],"cat":"JavaScript","type":"Object","desc":"A generic iterator function, which can be used to seemlessly\niterate over both objects and arrays. This function is not the same\nas $().each() - which is used to iterate, exclusively, over a jQuery\nobject. This function can be used to iterate over anything.\n\nThe callback has two arguments:the key (objects) or index (arrays) as first\nthe first, and the value as the second.","params":[{"type":"Object","desc":"The object, or array, to iterate over.","name":"obj"},{"type":"Function","desc":"The function that will be executed on every object.","name":"fn"}],"short":"A generic iterator function, which can be used to seemlessly\niterate over both objects and arrays.","examples":[{"desc":"This is an example of iterating over the items in an array,\naccessing both the current item and its index.","code":"$.each( [0,1,2], function(i, n){\n  alert( \"Item #\" + i + \": \" + n );\n});"},{"desc":"This is an example of iterating over the properties in an\nObject, accessing both the current item and its key.","code":"$.each( { name: \"John\", lang: \"JS\" }, function(i, n){\n  alert( \"Name: \" + i + \", Value: \" + n );\n});"}],"tests":[],"name":"$.each"},{"options":[],"cat":"JavaScript","type":"String","desc":"Remove the whitespace from the beginning and end of a string.","params":[{"type":"String","desc":"The string to trim.","name":"str"}],"short":"Remove the whitespace from the beginning and end of a string.","examples":[{"code":"$.trim(\"  hello, how are you?  \");","result":"\"hello, how are you?\""}],"tests":[],"name":"$.trim"},{"options":[],"cat":"JavaScript","type":"Array","desc":"Merge two arrays together, removing all duplicates.\n\nThe new array is: All the results from the first array, followed\nby the unique results from the second array.","params":[{"type":"Array","desc":"The first array to merge.","name":"first"},{"type":"Array","desc":"The second array to merge.","name":"second"}],"short":"Merge two arrays together, removing all duplicates.","examples":[{"desc":"Merges two arrays, removing the duplicate 2","code":"$.merge( [0,1,2], [2,3,4] )","result":"[0,1,2,3,4]"},{"desc":"Merges two arrays, removing the duplicates 3 and 2","code":"$.merge( [3,2,1], [4,3,2] )","result":"[3,2,1,4]"}],"tests":[],"name":"$.merge"},{"options":[],"cat":"JavaScript","type":"Array","desc":"Filter items out of an array, by using a filter function.\n\nThe specified function will be passed two arguments: The\ncurrent array item and the index of the item in the array. The\nfunction must return 'true' to keep the item in the array, \nfalse to remove it.","params":[{"type":"Array","desc":"The Array to find items in.","name":"array"},{"type":"Function","desc":"The function to process each item against.","name":"fn"},{"type":"Boolean","desc":"Invert the selection - select the opposite of the function.","name":"inv"}],"short":"Filter items out of an array, by using a filter function.","examples":[{"code":"$.grep( [0,1,2], function(i){\n  return i &gt; 0;\n});","result":"[1, 2]"}],"tests":[],"name":"$.grep"},{"options":[],"cat":"JavaScript","type":"Array","desc":"Translate all items in an array to another array of items.\n\nThe translation function that is provided to this method is \ncalled for each item in the array and is passed one argument: \nThe item to be translated.\n\nThe function can then return the translated value, 'null'\n(to remove the item), or  an array of values - which will\nbe flattened into the full array.","params":[{"type":"Array","desc":"The Array to translate.","name":"array"},{"type":"Function","desc":"The function to process each item against.","name":"fn"}],"short":"Translate all items in an array to another array of items.","examples":[{"desc":"Maps the original array to a new one and adds 4 to each value.","code":"$.map( [0,1,2], function(i){\n  return i + 4;\n});","result":"[4, 5, 6]"},{"desc":"Maps the original array to a new one and adds 1 to each\nvalue if it is bigger then zero, otherwise it's removed-","code":"$.map( [0,1,2], function(i){\n  return i &gt; 0 ? i + 1 : null;\n});","result":"[2, 3]"},{"desc":"Maps the original array to a new one, each element is added\nwith it's original value and the value plus one.","code":"$.map( [0,1,2], function(i){\n  return [ i, i + 1 ];\n});","result":"[0, 1, 1, 2, 2, 3]"}],"tests":[],"name":"$.map"},{"options":[],"property":1,"cat":"JavaScript","type":"Boolean","desc":"Contains flags for the useragent, read from navigator.userAgent.\nAvailable flags are: safari, opera, msie, mozilla\n\nThis property is available before the DOM is ready, therefore you can\nuse it to add ready events only for certain browsers.\n\nThere are situations where object detections is not reliable enough, in that\ncases it makes sense to use browser detection. Simply try to avoid both!\n\nA combination of browser and object detection yields quite reliable results.","params":[],"short":"Contains flags for the useragent, read from navigator.","examples":[{"desc":"Returns true if the current useragent is some version of microsoft's internet explorer","code":"$.browser.msie"},{"desc":"Alerts \"this is safari!\" only for safari browsers","code":"if($.browser.safari) { $( function() { alert(\"this is safari!\"); } ); }"}],"tests":[],"name":"$.browser"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique parents of the matched\nset of elements.\n\nCan be filtered with an optional expressions.","params":[{"type":"String","desc":"(optional) An expression to filter the parents with","name":"expr"}],"short":"Get a set of elements containing the unique parents of the matched\nset of elements.","examples":[{"desc":"Find the parent element of each paragraph.","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;","code":"$(\"p\").parent()","result":"[ &lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt; ]"},{"desc":"Find the parent element of each paragraph with a class \"selected\".","before":"&lt;div&gt;&lt;p&gt;Hello&lt;/p&gt;&lt;/div&gt;&lt;div class=\"selected\"&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;/div&gt;","code":"$(\"p\").parent(\".selected\")","result":"[ &lt;div class=\"selected\"&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;/div&gt; ]"}],"tests":[],"name":"parent"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).\n\nCan be filtered with an optional expressions.","params":[{"type":"String","desc":"(optional) An expression to filter the ancestors with","name":"expr"}],"short":"Get a set of elements containing the unique ancestors of the matched\nset of elements (except for the root element).","examples":[{"desc":"Find all parent elements of each span.","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","code":"$(\"span\").parents()","result":"[ &lt;body&gt;...&lt;/body&gt;, &lt;div&gt;...&lt;/div&gt;, &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]"},{"desc":"Find all parent elements of each span that is a paragraph.","before":"&lt;html&gt;&lt;body&gt;&lt;div&gt;&lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;/body&gt;&lt;/html&gt;","code":"$(\"span\").parents(\"p\")","result":"[ &lt;p&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/p&gt; ]"}],"tests":[],"name":"parents"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements.\n\nIt only returns the very next sibling, not all next siblings.\n\nCan be filtered with an optional expressions.","params":[{"type":"String","desc":"(optional) An expression to filter the next Elements with","name":"expr"}],"short":"Get a set of elements containing the unique next siblings of each of the\nmatched set of elements.","examples":[{"desc":"Find the very next sibling of each paragraph.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p&gt;Hello Again&lt;/p&gt;&lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;","code":"$(\"p\").next()","result":"[ &lt;p&gt;Hello Again&lt;/p&gt;, &lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt; ]"},{"desc":"Find the very next sibling of each paragraph that has a class \"selected\".","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;div&gt;&lt;span&gt;And Again&lt;/span&gt;&lt;/div&gt;","code":"$(\"p\").next(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]"}],"tests":[],"name":"next"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements.\n\nCan be filtered with an optional expressions.\n\nIt only returns the immediately previous sibling, not all previous siblings.","params":[{"type":"String","desc":"(optional) An expression to filter the previous Elements with","name":"expr"}],"short":"Get a set of elements containing the unique previous siblings of each of the\nmatched set of elements.","examples":[{"desc":"Find the very previous sibling of each paragraph.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;","code":"$(\"p\").prev()","result":"[ &lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt; ]"},{"desc":"Find the very previous sibling of each paragraph that has a class \"selected\".","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;","code":"$(\"p\").prev(\".selected\")","result":"[ &lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt; ]"}],"tests":[],"name":"prev"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements.\n\nCan be filtered with an optional expressions.","params":[{"type":"String","desc":"(optional) An expression to filter the sibling Elements with","name":"expr"}],"short":"Get a set of elements containing all of the unique siblings of each of the\nmatched set of elements.","examples":[{"desc":"Find all siblings of each div.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;","code":"$(\"div\").siblings()","result":"[ &lt;p&gt;Hello&lt;/p&gt;, &lt;p&gt;And Again&lt;/p&gt; ]"},{"desc":"Find all siblings with a class \"selected\" of each div.","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;/div&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;","code":"$(\"div\").siblings(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]"}],"tests":[],"name":"siblings"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements.\n\nCan be filtered with an optional expressions.","params":[{"type":"String","desc":"(optional) An expression to filter the child Elements with","name":"expr"}],"short":"Get a set of elements containing all of the unique children of each of the\nmatched set of elements.","examples":[{"desc":"Find all children of each div.","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;div&gt;&lt;span&gt;Hello Again&lt;/span&gt;&lt;/div&gt;&lt;p&gt;And Again&lt;/p&gt;","code":"$(\"div\").children()","result":"[ &lt;span&gt;Hello Again&lt;/span&gt; ]"},{"desc":"Find all children with a class \"selected\" of each div.","before":"&lt;div&gt;&lt;span&gt;Hello&lt;/span&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;&lt;p&gt;And Again&lt;/p&gt;&lt;/div&gt;","code":"$(\"div\").children(\".selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt; ]"}],"tests":[],"name":"children"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Append all of the matched elements to another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).append(B), in that instead of appending B to A, you're appending\nA to B.","see":"append(&lt;Content&gt;)","params":[{"type":"&lt;Content&gt;","desc":"Content to append to the selected element to.","name":"content"}],"short":"Append all of the matched elements to another, specified, set of elements.","examples":[{"desc":"Appends all paragraphs to the element with the ID \"foo\"","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;&lt;/div&gt;","code":"$(\"p\").appendTo(\"#foo\");","result":"&lt;div id=\"foo\"&gt;&lt;p&gt;I would like to say: &lt;/p&gt;&lt;/div&gt;"}],"tests":[],"name":"appendTo"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Prepend all of the matched elements to another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).prepend(B), in that instead of prepending B to A, you're prepending\nA to B.","see":"prepend(&lt;Content&gt;)","params":[{"type":"&lt;Content&gt;","desc":"Content to prepend to the selected element to.","name":"content"}],"short":"Prepend all of the matched elements to another, specified, set of elements.","examples":[{"desc":"Prepends all paragraphs to the element with the ID \"foo\"","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/div&gt;","code":"$(\"p\").prependTo(\"#foo\");","result":"&lt;div id=\"foo\"&gt;&lt;p&gt;I would like to say: &lt;/p&gt;&lt;b&gt;Hello&lt;/b&gt;&lt;/div&gt;"}],"tests":[],"name":"prependTo"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert all of the matched elements before another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).before(B), in that instead of inserting B before A, you're inserting\nA before B.","see":"before(&lt;Content&gt;)","params":[{"type":"&lt;Content&gt;","desc":"Content to insert the selected element before.","name":"content"}],"short":"Insert all of the matched elements before another, specified, set of elements.","examples":[{"desc":"Same as $(\"#foo\").before(\"p\")","before":"&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;&lt;p&gt;I would like to say: &lt;/p&gt;","code":"$(\"p\").insertBefore(\"#foo\");","result":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;"}],"tests":[],"name":"insertBefore"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Insert all of the matched elements after another, specified, set of elements.\nThis operation is, essentially, the reverse of doing a regular\n$(A).after(B), in that instead of inserting B after A, you're inserting\nA after B.","see":"after(&lt;Content&gt;)","params":[{"type":"&lt;Content&gt;","desc":"Content to insert the selected element after.","name":"content"}],"short":"Insert all of the matched elements after another, specified, set of elements.","examples":[{"desc":"Same as $(\"#foo\").after(\"p\")","before":"&lt;p&gt;I would like to say: &lt;/p&gt;&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;","code":"$(\"p\").insertAfter(\"#foo\");","result":"&lt;div id=\"foo\"&gt;Hello&lt;/div&gt;&lt;p&gt;I would like to say: &lt;/p&gt;"}],"tests":[],"name":"insertAfter"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Remove an attribute from each of the matched elements.","params":[{"type":"String","desc":"The name of the attribute to remove.","name":"name"}],"short":"Remove an attribute from each of the matched elements.","examples":[{"code":"$(\"input\").removeAttr(\"disabled\")","result":"&lt;input/&gt;","before":"&lt;input disabled=\"disabled\"/&gt;"}],"tests":[],"name":"removeAttr"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Adds the specified class(es) to each of the set of matched elements.","see":"removeClass(String)","params":[{"type":"String","desc":"One or more CSS classes to add to the elements","name":"class"}],"short":"Adds the specified class(es) to each of the set of matched elements.","examples":[{"code":"$(\"p\").addClass(\"selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;"},{"code":"$(\"p\").addClass(\"selected highlight\")","result":"[ &lt;p class=\"selected highlight\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"addClass"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Removes all or the specified class(es) from the set of matched elements.","see":"addClass(String)","params":[{"type":"String","desc":"(optional) One or more CSS classes to remove from the elements","name":"class"}],"short":"Removes all or the specified class(es) from the set of matched elements.","examples":[{"code":"$(\"p\").removeClass()","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"selected\"&gt;Hello&lt;/p&gt;"},{"code":"$(\"p\").removeClass(\"selected\")","result":"[ &lt;p class=\"first\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"selected first\"&gt;Hello&lt;/p&gt;"},{"code":"$(\"p\").removeClass(\"selected highlight\")","result":"[ &lt;p class=\"first\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p class=\"highlight selected first\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"removeClass"},{"options":[],"cat":"DOM/Attributes","type":"jQuery","desc":"Adds the specified class if it is not present, removes it if it is\npresent.","params":[{"type":"String","desc":"A CSS class with which to toggle the elements","name":"class"}],"short":"Adds the specified class if it is not present, removes it if it is\npresent.","examples":[{"code":"$(\"p\").toggleClass(\"selected\")","result":"[ &lt;p class=\"selected\"&gt;Hello&lt;/p&gt;, &lt;p&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p class=\"selected\"&gt;Hello Again&lt;/p&gt;"}],"tests":[],"name":"toggleClass"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Removes all matched elements from the DOM. This does NOT remove them from the\njQuery object, allowing you to use the matched elements further.\n\nCan be filtered with an optional expressions.","params":[{"type":"String","desc":"(optional) A jQuery expression to filter elements by.","name":"expr"}],"short":"Removes all matched elements from the DOM.","examples":[{"code":"$(\"p\").remove();","result":"how are","before":"&lt;p&gt;Hello&lt;/p&gt; how are &lt;p&gt;you?&lt;/p&gt;"},{"code":"$(\"p\").remove(\".hello\");","result":"how are &lt;p&gt;you?&lt;/p&gt;","before":"&lt;p class=\"hello\"&gt;Hello&lt;/p&gt; how are &lt;p&gt;you?&lt;/p&gt;"}],"tests":[],"name":"remove"},{"options":[],"cat":"DOM/Manipulation","type":"jQuery","desc":"Removes all child nodes from the set of matched elements.","params":[],"short":"Removes all child nodes from the set of matched elements.","examples":[{"code":"$(\"p\").empty()","result":"[ &lt;p&gt;&lt;/p&gt; ]","before":"&lt;p&gt;Hello, &lt;span&gt;Person&lt;/span&gt; &lt;a href=\"#\"&gt;and person&lt;/a&gt;&lt;/p&gt;"}],"tests":[],"name":"empty"},{"options":[],"cat":"Core","type":"jQuery","desc":"Reduce the set of matched elements to a single element.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","params":[{"type":"Number","desc":"The index of the element that you wish to limit to.","name":"pos"}],"short":"Reduce the set of matched elements to a single element.","examples":[{"code":"$(\"p\").eq(1)","result":"[ &lt;p&gt;So is this&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"eq"},{"options":[],"cat":"Core","type":"jQuery","desc":"Reduce the set of matched elements to all elements before a given position.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","params":[{"type":"Number","desc":"Reduce the set to all elements below this position.","name":"pos"}],"short":"Reduce the set of matched elements to all elements before a given position.","examples":[{"code":"$(\"p\").lt(1)","result":"[ &lt;p&gt;This is just a test.&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"lt"},{"options":[],"cat":"Core","type":"jQuery","desc":"Reduce the set of matched elements to all elements after a given position.\nThe position of the element in the set of matched elements\nstarts at 0 and goes to length - 1.","params":[{"type":"Number","desc":"Reduce the set to all elements after this position.","name":"pos"}],"short":"Reduce the set of matched elements to all elements after a given position.","examples":[{"code":"$(\"p\").gt(0)","result":"[ &lt;p&gt;So is this&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"gt"},{"options":[],"cat":"DOM/Traversing","type":"jQuery","desc":"Filter the set of elements to those that contain the specified text.","params":[{"type":"String","desc":"The string that will be contained within the text of an element.","name":"str"}],"short":"Filter the set of elements to those that contain the specified text.","examples":[{"code":"$(\"p\").contains(\"test\")","result":"[ &lt;p&gt;This is just a test.&lt;/p&gt; ]","before":"&lt;p&gt;This is just a test.&lt;/p&gt;&lt;p&gt;So is this&lt;/p&gt;"}],"tests":[],"name":"contains"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current computed, pixel, width of the first matched element.","params":[],"short":"Get the current computed, pixel, width of the first matched element.","examples":[{"code":"$(\"p\").width();","result":"300","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"width"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS width of every matched element. If no explicit unit\nwas specified (like 'em' or '%') then \"px\" is added to the width.","params":[{"type":"String|Number","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS width of every matched element.","examples":[{"code":"$(\"p\").width(20);","result":"&lt;p style=\"width:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"},{"code":"$(\"p\").width(\"20em\");","result":"&lt;p style=\"width:20em;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"width"},{"options":[],"cat":"CSS","type":"String","desc":"Get the current computed, pixel, height of the first matched element.","params":[],"short":"Get the current computed, pixel, height of the first matched element.","examples":[{"code":"$(\"p\").height();","result":"300","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"height"},{"options":[],"cat":"CSS","type":"jQuery","desc":"Set the CSS width of every matched element. If no explicit unit\nwas specified (like 'em' or '%') then \"px\" is added to the width.","params":[{"type":"String|Number","desc":"Set the CSS property to the specified value.","name":"val"}],"short":"Set the CSS width of every matched element.","examples":[{"code":"$(\"p\").height(20);","result":"&lt;p style=\"height:20px;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"},{"code":"$(\"p\").height(\"20em\");","result":"&lt;p style=\"height:20em;\"&gt;This is just a test.&lt;/p&gt;","before":"&lt;p&gt;This is just a test.&lt;/p&gt;"}],"tests":[],"name":"height"},{"options":[],"cat":"Core","type":"Array&lt;Element&gt;","desc":"","params":[],"short":"","examples":[],"tests":[],"private":1,"name":"$.find"},{"options":[],"cat":"DOM/Traversing","type":"Array&lt;Element&gt;","desc":"All ancestors of a given element.","params":[{"type":"Element","desc":"The element to find the ancestors of.","name":"elem"}],"short":"All ancestors of a given element.","examples":[],"tests":[],"name":"$.parents","private":1},{"options":[],"cat":"DOM/Traversing","type":"DOMElement","desc":"A handy, and fast, way to traverse in a particular direction and find\na specific element.","params":[{"type":"DOMElement","desc":"The element to search from.","name":"cur"},{"type":"String|Number","desc":"The Nth result to match. Can be a number or a string (like 'even' or 'odd').","name":"num"},{"type":"String","desc":"The direction to move in (pass in something like 'previousSibling' or 'nextSibling').","name":"dir"}],"short":"A handy, and fast, way to traverse in a particular direction and find\na specific element.","examples":[],"tests":[],"name":"$.nth","private":1},{"options":[],"cat":"DOM/Traversing","type":"Array","desc":"All elements on a specified axis.","params":[{"type":"Element","desc":"The element to find all the siblings of (including itself).","name":"elem"}],"short":"All elements on a specified axis.","examples":[],"tests":[],"name":"$.sibling","private":1},{"options":[],"cat":"Events","type":"jQuery","desc":"Binds a handler to a particular event (like click) for each matched element.\nThe event handler is passed an event object that you can use to prevent\ndefault behaviour. To stop both default action and event bubbling, your handler\nhas to return false.\n\nIn most cases, you can define your event handlers as anonymous functions\n(see first example). In cases where that is not possible, you can pass additional\ndata as the second paramter (and the handler function as the third), see \nsecond example.","params":[{"type":"String","desc":"An event type","name":"type"},{"type":"Object","desc":"(optional) Additional data passed to the event handler as event.data","name":"data"},{"type":"Function","desc":"A function to bind to the event on each of the set of matched elements","name":"fn"}],"short":"Binds a handler to a particular event (like click) for each matched element.","examples":[{"code":"$(\"p\").bind(\"click\", function(){\n  alert( $(this).text() );\n});","result":"alert(\"Hello\")","before":"&lt;p&gt;Hello&lt;/p&gt;"},{"desc":"Pass some additional data to the event handler.","code":"function handler(event) {\n  alert(event.data.foo);\n}\n$(\"p\").bind(\"click\", {foo: \"bar\"}, handler)","result":"alert(\"bar\")"},{"desc":"Cancel a default action and prevent it from bubbling by returning false\nfrom your function.","code":"$(\"form\").bind(\"submit\", function() { return false; })"},{"desc":"Cancel only the default action by using the preventDefault method.","code":"$(\"form\").bind(\"submit\", function(event){\n  event.preventDefault();\n});"},{"desc":"Stop only an event from bubbling by using the stopPropagation method.","code":"$(\"form\").bind(\"submit\", function(event){\n  event.stopPropagation();\n});"}],"tests":[],"name":"bind"},{"options":[],"cat":"Events","type":"jQuery","desc":"Binds a handler to a particular event (like click) for each matched element.\nThe handler is executed only once for each element. Otherwise, the same rules\nas described in bind() apply.\n\t The event handler is passed an event object that you can use to prevent\ndefault behaviour. To stop both default action and event bubbling, your handler\nhas to return false.\n\nIn most cases, you can define your event handlers as anonymous functions\n(see first example). In cases where that is not possible, you can pass additional\ndata as the second paramter (and the handler function as the third), see \nsecond example.","params":[{"type":"String","desc":"An event type","name":"type"},{"type":"Object","desc":"(optional) Additional data passed to the event handler as event.data","name":"data"},{"type":"Function","desc":"A function to bind to the event on each of the set of matched elements","name":"fn"}],"short":"Binds a handler to a particular event (like click) for each matched element.","examples":[{"code":"$(\"p\").one(\"click\", function(){\n  alert( $(this).text() );\n});","result":"alert(\"Hello\")","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"one"},{"options":[],"cat":"Events","type":"jQuery","desc":"The opposite of bind, removes a bound event from each of the matched\nelements.\n\nWithout any arguments, all bound events are removed.\n\nIf the type is provided, all bound events of that type are removed.\n\nIf the function that was passed to bind is provided as the second argument,\nonly that specific event handler is removed.","params":[{"type":"String","desc":"(optional) An event type","name":"type"},{"type":"Function","desc":"(optional) A function to unbind from the event on each of the set of matched elements","name":"fn"}],"short":"The opposite of bind, removes a bound event from each of the matched\nelements.","examples":[{"code":"$(\"p\").unbind()","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"},{"code":"$(\"p\").unbind( \"click\" )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"},{"code":"$(\"p\").unbind( \"click\", function() { alert(\"Hello\"); } )","result":"[ &lt;p&gt;Hello&lt;/p&gt; ]","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unbind"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger a type of event on every matched element.","params":[{"type":"String","desc":"An event type to trigger.","name":"type"}],"short":"Trigger a type of event on every matched element.","examples":[{"code":"$(\"p\").trigger(\"click\")","result":"alert('hello')","before":"&lt;p click=\"alert('hello')\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"trigger"},{"options":[],"cat":"Events","type":"jQuery","desc":"Toggle between two function calls every other click.\nWhenever a matched element is clicked, the first specified function \nis fired, when clicked again, the second is fired. All subsequent \nclicks continue to rotate through the two functions.\n\nUse unbind(\"click\") to remove.","params":[{"type":"Function","desc":"The function to execute on every even click.","name":"even"},{"type":"Function","desc":"The function to execute on every odd click.","name":"odd"}],"short":"Toggle between two function calls every other click.","examples":[{"code":"$(\"p\").toggle(function(){\n  $(this).addClass(\"selected\");\n},function(){\n  $(this).removeClass(\"selected\");\n});"}],"tests":[],"name":"toggle"},{"options":[],"cat":"Events","type":"jQuery","desc":"A method for simulating hovering (moving the mouse on, and off,\nan object). This is a custom method which provides an 'in' to a \nfrequent task.\n\nWhenever the mouse cursor is moved over a matched \nelement, the first specified function is fired. Whenever the mouse \nmoves off of the element, the second specified function fires. \nAdditionally, checks are in place to see if the mouse is still within \nthe specified element itself (for example, an image inside of a div), \nand if it is, it will continue to 'hover', and not move out \n(a common error in using a mouseout event handler).","params":[{"type":"Function","desc":"The function to fire whenever the mouse is moved over a matched element.","name":"over"},{"type":"Function","desc":"The function to fire whenever the mouse is moved off of a matched element.","name":"out"}],"short":"A method for simulating hovering (moving the mouse on, and off,\nan object).","examples":[{"code":"$(\"p\").hover(function(){\n  $(this).addClass(\"over\");\n},function(){\n  $(this).addClass(\"out\");\n});"}],"tests":[],"name":"hover"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to be executed whenever the DOM is ready to be\ntraversed and manipulated. This is probably the most important \nfunction included in the event module, as it can greatly improve\nthe response times of your web applications.\n\nIn a nutshell, this is a solid replacement for using window.onload, \nand attaching a function to that. By using this method, your bound Function \nwill be called the instant the DOM is ready to be read and manipulated, \nwhich is exactly what 99.99% of all Javascript code needs to run.\n\nThere is one argument passed to the ready event handler: A reference to\nthe jQuery function. You can name that argument whatever you like, and\ncan therefore stick with the $ alias without risc of naming collisions.\n\nPlease ensure you have no code in your &lt;body&gt; onload event handler, \notherwise $(document).ready() may not fire.\n\nYou can have as many $(document).ready events on your page as you like.\nThe functions are then executed in the order they were added.","see":["$.noConflict()","$(Function)"],"params":[{"type":"Function","desc":"The function to be executed when the DOM is ready.","name":"fn"}],"short":"Bind a function to be executed whenever the DOM is ready to be\ntraversed and manipulated.","examples":[{"code":"$(document).ready(function(){ Your code here... });"},{"desc":"Uses both the shortcut for $(document).ready() and the argument\nto write failsafe jQuery code using the $ alias, without relying on the\nglobal alias.","code":"jQuery(function($) {\n  // Your code using failsafe $ alias here...\n});"}],"tests":[],"name":"ready"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the scroll event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the scroll event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the scroll event of each matched element.","examples":[{"code":"$(\"p\").scroll( function() { alert(\"Hello\"); } );","result":"&lt;p onscroll=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"scroll"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the submit event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the submit event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the submit event of each matched element.","examples":[{"desc":"Prevents the form submission when the input has no value entered.","code":"$(\"#myform\").submit( function() {\n  return $(\"input\", this).val().length &gt; 0;\n} );","before":"&lt;form id=\"myform\"&gt;&lt;input /&gt;&lt;/form&gt;"}],"tests":[],"name":"submit"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger the submit event of each matched element. This causes all of the functions\nthat have been bound to thet submit event to be executed.\n\nNote: This does not execute the submit method of the form element! If you need to\nsubmit the form via code, you have to use the DOM method, eg. $(\"form\")[0].submit();","params":[],"short":"Trigger the submit event of each matched element.","examples":[{"desc":"Triggers all submit events registered for forms, but does not submit the form","code":"$(\"form\").submit();"}],"tests":[],"name":"submit"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the focus event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the focus event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the focus event of each matched element.","examples":[{"code":"$(\"p\").focus( function() { alert(\"Hello\"); } );","result":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"focus"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger the focus event of each matched element. This causes all of the functions\nthat have been bound to thet focus event to be executed.\n\nNote: This does not execute the focus method of the underlying elements! If you need to\nfocus an element via code, you have to use the DOM method, eg. $(\"#myinput\")[0].focus();","params":[],"short":"Trigger the focus event of each matched element.","examples":[{"code":"$(\"p\").focus();","result":"alert('Hello');","before":"&lt;p onfocus=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"focus"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the keydown event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keydown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keydown event of each matched element.","examples":[{"code":"$(\"p\").keydown( function() { alert(\"Hello\"); } );","result":"&lt;p onkeydown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keydown"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the dblclick event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the dblclick event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the dblclick event of each matched element.","examples":[{"code":"$(\"p\").dblclick( function() { alert(\"Hello\"); } );","result":"&lt;p ondblclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"dblclick"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the keypress event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keypress event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keypress event of each matched element.","examples":[{"code":"$(\"p\").keypress( function() { alert(\"Hello\"); } );","result":"&lt;p onkeypress=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keypress"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the error event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the error event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the error event of each matched element.","examples":[{"code":"$(\"p\").error( function() { alert(\"Hello\"); } );","result":"&lt;p onerror=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"error"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the blur event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the blur event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the blur event of each matched element.","examples":[{"code":"$(\"p\").blur( function() { alert(\"Hello\"); } );","result":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"blur"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger the blur event of each matched element. This causes all of the functions\nthat have been bound to thet blur event to be executed.\n\nNote: This does not execute the blur method of the underlying elements! If you need to\nblur an element via code, you have to use the DOM method, eg. $(\"#myinput\")[0].blur();","params":[],"short":"Trigger the blur event of each matched element.","examples":[{"code":"$(\"p\").blur();","result":"alert('Hello');","before":"&lt;p onblur=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"blur"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the load event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the load event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the load event of each matched element.","examples":[{"code":"$(\"p\").load( function() { alert(\"Hello\"); } );","result":"&lt;p onload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"load"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the select event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the select event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the select event of each matched element.","examples":[{"code":"$(\"p\").select( function() { alert(\"Hello\"); } );","result":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"select"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger the select event of each matched element. This causes all of the functions\nthat have been bound to thet select event to be executed.","params":[],"short":"Trigger the select event of each matched element.","examples":[{"code":"$(\"p\").select();","result":"alert('Hello');","before":"&lt;p onselect=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"select"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the mouseup event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mouseup event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseup event of each matched element.","examples":[{"code":"$(\"p\").mouseup( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseup"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the unload event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the unload event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the unload event of each matched element.","examples":[{"code":"$(\"p\").unload( function() { alert(\"Hello\"); } );","result":"&lt;p onunload=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"unload"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the change event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the change event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the change event of each matched element.","examples":[{"code":"$(\"p\").change( function() { alert(\"Hello\"); } );","result":"&lt;p onchange=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"change"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the mouseout event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mouseout event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseout event of each matched element.","examples":[{"code":"$(\"p\").mouseout( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseout=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseout"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the keyup event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the keyup event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the keyup event of each matched element.","examples":[{"code":"$(\"p\").keyup( function() { alert(\"Hello\"); } );","result":"&lt;p onkeyup=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"keyup"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the click event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the click event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the click event of each matched element.","examples":[{"code":"$(\"p\").click( function() { alert(\"Hello\"); } );","result":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"click"},{"options":[],"cat":"Events","type":"jQuery","desc":"Trigger the click event of each matched element. This causes all of the functions\nthat have been bound to thet click event to be executed.","params":[],"short":"Trigger the click event of each matched element.","examples":[{"code":"$(\"p\").click();","result":"alert('Hello');","before":"&lt;p onclick=\"alert('Hello');\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"click"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the resize event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the resize event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the resize event of each matched element.","examples":[{"code":"$(\"p\").resize( function() { alert(\"Hello\"); } );","result":"&lt;p onresize=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"resize"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the mousemove event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousemove event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mousemove event of each matched element.","examples":[{"code":"$(\"p\").mousemove( function() { alert(\"Hello\"); } );","result":"&lt;p onmousemove=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mousemove"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the mousedown event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mousedown event of each matched element.","examples":[{"code":"$(\"p\").mousedown( function() { alert(\"Hello\"); } );","result":"&lt;p onmousedown=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mousedown"},{"options":[],"cat":"Events","type":"jQuery","desc":"Bind a function to the mouseover event of each matched element.","params":[{"type":"Function","desc":"A function to bind to the mousedown event on each of the matched elements.","name":"fn"}],"short":"Bind a function to the mouseover event of each matched element.","examples":[{"code":"$(\"p\").mouseover( function() { alert(\"Hello\"); } );","result":"&lt;p onmouseover=\"alert('Hello');\"&gt;Hello&lt;/p&gt;","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"mouseover"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Displays each of the set of matched elements if they are hidden.","params":[],"short":"Displays each of the set of matched elements if they are hidden.","examples":[{"code":"$(\"p\").show()","result":"[ &lt;p style=\"display: block\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p style=\"display: none\"&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"show"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Show all matched elements using a graceful animation and firing an\noptional callback after completion.\n\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","see":"hide(String|Number,Function)","params":[{"type":"String|Number","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Show all matched elements using a graceful animation and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").show(\"slow\");"},{"code":"$(\"p\").show(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"show"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Hides each of the set of matched elements if they are shown.","params":[],"short":"Hides each of the set of matched elements if they are shown.","examples":[{"code":"$(\"p\").hide()","result":"[ &lt;p style=\"display: none\"&gt;Hello&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;"}],"tests":[],"name":"hide"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Hide all matched elements using a graceful animation and firing an\noptional callback after completion.\n\nThe height, width, and opacity of each of the matched elements \nare changed dynamically according to the specified speed.","see":"show(String|Number,Function)","params":[{"type":"String|Number","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Hide all matched elements using a graceful animation and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").hide(\"slow\");"},{"code":"$(\"p\").hide(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"hide"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Toggles each of the set of matched elements. If they are shown,\ntoggle makes them hidden. If they are hidden, toggle\nmakes them shown.","params":[],"short":"Toggles each of the set of matched elements.","examples":[{"code":"$(\"p\").toggle()","result":"[ &lt;p style=\"display: none\"&gt;Hello&lt;/p&gt;, &lt;p style=\"display: block\"&gt;Hello Again&lt;/p&gt; ]","before":"&lt;p&gt;Hello&lt;/p&gt;&lt;p style=\"display: none\"&gt;Hello Again&lt;/p&gt;"}],"tests":[],"name":"toggle"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Reveal all matched elements by adjusting their height and firing an\noptional callback after completion.\n\nOnly the height is adjusted for this animation, causing all matched\nelements to be revealed in a \"sliding\" manner.","see":["slideUp(String|Number,Function)","slideToggle(String|Number,Function)"],"params":[{"type":"String|Number","desc":"(optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Reveal all matched elements by adjusting their height and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").slideDown(\"slow\");"},{"code":"$(\"p\").slideDown(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"slideDown"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Hide all matched elements by adjusting their height and firing an\noptional callback after completion.\n\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","see":["slideDown(String|Number,Function)","slideToggle(String|Number,Function)"],"params":[{"type":"String|Number","desc":"(optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Hide all matched elements by adjusting their height and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").slideUp(\"slow\");"},{"code":"$(\"p\").slideUp(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"slideUp"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Toggle the visibility of all matched elements by adjusting their height and firing an\noptional callback after completion.\n\nOnly the height is adjusted for this animation, causing all matched\nelements to be hidden in a \"sliding\" manner.","see":["slideDown(String|Number,Function)","slideUp(String|Number,Function)"],"params":[{"type":"String|Number","desc":"(optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Toggle the visibility of all matched elements by adjusting their height and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").slideToggle(\"slow\");"},{"code":"$(\"p\").slideToggle(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"slideToggle"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Fade in all matched elements by adjusting their opacity and firing an\noptional callback after completion.\n\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","see":["fadeOut(String|Number,Function)","fadeTo(String|Number,Number,Function)"],"params":[{"type":"String|Number","desc":"(optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Fade in all matched elements by adjusting their opacity and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").fadeIn(\"slow\");"},{"code":"$(\"p\").fadeIn(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"fadeIn"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Fade out all matched elements by adjusting their opacity and firing an\noptional callback after completion.\n\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","see":["fadeIn(String|Number,Function)","fadeTo(String|Number,Number,Function)"],"params":[{"type":"String|Number","desc":"(optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Fade out all matched elements by adjusting their opacity and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").fadeOut(\"slow\");"},{"code":"$(\"p\").fadeOut(\"slow\",function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"fadeOut"},{"options":[],"cat":"Effects","type":"jQuery","desc":"Fade the opacity of all matched elements to a specified opacity and firing an\noptional callback after completion.\n\nOnly the opacity is adjusted for this animation, meaning that\nall of the matched elements should already have some form of height\nand width associated with them.","see":["fadeIn(String|Number,Function)","fadeOut(String|Number,Function)"],"params":[{"type":"String|Number","desc":"A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"Number","desc":"The opacity to fade to (a number from 0 to 1).","name":"opacity"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"Fade the opacity of all matched elements to a specified opacity and firing an\noptional callback after completion.","examples":[{"code":"$(\"p\").fadeTo(\"slow\", 0.5);"},{"code":"$(\"p\").fadeTo(\"slow\", 0.5, function(){\n  alert(\"Animation Done.\");\n});"}],"tests":[],"name":"fadeTo"},{"options":[],"cat":"Effects","type":"jQuery","desc":"A function for making your own, custom, animations. The key aspect of\nthis function is the object of style properties that will be animated,\nand to what end. Each key within the object represents a style property\nthat will also be animated (for example: \"height\", \"top\", or \"opacity\").\n\nThe value associated with the key represents to what end the property\nwill be animated. If a number is provided as the value, then the style\nproperty will be transitioned from its current state to that new number.\nOterwise if the string \"hide\", \"show\", or \"toggle\" is provided, a default\nanimation will be constructed for that property.","params":[{"type":"Hash","desc":"A set of style attributes that you wish to animate, and to what end.","name":"params"},{"type":"String|Number","desc":"(optional) A string representing one of the three predefined speeds (\"slow\", \"normal\", or \"fast\") or the number of milliseconds to run the animation (e.g. 1000).","name":"speed"},{"type":"String","desc":"(optional) The name of the easing effect that you want to use (Plugin Required).","name":"easing"},{"type":"Function","desc":"(optional) A function to be executed whenever the animation completes.","name":"callback"}],"short":"A function for making your own, custom, animations.","examples":[{"code":"$(\"p\").animate({\n  height: 'toggle', opacity: 'toggle'\n}, \"slow\");"},{"code":"$(\"p\").animate({\n  left: 50, opacity: 'show'\n}, 500);"},{"desc":"An example of using an 'easing' function to provide a different style of animation. This will only work if you have a plugin that provides this easing function (Only 'linear' is provided by default, with jQuery).","code":"$(\"p\").animate({\n  opacity: 'show'\n}, \"slow\", \"easein\");"}],"tests":[],"name":"animate"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Load HTML from a remote file and inject it into the DOM, only if it's\nbeen modified by the server.","params":[{"type":"String","desc":"The URL of the HTML file to load.","name":"url"},{"type":"Map","desc":"(optional) Key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"(optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).","name":"callback"}],"short":"Load HTML from a remote file and inject it into the DOM, only if it's\nbeen modified by the server.","examples":[{"code":"$(\"#feeds\").loadIfModified(\"feeds.html\");","result":"&lt;div id=\"feeds\"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;","before":"&lt;div id=\"feeds\"&gt;&lt;/div&gt;"}],"tests":[],"name":"loadIfModified"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Load HTML from a remote file and inject it into the DOM.\n\nNote: Avoid to use this to load scripts, instead use $.getScript.\nIE strips script tags when there aren't any other characters in front of it.","params":[{"type":"String","desc":"The URL of the HTML file to load.","name":"url"},{"type":"Object","desc":"(optional) A set of key/value pairs that will be sent as data to the server.","name":"params"},{"type":"Function","desc":"(optional) A function to be executed whenever the data is loaded (parameters: responseText, status and response itself).","name":"callback"}],"short":"Load HTML from a remote file and inject it into the DOM.","examples":[{"code":"$(\"#feeds\").load(\"feeds.html\");","result":"&lt;div id=\"feeds\"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;","before":"&lt;div id=\"feeds\"&gt;&lt;/div&gt;"},{"desc":"Same as above, but with an additional parameter\nand a callback that is executed when the data was loaded.","code":"$(\"#feeds\").load(\"feeds.html\",\n  {limit: 25},\n  function() { alert(\"The last 25 entries in the feed have been loaded\"); }\n);"}],"tests":[],"name":"load"},{"options":[],"cat":"Ajax","type":"String","desc":"Serializes a set of input elements into a string of data.\nThis will serialize all given elements.\n\nA serialization similar to the form submit of a browser is\nprovided by the form plugin. It also takes multiple-selects \ninto account, while this method recognizes only a single option.","params":[],"short":"Serializes a set of input elements into a string of data.","examples":[{"after":"name=John&amp;location=Boston","desc":"Serialize a selection of input elements to a string","before":"&lt;input type='text' name='name' value='John'/&gt;\n&lt;input type='text' name='location' value='Boston'/&gt;","code":"$(\"input[@type=text]\").serialize();"}],"tests":[],"name":"serialize"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Evaluate all script tags inside this jQuery. If they have a src attribute,\nthe script is loaded, otherwise it's content is evaluated.","params":[],"short":"Evaluate all script tags inside this jQuery.","examples":[],"tests":[],"private":1,"name":"evalScripts"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request begins\nand there is none already active.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request begins\nand there is none already active.","examples":[{"desc":"Show a loading message whenever an AJAX request starts\n(and none is already active).","code":"$(\"#loading\").ajaxStart(function(){\n  $(this).show();\n});"}],"tests":[],"name":"ajaxStart"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Attach a function to be executed whenever all AJAX requests have ended.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever all AJAX requests have ended.","examples":[{"desc":"Hide a loading message after all the AJAX requests have stopped.","code":"$(\"#loading\").ajaxStop(function(){\n  $(this).hide();\n});"}],"tests":[],"name":"ajaxStop"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request completes.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request completes.","examples":[{"desc":"Show a message when an AJAX request completes.","code":"$(\"#msg\").ajaxComplete(function(request, settings){\n  $(this).append(\"&lt;li&gt;Request Complete.&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxComplete"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request completes\nsuccessfully.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request completes\nsuccessfully.","examples":[{"desc":"Show a message when an AJAX request completes successfully.","code":"$(\"#msg\").ajaxSuccess(function(request, settings){\n  $(this).append(\"&lt;li&gt;Successful Request!&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxSuccess"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Attach a function to be executed whenever an AJAX request fails.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback. A third argument, an exception object,\nis passed if an exception occured while processing the request.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed whenever an AJAX request fails.","examples":[{"desc":"Show a message when an AJAX request fails.","code":"$(\"#msg\").ajaxError(function(request, settings){\n  $(this).append(\"&lt;li&gt;Error requesting page \" + settings.url + \"&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxError"},{"options":[],"cat":"Ajax","type":"jQuery","desc":"Attach a function to be executed before an AJAX request is sent.\n\nThe XMLHttpRequest and settings used for that request are passed\nas arguments to the callback.","params":[{"type":"Function","desc":"The function to execute.","name":"callback"}],"short":"Attach a function to be executed before an AJAX request is sent.","examples":[{"desc":"Show a message before an AJAX request is sent.","code":"$(\"#msg\").ajaxSend(function(request, settings){\n  $(this).append(\"&lt;li&gt;Starting request at \" + settings.url + \"&lt;/li&gt;\");\n});"}],"tests":[],"name":"ajaxSend"},{"options":[],"cat":"Ajax","type":"XMLHttpRequest","desc":"Load a remote page using an HTTP GET request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Map","desc":"(optional) Key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"(optional) A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote page using an HTTP GET request.","examples":[{"code":"$.get(\"test.cgi\");"},{"code":"$.get(\"test.cgi\", { name: \"John\", time: \"2pm\" } );"},{"code":"$.get(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n});"},{"code":"$.get(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n);"}],"tests":[],"name":"$.get"},{"options":[],"cat":"Ajax","type":"XMLHttpRequest","desc":"Load a remote page using an HTTP GET request, only if it hasn't\nbeen modified since it was last retrieved.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Map","desc":"(optional) Key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"(optional) A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote page using an HTTP GET request, only if it hasn't\nbeen modified since it was last retrieved.","examples":[{"code":"$.getIfModified(\"test.html\");"},{"code":"$.getIfModified(\"test.html\", { name: \"John\", time: \"2pm\" } );"},{"code":"$.getIfModified(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n});"},{"code":"$.getifModified(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n);"}],"tests":[],"name":"$.getIfModified"},{"options":[],"cat":"Ajax","type":"XMLHttpRequest","desc":"Loads, and executes, a remote JavaScript file using an HTTP GET request.\n\nWarning: Safari &lt;= 2.0.x is unable to evalulate scripts in a global\ncontext synchronously. If you load functions via getScript, make sure\nto call them after a delay.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Function","desc":"(optional) A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Loads, and executes, a remote JavaScript file using an HTTP GET request.","examples":[{"code":"$.getScript(\"test.js\");"},{"code":"$.getScript(\"test.js\", function(){\n  alert(\"Script loaded and executed.\");\n});"}],"tests":[],"name":"$.getScript"},{"options":[],"cat":"Ajax","type":"XMLHttpRequest","desc":"Load JSON data using an HTTP GET request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Map","desc":"(optional) Key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load JSON data using an HTTP GET request.","examples":[{"code":"$.getJSON(\"test.js\", function(json){\n  alert(\"JSON Data: \" + json.users[3].name);\n});"},{"code":"$.getJSON(\"test.js\",\n  { name: \"John\", time: \"2pm\" },\n  function(json){\n    alert(\"JSON Data: \" + json.users[3].name);\n  }\n);"}],"tests":[],"name":"$.getJSON"},{"options":[],"cat":"Ajax","type":"XMLHttpRequest","desc":"Load a remote page using an HTTP POST request.","params":[{"type":"String","desc":"The URL of the page to load.","name":"url"},{"type":"Map","desc":"(optional) Key/value pairs that will be sent to the server.","name":"params"},{"type":"Function","desc":"(optional) A function to be executed whenever the data is loaded.","name":"callback"}],"short":"Load a remote page using an HTTP POST request.","examples":[{"code":"$.post(\"test.cgi\");"},{"code":"$.post(\"test.cgi\", { name: \"John\", time: \"2pm\" } );"},{"code":"$.post(\"test.cgi\", function(data){\n  alert(\"Data Loaded: \" + data);\n});"},{"code":"$.post(\"test.cgi\",\n  { name: \"John\", time: \"2pm\" },\n  function(data){\n    alert(\"Data Loaded: \" + data);\n  }\n);"}],"tests":[],"name":"$.post"},{"options":[],"cat":"Ajax","type":"undefined","desc":"Set the timeout of all AJAX requests to a specific amount of time.\nThis will make all future AJAX requests timeout after a specified amount\nof time.\n\nSet to null or 0 to disable timeouts (default).\n\nYou can manually abort requests with the XMLHttpRequest's (returned by\nall ajax functions) abort() method.\n\nDeprecated. Use $.ajaxSetup instead.","params":[{"type":"Number","desc":"How long before an AJAX request times out.","name":"time"}],"short":"Set the timeout of all AJAX requests to a specific amount of time.","examples":[{"desc":"Make all AJAX requests timeout after 5 seconds.","code":"$.ajaxTimeout( 5000 );"}],"tests":[],"name":"$.ajaxTimeout"},{"options":[],"cat":"Ajax","type":"undefined","desc":"Setup global settings for AJAX requests.\n\nSee $.ajax for a description of all available options.","params":[{"type":"Map","desc":"Key/value pairs to use for all AJAX requests","name":"settings"}],"short":"Setup global settings for AJAX requests.","examples":[{"desc":"Sets the defaults for AJAX requests to the url \"/xmlhttp/\",\ndisables global handlers and uses POST instead of GET. The following\nAJAX requests then sends some data without having to set anything else.","code":"$.ajaxSetup( {\n  url: \"/xmlhttp/\",\n  global: false,\n  type: \"POST\"\n} );\n$.ajax({ data: myData });"}],"tests":[],"name":"$.ajaxSetup"},{"options":[],"cat":"Ajax","type":"XMLHttpRequest","desc":"Load a remote page using an HTTP request.\n\nThis is jQuery's low-level AJAX implementation. See $.get, $.post etc. for\nhigher-level abstractions.\n\n$.ajax() returns the XMLHttpRequest that it creates. In most cases you won't\nneed that object to manipulate directly, but it is available if you need to\nabort the request manually.\n\nNote: Make sure the server sends the right mimetype (eg. xml as\n\"text/xml\"). Sending the wrong mimetype will get you into serious\ntrouble that jQuery can't solve.\n\nSupported datatypes are (see dataType option):\n\n\"xml\": Returns a XML document that can be processed via jQuery.\n\n\"html\": Returns HTML as plain text, included script tags are evaluated.\n\n\"script\": Evaluates the response as Javascript and returns it as plain text.\n\n\"json\": Evaluates the response as JSON and returns a Javascript Object\n\n$.ajax() takes one argument, an object of key/value pairs, that are\nused to initalize and handle the request. These are all the key/values that can\nbe used:\n\n(String) url - The URL to request.\n\n(String) type - The type of request to make (\"POST\" or \"GET\"), default is \"GET\".\n\n(String) dataType - The type of data that you're expecting back from\nthe server. No default: If the server sends xml, the responseXML, otherwise\nthe responseText is passed to the success callback.\n\n(Boolean) ifModified - Allow the request to be successful only if the\nresponse has changed since the last request. This is done by checking the\nLast-Modified header. Default value is false, ignoring the header.\n\n(Number) timeout - Local timeout to override global timeout, eg. to give a\nsingle request a longer timeout while all others timeout after 1 second.\nSee $.ajaxTimeout() for global timeouts.\n\n(Boolean) global - Whether to trigger global AJAX event handlers for\nthis request, default is true. Set to false to prevent that global handlers\nlike ajaxStart or ajaxStop are triggered.\n\n(Function) error - A function to be called if the request fails. The\nfunction gets passed tree arguments: The XMLHttpRequest object, a\nstring describing the type of error that occurred and an optional\nexception object, if one occured.\n\n(Function) success - A function to be called if the request succeeds. The\nfunction gets passed one argument: The data returned from the server,\nformatted according to the 'dataType' parameter.\n\n(Function) complete - A function to be called when the request finishes. The\nfunction gets passed two arguments: The XMLHttpRequest object and a\nstring describing the type of success of the request.\n\n(Object|String) data - Data to be sent to the server. Converted to a query\nstring, if not already a string. Is appended to the url for GET-requests.\nSee processData option to prevent this automatic processing.\n\n(String) contentType - When sending data to the server, use this content-type.\nDefault is \"application/x-www-form-urlencoded\", which is fine for most cases.\n\n(Boolean) processData - By default, data passed in to the data option as an object\nother as string will be processed and transformed into a query string, fitting to\nthe default content-type \"application/x-www-form-urlencoded\". If you want to send\nDOMDocuments, set this option to false.\n\n(Boolean) async - By default, all requests are sent asynchronous (set to true).\nIf you need synchronous requests, set this option to false.\n\n(Function) beforeSend - A pre-callback to set custom headers etc., the\nXMLHttpRequest is passed as the only argument.","see":"ajaxSetup(Map)","params":[{"type":"Map","desc":"Key/value pairs to initialize the request with.","name":"properties"}],"short":"Load a remote page using an HTTP request.","examples":[{"desc":"Load and execute a JavaScript file.","code":"$.ajax({\n  type: \"GET\",\n  url: \"test.js\",\n  dataType: \"script\"\n})"},{"desc":"Save some data to the server and notify the user once its complete.","code":"$.ajax({\n  type: \"POST\",\n  url: \"some.php\",\n  data: \"name=John&amp;location=Boston\",\n  success: function(msg){\n    alert( \"Data Saved: \" + msg );\n  }\n});"},{"desc":"Loads data synchronously. Blocks the browser while the requests is active.\nIt is better to block user interaction with others means when synchronization is\nnecessary, instead to block the complete browser.","code":"var html = $.ajax({\n url: \"some.php\",\n async: false\n}).responseText;"},{"desc":"Sends an xml document as data to the server. By setting the processData\noption to false, the automatic conversion of data to strings is prevented.","code":"var xmlDocument = [create xml document];\n$.ajax({\n  url: \"page.php\",\n  processData: false,\n  data: xmlDocument,\n  success: handleResponse\n});"}],"tests":[],"name":"$.ajax"}]